Test cases listed by Category:
==============================

* Binary operators

  test-146.cs

* Overloading

  test-147.cs

* Try/Catch blocks

  verify-1.cs verify-2.cs

* Indexers and Properties

  test-148.cs

* Events and Delegates

  test-149.cs verify-3.cs

* Constant Folding

  test-150.cs

* Switch blocks

  test-152.cs

* Member Access & Simple Names

  test-151.cs

* Invocation

  test-153.cs

* Flow Analysis

  test-154.cs error-1.cs

* Type Containers

  test-155.cs

Test cases listed by Number:
============================

test-146.cs
-----------
Test for Binary.EmitBrancheable() to ensure we're emitting correct
unsinged branch targets.

test-147.cs
-----------
Testing `new' modifier.

test-148.cs
-----------
Testing the `IndexerName' attribute in interface indexers.

test-149.cs
-----------
Testing interface events.

test-150.cs
-----------
Test for folding of UIntConstants.  See bug #28106.
FIXME:  We should all all possible test cases to this test.

test-151.cs
-----------

  A.Iface b;
  void doit (Object A) {
    b = (A.Iface)A;
 }

test-152.cs
-----------
Scope of variables declared inside a switch case.

test-153.cs
-----------
Testing invocation of varargs function.

test-154.cs
-----------
Flow analysis: This test contains all situations which are "allowed".

test-155.cs
-----------
Nested interfaces.

error-1.cs
----------
Flow analysis: Check whether mcs correctly reports all errors.

verify-1.cs
-----------
Test whether we do not jump out of the method in a Try/Finally block.

verify-2.cs
-----------
Test whether `return' in a Try/Catch block actually returns.  Test
whether continue uses Leave when the branch is across Try/Catch
boundaries.

verify-3.cs
-----------
Checks default add/remove method of static events.
