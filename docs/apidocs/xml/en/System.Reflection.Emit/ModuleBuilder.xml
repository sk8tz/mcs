<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE monodoc SYSTEM "http://www.go-mono.org/monodoc.dtd">
<monodoc language="en">
    <class name="System.Reflection.Emit.ModuleBuilder" assembly="corlib">
        <summary>TODO</summary>
        <remarks>TODO</remarks>
        <property name="FullyQualifiedName">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <method name="GetType(System.String, System.Boolean, System.Boolean)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="className">TODO</param>
            <param name="throwOnError">TODO</param>
            <param name="ignoreCase">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetType(System.String, System.Boolean)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="className">TODO</param>
            <param name="ignoreCase">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetType(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="className">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineType(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineType(System.String, System.Reflection.TypeAttributes)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="attr">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="attr">TODO</param>
            <param name="parent">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="attr">TODO</param>
            <param name="parent">TODO</param>
            <param name="interfaces">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="attr">TODO</param>
            <param name="parent">TODO</param>
            <param name="typesize">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="attr">TODO</param>
            <param name="parent">TODO</param>
            <param name="packsize">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="attr">TODO</param>
            <param name="parent">TODO</param>
            <param name="packsize">TODO</param>
            <param name="typesize">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetArrayMethod(System.Type, System.String, System.Reflection.CallingConventions, System.Type, System.Type[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="arrayClass">TODO</param>
            <param name="methodName">TODO</param>
            <param name="callingConvention">TODO</param>
            <param name="returnType">TODO</param>
            <param name="parameterTypes">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineEnum(System.String, System.Reflection.TypeAttributes, System.Type)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="visibility">TODO</param>
            <param name="underlyingType">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="customBuilder">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="con">TODO</param>
            <param name="binaryAttribute">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetSymWriter">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
    </class>
</monodoc>