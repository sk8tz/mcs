<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE monodoc SYSTEM "http://www.go-mono.org/monodoc.dtd">
<monodoc language="en">
    <class name="System.Collections.ArrayList" assembly="corlib">
        <summary>TODO</summary>
        <remarks>TODO</remarks>
        <constructor name="ArrayList">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
        </constructor>
        <constructor name="ArrayList(System.Collections.ICollection)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
        </constructor>
        <constructor name="ArrayList(System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="capacity">TODO</param>
        </constructor>
        <property name="Capacity">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Count">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="IsFixedSize">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="IsReadOnly">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="IsSynchronized">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Item">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="SyncRoot">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <method name="Clone">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="GetEnumerator">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="CopyTo(System.Array, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="array">TODO</param>
            <param name="arrayIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="RemoveAt(System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Remove(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="obj">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Insert(System.Int32, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOf(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Contains(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="item">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Clear">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Add(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="TrimToSize">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="ToArray(System.Type)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="type">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToArray">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Sort(System.Int32, System.Int32, System.Collections.IComparer)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="count">TODO</param>
            <param name="comparer">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Sort(System.Collections.IComparer)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="comparer">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Sort">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="SetRange(System.Int32, System.Collections.ICollection)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Reverse(System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Reverse">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="RemoveRange(System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOf(System.Object, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="StartIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOf(System.Object, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOf(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="InsertRange(System.Int32, System.Collections.ICollection)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOf(System.Object, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOf(System.Object, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetRange(System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetEnumerator(System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CopyTo(System.Int32, System.Array, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="array">TODO</param>
            <param name="arrayIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CopyTo(System.Array)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="array">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BinarySearch(System.Int32, System.Int32, System.Object, System.Collections.IComparer)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="index">TODO</param>
            <param name="count">TODO</param>
            <param name="value">TODO</param>
            <param name="comparer">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BinarySearch(System.Object, System.Collections.IComparer)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="comparer">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BinarySearch(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="AddRange(System.Collections.ICollection)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ReadOnly(System.Collections.ArrayList)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="list">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ReadOnly(System.Collections.IList)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="list">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Synchronized(System.Collections.ArrayList)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="list">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Synchronized(System.Collections.IList)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="list">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="FixedSize(System.Collections.ArrayList)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="list">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="FixedSize(System.Collections.IList)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="list">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Repeat(System.Object, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Adapter(System.Collections.IList)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="list">TODO</param>
            <returns>TODO</returns>
        </method>
    </class>
</monodoc>