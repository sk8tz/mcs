<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE monodoc SYSTEM "http://www.go-mono.org/monodoc.dtd">
<monodoc language="en">
    <class name="System.String" assembly="corlib">
        <summary>TODO</summary>
        <remarks>TODO</remarks>
        <constructor name="String(System.Char*)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
        </constructor>
        <constructor name="String(System.Char[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
        </constructor>
        <constructor name="String(System.SByte*)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
        </constructor>
        <constructor name="String(System.Char, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <param name="count">TODO</param>
        </constructor>
        <constructor name="String(System.Char*, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="length">TODO</param>
        </constructor>
        <constructor name="String(System.Char[], System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="length">TODO</param>
        </constructor>
        <constructor name="String(System.SByte*, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="length">TODO</param>
        </constructor>
        <constructor name="String(System.SByte*, System.Int32, System.Int32, System.Text.Encoding)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="length">TODO</param>
            <param name="enc">TODO</param>
        </constructor>
        <field name="Empty">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
        </field>
        <property name="Length">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Chars">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <method name="GetTypeCode">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Clone">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="CompareTo(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="obj">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetHashCode">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Equals(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="obj">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToString">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Compare(System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="strA">TODO</param>
            <param name="strB">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Compare(System.String, System.String, System.Boolean)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="strA">TODO</param>
            <param name="strB">TODO</param>
            <param name="ignoreCase">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Compare(System.String, System.String, System.Boolean, System.Globalization.CultureInfo)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="strA">TODO</param>
            <param name="strB">TODO</param>
            <param name="ignoreCase">TODO</param>
            <param name="culture">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Compare(System.String, System.Int32, System.String, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="strA">TODO</param>
            <param name="indexA">TODO</param>
            <param name="strB">TODO</param>
            <param name="indexB">TODO</param>
            <param name="length">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Compare(System.String, System.Int32, System.String, System.Int32, System.Int32, System.Boolean)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="strA">TODO</param>
            <param name="indexA">TODO</param>
            <param name="strB">TODO</param>
            <param name="indexB">TODO</param>
            <param name="length">TODO</param>
            <param name="ignoreCase">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Compare(System.String, System.Int32, System.String, System.Int32, System.Int32, System.Boolean, System.Globalization.CultureInfo)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="strA">TODO</param>
            <param name="indexA">TODO</param>
            <param name="strB">TODO</param>
            <param name="indexB">TODO</param>
            <param name="length">TODO</param>
            <param name="ignoreCase">TODO</param>
            <param name="culture">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CompareOrdinal(System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="strA">TODO</param>
            <param name="strB">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CompareOrdinal(System.String, System.Int32, System.String, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="strA">TODO</param>
            <param name="indexA">TODO</param>
            <param name="strB">TODO</param>
            <param name="indexB">TODO</param>
            <param name="length">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CompareTo(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Concat(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="arg">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Concat(System.Object[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="args">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Concat(System.String[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="values">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Concat(System.Object, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="arg0">TODO</param>
            <param name="arg1">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Concat(System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str0">TODO</param>
            <param name="str1">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Concat(System.Object, System.Object, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="arg0">TODO</param>
            <param name="arg1">TODO</param>
            <param name="arg2">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Concat(System.String, System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str0">TODO</param>
            <param name="str1">TODO</param>
            <param name="str2">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Concat(System.String, System.String, System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str0">TODO</param>
            <param name="str1">TODO</param>
            <param name="str2">TODO</param>
            <param name="str3">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Copy(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CopyTo(System.Int32, System.Char[], System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="sourceIndex">TODO</param>
            <param name="destination">TODO</param>
            <param name="destinationIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="EndsWith(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Equals(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Equals(System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="a">TODO</param>
            <param name="b">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Format(System.String, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="format">TODO</param>
            <param name="arg0">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Format(System.String, System.Object, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="format">TODO</param>
            <param name="arg0">TODO</param>
            <param name="arg1">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Format(System.String, System.Object, System.Object, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="format">TODO</param>
            <param name="arg0">TODO</param>
            <param name="arg1">TODO</param>
            <param name="arg2">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Format(System.String, System.Object[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="format">TODO</param>
            <param name="args">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Format(System.IFormatProvider, System.String, System.Object[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <param name="format">TODO</param>
            <param name="args">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetEnumerator">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="IndexOf(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOf(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOf(System.Char, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOf(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOf(System.Char, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOf(System.String, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOfAny(System.Char[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="values">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOfAny(System.Char[], System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="values">TODO</param>
            <param name="startIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IndexOfAny(System.Char[], System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="values">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Insert(System.Int32, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="startIndex">TODO</param>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Intern(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsInterned(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Join(System.String, System.String[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="separator">TODO</param>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Join(System.String, System.String[], System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="separator">TODO</param>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOf(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOf(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOf(System.Char, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOf(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOf(System.Char, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOf(System.String, System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOfAny(System.Char[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="values">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOfAny(System.Char[], System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="values">TODO</param>
            <param name="startIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="LastIndexOfAny(System.Char[], System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="values">TODO</param>
            <param name="startIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="PadLeft(System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="totalWidth">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="PadLeft(System.Int32, System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="totalWidth">TODO</param>
            <param name="padChar">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="PadRight(System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="totalWidth">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="PadRight(System.Int32, System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="totalWidth">TODO</param>
            <param name="padChar">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Remove(System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="startIndex">TODO</param>
            <param name="count">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Replace(System.Char, System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="oldChar">TODO</param>
            <param name="newChar">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Replace(System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="oldValue">TODO</param>
            <param name="newValue">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Split(System.Char[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="separator">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Split(System.Char[], System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="separator">TODO</param>
            <param name="maxCount">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="StartsWith(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Substring(System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="startIndex">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Substring(System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="startIndex">TODO</param>
            <param name="length">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToCharArray">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="ToCharArray(System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="startIndex">TODO</param>
            <param name="length">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToLower">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="ToLower(System.Globalization.CultureInfo)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="culture">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToUpper">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="ToUpper(System.Globalization.CultureInfo)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="culture">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Trim">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Trim(System.Char[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="trimChars">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="TrimEnd(System.Char[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="trimChars">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="TrimStart(System.Char[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="trimChars">TODO</param>
            <returns>TODO</returns>
        </method>
        <operator name="op_Equality(System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="a">TODO</param>
            <param name="b">TODO</param>
            <returns>TODO</returns>
        </operator>
        <operator name="op_Inequality(System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="a">TODO</param>
            <param name="b">TODO</param>
            <returns>TODO</returns>
        </operator>
    </class>
</monodoc>