<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE monodoc SYSTEM "http://www.go-mono.org/monodoc.dtd">
<monodoc language="en">
    <struct name="System.Char" assembly="corlib">
        <summary>TODO</summary>
        <remarks>TODO</remarks>
        <field name="value">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
        </field>
        <field name="MaxValue">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
        </field>
        <field name="MinValue">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
        </field>
        <method name="ToUInt64(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToUInt32(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToUInt16(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToType(System.Type, System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="conversionType">TODO</param>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToSingle(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToSByte(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToInt64(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToInt32(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToInt16(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToDouble(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToDecimal(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToDateTime(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToChar(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToByte(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToBoolean(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="provider">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetTypeCode">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="CompareTo(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="v">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetHashCode">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Equals(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="o">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToString">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="GetNumericValue(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetNumericValue(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetUnicodeCategory(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetUnicodeCategory(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsControl(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsControl(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsDigit(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsDigit(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsLetter(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsLetter(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsLetterOrDigit(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsLetterOrDigit(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsLower(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsLower(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsNumber(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsNumber(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsPunctuation(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsPunctuation(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsSeparator(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsSeparator(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsSurrogate(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsSurrogate(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsSymbol(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsSymbol(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsUpper(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsUpper(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsWhiteSpace(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IsWhiteSpace(System.String, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <param name="index">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Parse(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="str">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToLower(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToUpper(System.Char)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="c">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ToString(System.IFormatProvider)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="fp">TODO</param>
            <returns>TODO</returns>
        </method>
    </struct>
</monodoc>