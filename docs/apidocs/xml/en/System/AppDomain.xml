<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE monodoc SYSTEM "http://www.go-mono.org/monodoc.dtd">
<monodoc language="en">
    <class name="System.AppDomain" assembly="corlib">
        <summary>TODO</summary>
        <remarks>TODO</remarks>
        <property name="SetupInformation">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="BaseDirectory">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="RelativeSearchPath">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="DynamicDirectory">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="ShadowCopyFiles">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="FriendlyName">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Evidence">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="CurrentDomain">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <method name="SetThreadPrincipal(System.Security.Principal.IPrincipal)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="principal">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetShadowCopyPath(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="s">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="policy">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetData(System.String, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="data">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetCachePath(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="s">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetAppDomainPolicy(System.Security.Policy.PolicyLevel)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="domainPolicy">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Load(System.Byte[], System.Byte[], System.Security.Policy.Evidence)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="rawAssembly">TODO</param>
            <param name="rawSymbolStore">TODO</param>
            <param name="securityEvidence">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Load(System.String, System.Security.Policy.Evidence)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyString">TODO</param>
            <param name="assemblySecurity">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Load(System.Byte[], System.Byte[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="rawAssembly">TODO</param>
            <param name="rawSymbolStore">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Load(System.Reflection.AssemblyName, System.Security.Policy.Evidence)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyRef">TODO</param>
            <param name="assemblySecurity">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Load(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyString">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Load(System.Byte[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="rawAssembly">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Load(System.Reflection.AssemblyName)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyRef">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetData(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetAssemblies">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="ExecuteAssembly(System.String, System.Security.Policy.Evidence, System.String[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyFile">TODO</param>
            <param name="assemblySecurity">TODO</param>
            <param name="args">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ExecuteAssembly(System.String, System.Security.Policy.Evidence)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyFile">TODO</param>
            <param name="assemblySecurity">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ExecuteAssembly(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyFile">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DoCallBack(System.CrossAppDomainDelegate)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="theDelegate">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.String, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet, System.Boolean)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="access">TODO</param>
            <param name="dir">TODO</param>
            <param name="evidence">TODO</param>
            <param name="requiredPermissions">TODO</param>
            <param name="optionalPermissions">TODO</param>
            <param name="refusedPersmissions">TODO</param>
            <param name="isSynchronized">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.String, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="access">TODO</param>
            <param name="dir">TODO</param>
            <param name="evidence">TODO</param>
            <param name="requiredPermissions">TODO</param>
            <param name="optionalPermissions">TODO</param>
            <param name="refusedPersmissions">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.String, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="access">TODO</param>
            <param name="dir">TODO</param>
            <param name="requiredPermissions">TODO</param>
            <param name="optionalPermissions">TODO</param>
            <param name="refusedPersmissions">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Security.Policy.Evidence, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="access">TODO</param>
            <param name="evidence">TODO</param>
            <param name="requiredPermissions">TODO</param>
            <param name="optionalPermissions">TODO</param>
            <param name="refusedPersmissions">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="access">TODO</param>
            <param name="requiredPermissions">TODO</param>
            <param name="optionalPermissions">TODO</param>
            <param name="refusedPersmissions">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.String, System.Security.Policy.Evidence)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="access">TODO</param>
            <param name="dir">TODO</param>
            <param name="evidence">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="access">TODO</param>
            <param name="dir">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess, System.Security.Policy.Evidence)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="access">TODO</param>
            <param name="evidence">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="name">TODO</param>
            <param name="access">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateInstanceFrom(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyName">TODO</param>
            <param name="typeName">TODO</param>
            <param name="ignoreCase">TODO</param>
            <param name="bindingAttr">TODO</param>
            <param name="binder">TODO</param>
            <param name="args">TODO</param>
            <param name="culture">TODO</param>
            <param name="activationAttributes">TODO</param>
            <param name="securityAttribtutes">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateInstanceFrom(System.String, System.String, System.Object[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyName">TODO</param>
            <param name="typeName">TODO</param>
            <param name="activationAttributes">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateInstanceFrom(System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyName">TODO</param>
            <param name="typeName">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateInstance(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyName">TODO</param>
            <param name="typeName">TODO</param>
            <param name="ignoreCase">TODO</param>
            <param name="bindingAttr">TODO</param>
            <param name="binder">TODO</param>
            <param name="args">TODO</param>
            <param name="culture">TODO</param>
            <param name="activationAttributes">TODO</param>
            <param name="securityAttribtutes">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateInstance(System.String, System.String, System.Object[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyName">TODO</param>
            <param name="typeName">TODO</param>
            <param name="activationAttributes">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateInstance(System.String, System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="assemblyName">TODO</param>
            <param name="typeName">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ClearShadowCopyPath">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="ClearPrivatePath">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="AppendPrivatePath(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="path">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="InitializeLifetimeService">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="GetHashCode">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Equals(System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="other">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateDomain(System.String)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="friendlyName">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateDomain(System.String, System.Security.Policy.Evidence)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="friendlyName">TODO</param>
            <param name="securityInfo">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateDomain(System.String, System.Security.Policy.Evidence, System.AppDomainSetup)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="friendlyName">TODO</param>
            <param name="securityInfo">TODO</param>
            <param name="info">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="CreateDomain(System.String, System.Security.Policy.Evidence, System.String, System.String, System.Boolean)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="friendlyName">TODO</param>
            <param name="securityInfo">TODO</param>
            <param name="appBasePath">TODO</param>
            <param name="appRelativeSearchPath">TODO</param>
            <param name="shadowCopyFiles">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Unload(System.AppDomain)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="domain">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetCurrentThreadId">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <event name="AssemblyLoad">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <data>TODO</data>
        </event>
        <event name="AssemblyResolve">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <data>TODO</data>
        </event>
        <event name="DomainUnload">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <data>TODO</data>
        </event>
        <event name="ProcessExit">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <data>TODO</data>
        </event>
        <event name="ResourceResolve">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <data>TODO</data>
        </event>
        <event name="TypeResolve">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <data>TODO</data>
        </event>
        <event name="UnhandledException">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <data>TODO</data>
        </event>
    </class>
</monodoc>