<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE monodoc SYSTEM "http://www.go-mono.org/monodoc.dtd">
<monodoc language="en">
    <class name="System.Net.Sockets.NetworkStream" assembly="System">
        <summary>TODO</summary>
        <remarks>TODO</remarks>
        <constructor name="NetworkStream(System.Net.Sockets.Socket)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="socket">TODO</param>
        </constructor>
        <constructor name="NetworkStream(System.Net.Sockets.Socket, System.Boolean)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="socket">TODO</param>
            <param name="owns_socket">TODO</param>
        </constructor>
        <constructor name="NetworkStream(System.Net.Sockets.Socket, System.IO.FileAccess)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="socket">TODO</param>
            <param name="access">TODO</param>
        </constructor>
        <constructor name="NetworkStream(System.Net.Sockets.Socket, System.IO.FileAccess, System.Boolean)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="socket">TODO</param>
            <param name="access">TODO</param>
            <param name="owns_socket">TODO</param>
        </constructor>
        <property name="CanRead">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="CanSeek">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="CanWrite">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="DataAvailable">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Length">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Position">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Readable">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Socket">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Writeable">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <method name="Write(System.Byte[], System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Read(System.Byte[], System.Int32, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetLength(System.Int64)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Seek(System.Int64, System.IO.SeekOrigin)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="offset">TODO</param>
            <param name="origin">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="EndWrite(System.IAsyncResult)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="ar">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="callback">TODO</param>
            <param name="state">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="EndRead(System.IAsyncResult)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="ar">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="callback">TODO</param>
            <param name="state">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Flush">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Close">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
    </class>
</monodoc>