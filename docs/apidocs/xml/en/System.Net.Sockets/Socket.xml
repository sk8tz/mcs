<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE monodoc SYSTEM "http://www.go-mono.org/monodoc.dtd">
<monodoc language="en">
    <class name="System.Net.Sockets.Socket" assembly="System">
        <summary>TODO</summary>
        <remarks>TODO</remarks>
        <constructor name="Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="family">TODO</param>
            <param name="type">TODO</param>
            <param name="proto">TODO</param>
        </constructor>
        <property name="AddressFamily">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Available">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Blocking">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Connected">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="Handle">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="LocalEndPoint">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="ProtocolType">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="RemoteEndPoint">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <property name="SocketType">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <value>TODO</value>
        </property>
        <method name="Dispose">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Select(System.Collections.IList, System.Collections.IList, System.Collections.IList, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="read_list">TODO</param>
            <param name="write_list">TODO</param>
            <param name="err_list">TODO</param>
            <param name="time_us">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Accept">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="BeginAccept(System.AsyncCallback, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="callback">TODO</param>
            <param name="state">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BeginConnect(System.Net.EndPoint, System.AsyncCallback, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="end_point">TODO</param>
            <param name="callback">TODO</param>
            <param name="state">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BeginReceive(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.AsyncCallback, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="socket_flags">TODO</param>
            <param name="callback">TODO</param>
            <param name="state">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BeginReceiveFrom(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint&amp;, System.AsyncCallback, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="socket_flags">TODO</param>
            <param name="remote_end">TODO</param>
            <param name="callback">TODO</param>
            <param name="state">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BeginSend(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.AsyncCallback, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="socket_flags">TODO</param>
            <param name="callback">TODO</param>
            <param name="state">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="BeginSendTo(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint, System.AsyncCallback, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="socket_flags">TODO</param>
            <param name="remote_end">TODO</param>
            <param name="callback">TODO</param>
            <param name="state">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Bind(System.Net.EndPoint)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="local_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Close">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <returns>TODO</returns>
        </method>
        <method name="Connect(System.Net.EndPoint)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="remote_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="EndAccept(System.IAsyncResult)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="result">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="EndConnect(System.IAsyncResult)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="result">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="EndReceive(System.IAsyncResult)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="result">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="EndReceiveFrom(System.IAsyncResult, System.Net.EndPoint&amp;)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="result">TODO</param>
            <param name="end_point">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="EndSend(System.IAsyncResult)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="result">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="EndSendTo(System.IAsyncResult)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="result">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="level">TODO</param>
            <param name="name">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="level">TODO</param>
            <param name="name">TODO</param>
            <param name="opt_value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="level">TODO</param>
            <param name="name">TODO</param>
            <param name="length">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="IOControl(System.Int32, System.Byte[], System.Byte[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="ioctl_code">TODO</param>
            <param name="in_value">TODO</param>
            <param name="out_value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Listen(System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="backlog">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Poll(System.Int32, System.Net.Sockets.SelectMode)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="time_us">TODO</param>
            <param name="mode">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Receive(System.Byte[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Receive(System.Byte[], System.Net.Sockets.SocketFlags)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="flags">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Receive(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="size">TODO</param>
            <param name="flags">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Receive(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="flags">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ReceiveFrom(System.Byte[], System.Net.EndPoint&amp;)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="remote_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ReceiveFrom(System.Byte[], System.Net.Sockets.SocketFlags, System.Net.EndPoint&amp;)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="flags">TODO</param>
            <param name="remote_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ReceiveFrom(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint&amp;)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="size">TODO</param>
            <param name="flags">TODO</param>
            <param name="remote_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="ReceiveFrom(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint&amp;)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="flags">TODO</param>
            <param name="remote_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Send(System.Byte[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Send(System.Byte[], System.Net.Sockets.SocketFlags)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="flags">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Send(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="size">TODO</param>
            <param name="flags">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Send(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buf">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="flags">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SendTo(System.Byte[], System.Net.EndPoint)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="remote_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SendTo(System.Byte[], System.Net.Sockets.SocketFlags, System.Net.EndPoint)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="flags">TODO</param>
            <param name="remote_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SendTo(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="size">TODO</param>
            <param name="flags">TODO</param>
            <param name="remote_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SendTo(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="buffer">TODO</param>
            <param name="offset">TODO</param>
            <param name="size">TODO</param>
            <param name="flags">TODO</param>
            <param name="remote_end">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte[])">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="level">TODO</param>
            <param name="name">TODO</param>
            <param name="opt_value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Int32)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="level">TODO</param>
            <param name="name">TODO</param>
            <param name="opt_value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Object)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="level">TODO</param>
            <param name="name">TODO</param>
            <param name="opt_value">TODO</param>
            <returns>TODO</returns>
        </method>
        <method name="Shutdown(System.Net.Sockets.SocketShutdown)">
            <summary>TODO</summary>
            <remarks>TODO</remarks>
            <param name="how">TODO</param>
            <returns>TODO</returns>
        </method>
    </class>
</monodoc>