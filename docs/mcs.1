.TH mcs 1 "6 January 2001"
.SH NAME 
mcs \- Mono Compiler Suite.
.SH SYNOPSIS
.B mcs 
[option] [source-files]
.SH DESCRIPTION
mcs is the Mono C# compiler, an implementation of the ECMA-334
specification.  You can pass one or more options to drive the
compiler, and a set of source files.  Extra options or arguments can
be provided in a response file.  Response files are referenced by
prepending the @ symbol to the response file name.
.PP
C# source files must end with a ".cs" extension.  Compilation of C#
source code requires all the files that make up a library, module or
executable to be provided on the command line.  There is no support
for partial compilation.  To achieve the benefits of partial
compilation, you should compile programs into their own assemblies,
and later reference them with the "-r" flag.
.PP
The Mono C# compiler generates images (.exe files) that contain CIL
byte code that can be executed by any system that implements a Common
Language Infrastructure virtual machine such as the Microsoft .NET
runtime engine on Windows or the Mono runtime engine on Unix systems.
Executables are not bound to a specific CPU or operating system.
.PP
.SH OPTIONS
.TP
.I \-\-about
Displays information about the Mono C# compiler
.TP
.I \-\-checked
Sets the default compilation mode to `checked'.  This makes all
the math operations checked (the default is unchecked).
.TP
.I \-\-define SYMBOL
Defines a symbol named SYMBOL.  This can be tested in the source code
by the pre-processor.
.TP
.I \-\-fatal 
This is used for debugging the compiler.  This makes the error emission
generate an exception that can be caught by a debugger.
.TP
.I \-\-stacktrace
Generates a stack trace at the time the error is reported, useful for
debugging the compiler.
.TP
.I \-L PATH
Directs the compiler to look for libraries in the specified path.
Multiple paths can be provided.
.TP
.I \-\-nostdlib
Use this flag if you want to compile the core library.  This makes the
compiler load its internal types from the assembly being compiled.
.TP
.I \-\-nowarn XXX
Makes the compiler ignore warning XXX.
.TP
.I \-o FNAME
Names the output file to be generated.
.TP
.I \-\-optimize
Turns on optimizations in the compiler.  
.TP
.I \-\-parse
Used for benchmarking.  The compiler will only parse its input files.
.TP
.I \-\-probe X L
Probes for the code to generate an error named `X' in line `L'.  This
is only used by the test suite.
.TP
.I \-\-target KIND
Used to specify the desired target.  The possible values are: exe,
winexe, library and module.  
.TP
.I \-\-timestamp
Another debugging flag.  Used to display the times at various points
in the compilation process.
.TP
.I \-\-unsafe
Enables compilation of unsafe code.
.TP
.I \-\-werror
Treat warnings as errors.
.TP
.I \-\-wlevel LEVEL
Sets the warning level.  0 is the lowest warning level, and 4 is the
highest.  The default is 2.
.TP
.I \-r ASSEMBLY
Reference the named assembly.  Use this to use classes from the named
assembly in your program.
.TP
.I \-v 
Debugging. Turns on verbose yacc parsing.
.PP
.SH AUTHORS
The Mono C# Compiler was written by Miguel de Icaza and Ravi Pratap at
Ximian. 
.PP
.SH LICENSE
The Mono Compiler Suite is released under the terms of the GNU GPL.
Please read the accompanying `COPYING' file for details.  Alternative
licenses are available from Ximian.
.PP
.SH BUGS
To report bugs in the compiler, you can use `bug-buddy', or you can
file bug reports in our bug tracking system:
http://bugzilla.ximian.com.
.SH MAILING LIST
The Mono Mailing List is available at: mono-list-request@ximian.com
.SH MORE INFORMATION
The Mono C# compiler is developed by Ximian, Inc
(http://www.ximian.com) (http://www.ximian.com) and is based on the
ECMA C# language standard available here:
http://www.ecma.ch/ecma1/STAND/ecma-334.htm


