2004-05-20 Atsushi Enomoto <atsushi@ximian.com>

	* XslCopyOf.cs : When evaluation result was result tree fragment (i.e.
	  XPathNavigator) output its content (children).
	* XslNumber.cs : Reflected CompilePattern() change.
	* XslTemplateContent.cs : Don't throw System.Exception.
	* XslVariable.cs : XslVariableInformation.Evaluate() now returns
	  XPathNavigator, not NodeSet (it should not return "children", since
	  the node pointed by XPathNavigator should be referenced as Root).

2004-05-12 Atsushi Enomoto <atsushi@ximian.com>

	* XslNumber.cs : made enum internal

2004-04-24 Atsushi Enomoto <atsushi@ximian.com>

	* XslApplyImport.cs, XslApplyTemplates.cs, XslAttribute.cs,
	  XslAvt.cs, XslCallTemplate.cs, XslComment.cs, XslCompiledElement.cs,
	  XslCopy.cs, XslCopyOf.cs, XslElement.cs, XslFallback.cs,
	  XslForeach.cs, XslIf.cs, XslLiteralElement.cs, XslMessage.cs,
	  XslNumber.cs, XslOperation.cs, XslProcessingInstruction.cs,
	  XslTemplateContent.cs, XslText.cs, XslValueOf.cs, XslVariable.cs :
	  make extra classes internal.

2004-04-24 Atsushi Enomoto <atsushi@ximian.com>

	* XslProcessingInstruction.cs : Culture independency fix.

2004-04-01 Atsushi Enomoto <atsushi@ximian.com>

	* XslVariable.cs : When evaluated variable was BaseIterator, its
	  iterated nodes must be collected in prior. Otherwise, it might be
	  evaluated later with inconsistent level of variable stack in
	  XslTransformProcessor. This fixes bug #55876.

2004-03-22 Atsushi Enomoto <atsushi@ximian.com>

	* XslApplyTemplates.cs,
	  XslAvt.cs,
	  XslCallTemplate.cs,
	  XslChoose.cs,
	  XslIf.cs,
	  XslMessage.cs,
	  XslNumber.cs,
	  XslVariable.cs :
	  Throw XsltCompileException instead of Exception.
	* XslVariable.cs : Reject invalid attributes.

2004-02-13 Atsushi Enomoto <atsushi@ximian.com>

	* XslVariable.cs : Replaced XmlNodeWriter with DTMXPathDocumentWriter.

2004-01-27 Atsushi Enomoto <atsushi@ximian.com>

	* XslIf.cs : When content is empty, skip content evaluation.

2004-01-14 Atsushi Enomoto <atsushi@ximian.com>

	* XslVariable.cs : Use new GenericOutputter.ctor() to indicate it is
	  created for variable. (It is required not to output "PI for xmldecl"
	  incorrectly.)
	* XslNumber.cs : trivial code refactoring.
	* XslCopy.cs : comment out WriteLine().

2004-01-08  Nick Drochak <ndrochak@ieee.org>

	* XslAttribute.cs: Removed unused variable

2003-12-20 Atsushi Enomoto <atsushi@ximian.com>

	* XslLiteralElement.cs : considering xsl:imports, we have to evaluate
	  namespace aliases at the first evaluation.
	* XslNumber.cs : Fixed incorrect "any" level numbering (and 
	  optimization), format string handling, grouping-separator.

2003-12-16 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslLiteralElement.cs : Pretty fix for prefix.
	* XslNumber.cs : Fix for rounding value and decimal digits hack.

2003-12-05 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslAttribute.cs, XslElement.cs, XslVariable.cs : Check name.
	* XslChoose.cs : Check content validity (xsl:when or xsl:otherwise).
	* XslComment.cs, XslCopy.cs, XslProcessingInstruction.cs, 
	  XslValueOf.cs : Check content and attributes.
	* XslCompiledElement.cs : Added ParentType to check content validity.
	* XslCopy.cs : Check attribute set existence.
	* XslCopy.cs, XslCopyOf.cs  Don't output whitspace as cdata.
	* XslLiteralElement.cs : Added extension element prefixes as 
	  namespace exclusion target. Consider namespace-aliases.
	* XslNumber.cs : level="any" should also be emptiable. MatchesCount()
	  should also consider node type. Reverted a little formatting stuff.
	* XslTemplateContent.cs : Check if content nodes are containable.
	* XslText.cs : New .ctor() argument, specifying if it is whitespace.
	  Never output whitespace as cdata.

2003-12-03 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslNumber.cs : Fixed GetFormatNumber() not to emit number (0) in
	  case of count 0.  Improved format-string, but still wondering.

2003-12-02 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslElement.cs, XslCopy.cs, XslCopyOf.cs, XslLiteralElement.cs :
	  Modified cdata-section-elements handling.
	* XslAttribute.cs, XslElement.cs : Fixed incorrect prefix handling.
	* XslComment.cs : In case of empty value, don't call value.Evaluate().
	* XslCopyOf.cs : Element node should consider cdata-section elements.

2003-11-28 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslCopy.cs, XslCopyOf.cs : namespace nodes should be written.

2003-11-24 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslAttribute.cs, XslElement.cs, XslLiteralElement.cs :
	  More precise namespace handling.
	* XslCopy.cs, XslElement.cs, XslLiteralElement.cs :
	  Added cdata-section-elements support.
	* XslNumber.cs :
	  Cases when value is NodeSet should be allowed.
	  Default output should be 1,2,3... not exception. see XSLT spec 7.7.1

2003-11-21 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslAttribute.cs : Name verification.
	* XslElement.cs : Name verification. Consider IsEmptyElement.
	* XslCopy.cs : copy namespace nodes too.

2003-11-09 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslAttribute.cs : namespace should be String.Empty if no specification
	  exists.
	* XslNumber.cs : default format string is "1". See XSLT spec. 7.7.1.

2003-11-03 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslCompiledElement.cs, XslAttribute.cs, XslElement.cs :
	  Removed Clone() everywhere. Limited only to required places.

2003-11-02 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslCompiledElement.cs : Added InputNode for namespace-prefix support.
	* XslAttribute.cs, XslElement.cs, XslLiteralElement.cs :
	  Correct Prefix support.
	* XslLiteralElement.cs : Moved xmlns output after attribute sets.
	* XslCopy.cs : Added use-attribute-sets support for Root XPath type.
	* XslCopy.cs, XslCopyOf.cs, XslLiteralElement.cs : Support for
	  IsEmptyElement (XslElement not yet. confirm what OASIS tests expect).
	* XslCopy.cs, XslElement.cs, XslLiteralElement.cs : 
	  Support for stylesheet xmlns decls emission.

2003-09-20 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslAttribute.cs, XslElement.cs: Allow dynamically parsed names.

2003-09-19 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslCopyOf.cs: handle attributes.

2003-09-15 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslLiteralElement.cs: must evaluate used attr sets *BEFORE*
	children (so that they get overriden).

2003-09-14 Oleg Tkachenko <oleg@tkachenko.com>
	
	* XslCopyOf.cs - WriteAttributeString instead of 
	WriteStartAttribute/WriteString/WriteEndAttribute.

2003-09-13 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslLiteralElement.cs: reduce enumerator allocation.

2003-08-30 Oleg Tkachenko <oleg@tkachenko.com>

	* XslAttribute.cs: output is now done to TextOutputter, which outputs 
	to a StringWriter.
	* XslVariable.cs: output is done to GenericOutputter.

2003-08-21 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslVariable.cs : use newly introduced XmlNodeWriter.ctor(false) to
	  support for tree fragment, not only for single element.

2003-08-20 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslComment.cs, XslMessage.cs, XslProcessingInsturction.cs:
	Ignore element contnet, per spec. (Oleg)

2003-08-19 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslNumber.cs: Better support for formatting.

2003-08-19 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslNumber.cs: Support for multiple level numbering

2003-08-19 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslNumber.cs: Initial support.

2003-08-19 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslCopyOf.cs, XslLiteralElement: Use namespace support in Outputter.

2003-08-19 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslVariable.cs: sync to API changes.

2003-08-18 Ben Maurer  <bmaurer@users.sourceforge.net>

	* *.cs: Support for xsl:output. (Oleg)

2003-08-17 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslCopyOf.cs: handle default ns
	* XslFallback.cs: implement
	* XslLiteralElement.cs: copy namespaces that were declared.
	* XslTemplateContent.cs: handle ext elements
	
2003-08-17 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslComment.cs, XslTemplateContent.cs: remove dead variables.

2003-08-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XslComment.cs: patch by BenM that implements Evaluate.

2003-08-14 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslCallTemplates.cs : Forgot to commit ;-)

2003-08-14 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XslApplyTemplates.cs,
	  XslCallTemplate.cs : Should accept other than element content such
	  as comment and PI.
	* XslNumber.cs : In Compile(), 'value' might not exist. (Think about 
	  it later if how it should be.)
	* XslTemplateContent.cs : "comment" and "number" support. (I know they
	  are still incomplete.)

2003-08-14 Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* Added XslComment.cs.

2003-08-05 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslVariable.cs: Fix up how variables are evaluated.

2003-08-04 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslMessage.cs: Implement.

2003-08-04 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslText.cs: I can make that parsing simpler!
	* XslText.cs, XslValueof.cs: support for disable-output-escaping.

2003-08-04 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslElement.cs, XslAttribute.cs: Better support for namespaces.
	* XslAvt.cs: When precalculating, if the AVT is null (ie, the
	attribute was not specified), just return null, that will be the
	result.

2003-08-01 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslNumber.cs: More stubbing.

2003-07-31 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslNumber.cs: Stub for parsing xsl:number.

2003-07-31 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslVariable.cs: Add IsEvaluated.

2003-07-30 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslApplyTemplates.cs, XslCallTemplate.cs, XslCompiledElement.cs,
	XslTemplateContent.cs, XslVariable.cs:
	Store variable values in the XslTransformProcessor


2003-07-30 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XslAvt.cs, XslCopyOf.cs, XslIf.cs, XslText.cs, XslValueOf.cs,
	XslVariable.cs:
	Use new strong typed methods, remove verbose debugging messages.


2003-07-29 Ben Maurer  <bmaurer@users.sourceforge.net>

	* Initial Checkin

