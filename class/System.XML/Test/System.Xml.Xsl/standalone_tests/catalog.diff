--- catalog.xml	2004-07-12 17:35:00.000000000 +0900
+++ catalog-new.xml	2005-02-15 16:50:38.959713600 +0900
@@ -4698,9 +4698,9 @@
 <purpose>Test of lang() function</purpose>
 <spec-citation place="4.3" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">expr04.xml</input-file>
-<input-file role="principal-stylesheet">expr04.xsl</input-file>
-<output-file role="principal" compare="XML">expr04.out</output-file>
+<input-file role="principal-data">expression04.xml</input-file>
+<input-file role="principal-stylesheet">expression04.xsl</input-file>
+<output-file role="principal" compare="XML">expression04.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="expression_expression05">
@@ -12276,94 +12276,94 @@
 <output-file role="principal" compare="XML">numbering95.out</output-file>
 </scenario>
 </test-case>
-	<test-case category="XSLT-Result-Tree" id="output_outp01">
+	<test-case category="XSLT-Result-Tree" id="output_output01">
 <file-path>output</file-path>
 <purpose>Test for SCRIPT handling</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp01.xml</input-file>
-<input-file role="principal-stylesheet">outp01.xsl</input-file>
-<output-file role="principal" compare="XML">outp01.out</output-file>
+<input-file role="principal-data">output01.xml</input-file>
+<input-file role="principal-stylesheet">output01.xsl</input-file>
+<output-file role="principal" compare="XML">output01.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp02">
+<test-case category="XSLT-Result-Tree" id="output_output02">
 <file-path>output</file-path>
 <purpose>Test for STYLE handling</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp02.xml</input-file>
-<input-file role="principal-stylesheet">outp02.xsl</input-file>
-<output-file role="principal" compare="XML">outp02.out</output-file>
+<input-file role="principal-data">output02.xml</input-file>
+<input-file role="principal-stylesheet">output02.xsl</input-file>
+<output-file role="principal" compare="XML">output02.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp03">
+<test-case category="XSLT-Result-Tree" id="output_output03">
 <file-path>output</file-path>
 <purpose>Test for disabling output escaping in xsl:text</purpose>
 <spec-citation place="16.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp03.xml</input-file>
-<input-file role="principal-stylesheet">outp03.xsl</input-file>
-<output-file role="principal" compare="XML">outp03.out</output-file>
+<input-file role="principal-data">output03.xml</input-file>
+<input-file role="principal-stylesheet">output03.xsl</input-file>
+<output-file role="principal" compare="XML">output03.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp04">
+<test-case category="XSLT-Result-Tree" id="output_output04">
 <file-path>output</file-path>
 <purpose>Test for numbered character entities</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp04.xml</input-file>
-<input-file role="principal-stylesheet">outp04.xsl</input-file>
-<output-file role="principal" compare="XML">outp04.out</output-file>
+<input-file role="principal-data">output04.xml</input-file>
+<input-file role="principal-stylesheet">output04.xsl</input-file>
+<output-file role="principal" compare="XML">output04.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp05">
+<test-case category="XSLT-Result-Tree" id="output_output05">
 <file-path>output</file-path>
 <purpose>Test for "whitespace sensitive" html tags; &lt;img&gt;, &lt;applet&gt;, &lt;object&gt;</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp05.xml</input-file>
-<input-file role="principal-stylesheet">outp05.xsl</input-file>
-<output-file role="principal" compare="XML">outp05.out</output-file>
+<input-file role="principal-data">output05.xml</input-file>
+<input-file role="principal-stylesheet">output05.xsl</input-file>
+<output-file role="principal" compare="XML">output05.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp06">
+<test-case category="XSLT-Result-Tree" id="output_output06">
 <file-path>output</file-path>
 <purpose>Test for disabling output escaping in xsl:value-of</purpose>
 <spec-citation place="7.6.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp06.xml</input-file>
-<input-file role="principal-stylesheet">outp06.xsl</input-file>
-<output-file role="principal" compare="XML">outp06.out</output-file>
+<input-file role="principal-data">output06.xml</input-file>
+<input-file role="principal-stylesheet">output06.xsl</input-file>
+<output-file role="principal" compare="XML">output06.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp07">
+<test-case category="XSLT-Result-Tree" id="output_output07">
 <file-path>output</file-path>
 <purpose>Test for enabling output escaping in xsl:value-of, XML output</purpose>
 <spec-citation place="16.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp07.xml</input-file>
-<input-file role="principal-stylesheet">outp07.xsl</input-file>
-<output-file role="principal" compare="XML">outp07.out</output-file>
+<input-file role="principal-data">output07.xml</input-file>
+<input-file role="principal-stylesheet">output07.xsl</input-file>
+<output-file role="principal" compare="XML">output07.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp08">
+<test-case category="XSLT-Result-Tree" id="output_output08">
 <file-path>output</file-path>
 <purpose>Test for enabling output escaping in xsl:text, HTML output</purpose>
 <spec-citation place="16.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp08.xml</input-file>
-<input-file role="principal-stylesheet">outp08.xsl</input-file>
-<output-file role="principal" compare="XML">outp08.out</output-file>
+<input-file role="principal-data">output08.xml</input-file>
+<input-file role="principal-stylesheet">output08.xsl</input-file>
+<output-file role="principal" compare="XML">output08.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp09">
+<test-case category="XSLT-Result-Tree" id="output_output09">
 <file-path>output</file-path>
 <purpose>Test for disabling output escaping in a variable with xsl:text, HTML output</purpose>
 <spec-citation place="16.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp09.xml</input-file>
-<input-file role="principal-stylesheet">outp09.xsl</input-file>
-<output-file role="principal" compare="XML">outp09.out</output-file>
+<input-file role="principal-data">output09.xml</input-file>
+<input-file role="principal-stylesheet">output09.xsl</input-file>
+<output-file role="principal" compare="XML">output09.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="output_outp10">
@@ -12371,99 +12371,99 @@
 <purpose>test for disabling output escaping in a variable with xsl:value-of</purpose>
 <spec-citation place="7.6.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp10.xml</input-file>
-<input-file role="principal-stylesheet">outp10.xsl</input-file>
-<output-file role="principal" compare="XML">outp10.out</output-file>
+<input-file role="principal-data">output10.xml</input-file>
+<input-file role="principal-stylesheet">output10.xsl</input-file>
+<output-file role="principal" compare="XML">output10.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp11">
+<test-case category="XSLT-Result-Tree" id="output_output11">
 <file-path>output</file-path>
 <purpose>Test for the xml output method by itself</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp11.xml</input-file>
-<input-file role="principal-stylesheet">outp11.xsl</input-file>
-<output-file role="principal" compare="XML">outp11.out</output-file>
+<input-file role="principal-data">output11.xml</input-file>
+<input-file role="principal-stylesheet">output11.xsl</input-file>
+<output-file role="principal" compare="XML">output11.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp12">
+<test-case category="XSLT-Result-Tree" id="output_output12">
 <file-path>output</file-path>
 <purpose>Test for the xml output method by itself with omit-xml-declaration</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp12.xml</input-file>
-<input-file role="principal-stylesheet">outp12.xsl</input-file>
-<output-file role="principal" compare="XML">outp12.out</output-file>
+<input-file role="principal-data">output12.xml</input-file>
+<input-file role="principal-stylesheet">output12.xsl</input-file>
+<output-file role="principal" compare="XML">output12.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp13">
+<test-case category="XSLT-Result-Tree" id="output_output13">
 <file-path>output</file-path>
 <purpose>Test for doctype-system</purpose>
 <spec-citation place="16" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp13.xml</input-file>
-<input-file role="principal-stylesheet">outp13.xsl</input-file>
-<output-file role="principal" compare="XML">outp13.out</output-file>
+<input-file role="principal-data">output13.xml</input-file>
+<input-file role="principal-stylesheet">output13.xsl</input-file>
+<output-file role="principal" compare="XML">output13.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp14">
+<test-case category="XSLT-Result-Tree" id="output_output14">
 <file-path>output</file-path>
 <purpose>Test for doctype-public only</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp14.xml</input-file>
-<input-file role="principal-stylesheet">outp14.xsl</input-file>
-<output-file role="principal" compare="XML">outp14.out</output-file>
+<input-file role="principal-data">output14.xml</input-file>
+<input-file role="principal-stylesheet">output14.xsl</input-file>
+<output-file role="principal" compare="XML">output14.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp15">
+<test-case category="XSLT-Result-Tree" id="output_output15">
 <file-path>output</file-path>
 <purpose>Test for doctype-system and doctype-public</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp15.xml</input-file>
-<input-file role="principal-stylesheet">outp15.xsl</input-file>
-<output-file role="principal" compare="XML">outp15.out</output-file>
+<input-file role="principal-data">output15.xml</input-file>
+<input-file role="principal-stylesheet">output15.xsl</input-file>
+<output-file role="principal" compare="XML">output15.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp16">
+<test-case category="XSLT-Result-Tree" id="output_output16">
 <file-path>output</file-path>
 <purpose>Test for doctype-system with html method</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp16.xml</input-file>
-<input-file role="principal-stylesheet">outp16.xsl</input-file>
-<output-file role="principal" compare="XML">outp16.out</output-file>
+<input-file role="principal-data">output16.xml</input-file>
+<input-file role="principal-stylesheet">output16.xsl</input-file>
+<output-file role="principal" compare="XML">output16.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp17">
+<test-case category="XSLT-Result-Tree" id="output_output17">
 <file-path>output</file-path>
 <purpose>Test for doctype-public only with html method</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp17.xml</input-file>
-<input-file role="principal-stylesheet">outp17.xsl</input-file>
-<output-file role="principal" compare="XML">outp17.out</output-file>
+<input-file role="principal-data">output17.xml</input-file>
+<input-file role="principal-stylesheet">output17.xsl</input-file>
+<output-file role="principal" compare="XML">output17.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp18">
+<test-case category="XSLT-Result-Tree" id="output_output18">
 <file-path>output</file-path>
 <purpose>Test for doctype-system and doctype-public with html method</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp18.xml</input-file>
-<input-file role="principal-stylesheet">outp18.xsl</input-file>
-<output-file role="principal" compare="XML">outp18.out</output-file>
+<input-file role="principal-data">output18.xml</input-file>
+<input-file role="principal-stylesheet">output18.xsl</input-file>
+<output-file role="principal" compare="XML">output18.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp19">
+<test-case category="XSLT-Result-Tree" id="output_output19">
 <file-path>output</file-path>
 <purpose>Test US-ASCII encoding.</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp19.xml</input-file>
-<input-file role="principal-stylesheet">outp19.xsl</input-file>
-<output-file role="principal" compare="XML">outp19.out</output-file>
+<input-file role="principal-data">output19.xml</input-file>
+<input-file role="principal-stylesheet">output19.xsl</input-file>
+<output-file role="principal" compare="XML">output19.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="output_outp20">
@@ -12471,19 +12471,19 @@
 <purpose>Test SHIFT_JIS encoding.</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp20.xml</input-file>
-<input-file role="principal-stylesheet">outp20.xsl</input-file>
-<output-file role="principal" compare="XML">outp20.out</output-file>
+<input-file role="principal-data">output20.xml</input-file>
+<input-file role="principal-stylesheet">output20.xsl</input-file>
+<output-file role="principal" compare="XML">output20.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp21">
+<test-case category="XSLT-Result-Tree" id="output_output21">
 <file-path>output</file-path>
 <purpose>Test BIG5 encoding.</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp21.xml</input-file>
-<input-file role="principal-stylesheet">outp21.xsl</input-file>
-<output-file role="principal" compare="XML">outp21.out</output-file>
+<input-file role="principal-data">output21.xml</input-file>
+<input-file role="principal-stylesheet">output21.xsl</input-file>
+<output-file role="principal" compare="XML">output21.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="output_output22">
@@ -12496,84 +12496,84 @@
 <output-file role="principal" compare="XML">output22.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp23">
+<test-case category="XSLT-Result-Tree" id="output_output23">
 <file-path>output</file-path>
 <purpose>Test ISO-2022-JP encoding.</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp23.xml</input-file>
-<input-file role="principal-stylesheet">outp23.xsl</input-file>
-<output-file role="principal" compare="XML">outp23.out</output-file>
+<input-file role="principal-data">output23.xml</input-file>
+<input-file role="principal-stylesheet">output23.xsl</input-file>
+<output-file role="principal" compare="XML">output23.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp24">
+<test-case category="XSLT-Result-Tree" id="output_output24">
 <file-path>output</file-path>
 <purpose>Escape of non-ASCII chars in URI attribute values using method cited in Section B.2.1 of HTML 4.0 Spec. This test is a duplicate of OUTP31, except that the output is XML.</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp24.xml</input-file>
-<input-file role="principal-stylesheet">outp24.xsl</input-file>
-<output-file role="principal" compare="XML">outp24.out</output-file>
+<input-file role="principal-data">output24.xml</input-file>
+<input-file role="principal-stylesheet">output24.xsl</input-file>
+<output-file role="principal" compare="XML">output24.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp25">
+<test-case category="XSLT-Result-Tree" id="output_output25">
 <file-path>output</file-path>
 <purpose>???</purpose>
 <spec-citation place="16.3" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp25.xml</input-file>
-<input-file role="principal-stylesheet">outp25.xsl</input-file>
-<output-file role="principal" compare="XML">outp25.out</output-file>
+<input-file role="principal-data">output25.xml</input-file>
+<input-file role="principal-stylesheet">output25.xsl</input-file>
+<output-file role="principal" compare="XML">output25.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp26">
+<test-case category="XSLT-Result-Tree" id="output_output26">
 <file-path>output</file-path>
 <purpose>Text output of characters encoded between 128 and 255</purpose>
 <spec-citation place="16.3" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp26.xml</input-file>
-<input-file role="principal-stylesheet">outp26.xsl</input-file>
-<output-file role="principal" compare="XML">outp26.out</output-file>
+<input-file role="principal-data">output26.xml</input-file>
+<input-file role="principal-stylesheet">output26.xsl</input-file>
+<output-file role="principal" compare="XML">output26.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp28">
+<test-case category="XSLT-Result-Tree" id="output_output28">
 <file-path>output</file-path>
 <purpose>Result tree here defaults to XML Test for cdata-section-elements with nonrepresentable character.</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp28.xml</input-file>
-<input-file role="principal-stylesheet">outp28.xsl</input-file>
-<output-file role="principal" compare="XML">outp28.out</output-file>
+<input-file role="principal-data">output28.xml</input-file>
+<input-file role="principal-stylesheet">output28.xsl</input-file>
+<output-file role="principal" compare="XML">output28.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp29">
+<test-case category="XSLT-Result-Tree" id="output_output29">
 <file-path>output</file-path>
 <purpose>Test cdata-section-elements.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp29.xml</input-file>
-<input-file role="principal-stylesheet">outp29.xsl</input-file>
-<output-file role="principal" compare="XML">outp29.out</output-file>
+<input-file role="principal-data">output29.xml</input-file>
+<input-file role="principal-stylesheet">output29.xsl</input-file>
+<output-file role="principal" compare="XML">output29.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp30">
+<test-case category="XSLT-Result-Tree" id="output_output30">
 <file-path>output</file-path>
 <purpose>Test cdata-section-elements that looks like end of CDATA.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp30.xml</input-file>
-<input-file role="principal-stylesheet">outp30.xsl</input-file>
-<output-file role="principal" compare="XML">outp30.out</output-file>
+<input-file role="principal-data">output30.xml</input-file>
+<input-file role="principal-stylesheet">output30.xsl</input-file>
+<output-file role="principal" compare="XML">output30.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp32">
+<test-case category="XSLT-Result-Tree" id="output_output32">
 <file-path>output</file-path>
 <purpose>ESC of non-ASCII chars in URI attribute values using method sited in Section B.2.1 of HTML 4.0 Spec.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp32.xml</input-file>
-<input-file role="principal-stylesheet">outp32.xsl</input-file>
-<output-file role="principal" compare="XML">outp32.out</output-file>
+<input-file role="principal-data">output32.xml</input-file>
+<input-file role="principal-stylesheet">output32.xsl</input-file>
+<output-file role="principal" compare="XML">output32.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="output_output33">
@@ -12586,44 +12586,44 @@
 <output-file role="principal" compare="XML">output33.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp34">
+<test-case category="XSLT-Result-Tree" id="output_output34">
 <file-path>output</file-path>
 <purpose>Names of HTML elements should be recognized regardless of case.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp34.xml</input-file>
-<input-file role="principal-stylesheet">outp34.xsl</input-file>
-<output-file role="principal" compare="XML">outp34.out</output-file>
+<input-file role="principal-data">output34.xml</input-file>
+<input-file role="principal-stylesheet">output34.xsl</input-file>
+<output-file role="principal" compare="XML">output34.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp35">
+<test-case category="XSLT-Result-Tree" id="output_output35">
 <file-path>output</file-path>
 <purpose>Boolean attributes should be output in minimized form.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp35.xml</input-file>
-<input-file role="principal-stylesheet">outp35.xsl</input-file>
-<output-file role="principal" compare="XML">outp35.out</output-file>
+<input-file role="principal-data">output35.xml</input-file>
+<input-file role="principal-stylesheet">output35.xsl</input-file>
+<output-file role="principal" compare="XML">output35.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp36">
+<test-case category="XSLT-Result-Tree" id="output_output36">
 <file-path>output</file-path>
 <purpose>Processing instructions should be terminated with "&gt;".</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp36.xml</input-file>
-<input-file role="principal-stylesheet">outp36.xsl</input-file>
-<output-file role="principal" compare="XML">outp36.out</output-file>
+<input-file role="principal-data">output36.xml</input-file>
+<input-file role="principal-stylesheet">output36.xsl</input-file>
+<output-file role="principal" compare="XML">output36.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp37">
+<test-case category="XSLT-Result-Tree" id="output_output37">
 <file-path>output</file-path>
 <purpose>"&amp;" should not be escaped when occuring in an attribute value immediately followed by a "{". See to Section B.7.1 HTML 4.0 Recommendation.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp37.xml</input-file>
-<input-file role="principal-stylesheet">outp37.xsl</input-file>
-<output-file role="principal" compare="XML">outp37.out</output-file>
+<input-file role="principal-data">output37.xml</input-file>
+<input-file role="principal-stylesheet">output37.xsl</input-file>
+<output-file role="principal" compare="XML">output37.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="output_output38">
@@ -12636,54 +12636,54 @@
 <output-file role="principal" compare="XML">output38.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp39">
+<test-case category="XSLT-Result-Tree" id="output_output39">
 <file-path>output</file-path>
 <purpose>Test of indent</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp39.xml</input-file>
-<input-file role="principal-stylesheet">outp39.xsl</input-file>
-<output-file role="principal" compare="XML">outp39.out</output-file>
+<input-file role="principal-data">output39.xml</input-file>
+<input-file role="principal-stylesheet">output39.xsl</input-file>
+<output-file role="principal" compare="XML">output39.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp40">
+<test-case category="XSLT-Result-Tree" id="output_output40">
 <file-path>output</file-path>
 <purpose>Test of indent</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp40.xml</input-file>
-<input-file role="principal-stylesheet">outp40.xsl</input-file>
-<output-file role="principal" compare="XML">outp40.out</output-file>
+<input-file role="principal-data">output40.xml</input-file>
+<input-file role="principal-stylesheet">output40.xsl</input-file>
+<output-file role="principal" compare="XML">output40.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp41">
+<test-case category="XSLT-Result-Tree" id="output_output41">
 <file-path>output</file-path>
 <purpose>Text node containing "]]&gt;" and closure of CDATA section.</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp41.xml</input-file>
-<input-file role="principal-stylesheet">outp41.xsl</input-file>
-<output-file role="principal" compare="XML">outp41.out</output-file>
+<input-file role="principal-data">output41.xml</input-file>
+<input-file role="principal-stylesheet">output41.xsl</input-file>
+<output-file role="principal" compare="XML">output41.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp42">
+<test-case category="XSLT-Result-Tree" id="output_output42">
 <file-path>output</file-path>
 <purpose>Test of cdata-section-elements processing.</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp42.xml</input-file>
-<input-file role="principal-stylesheet">outp42.xsl</input-file>
-<output-file role="principal" compare="XML">outp42.out</output-file>
+<input-file role="principal-data">output42.xml</input-file>
+<input-file role="principal-stylesheet">output42.xsl</input-file>
+<output-file role="principal" compare="XML">output42.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp43">
+<test-case category="XSLT-Result-Tree" id="output_output43">
 <file-path>output</file-path>
 <purpose>Test of cdata-section-elements processing. &lt;example&gt; should not be processed.</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp43.xml</input-file>
-<input-file role="principal-stylesheet">outp43.xsl</input-file>
-<output-file role="principal" compare="XML">outp43.out</output-file>
+<input-file role="principal-data">output43.xml</input-file>
+<input-file role="principal-stylesheet">output43.xsl</input-file>
+<output-file role="principal" compare="XML">output43.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="output_output44">
@@ -12696,14 +12696,14 @@
 <output-file role="principal" compare="XML">output44.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp45">
+<test-case category="XSLT-Result-Tree" id="output_output45">
 <file-path>output</file-path>
 <purpose>xml method should not output XML declaration if omit-xml-declaration="yes".</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp45.xml</input-file>
-<input-file role="principal-stylesheet">outp45.xsl</input-file>
-<output-file role="principal" compare="XML">outp45.out</output-file>
+<input-file role="principal-data">output45.xml</input-file>
+<input-file role="principal-stylesheet">output45.xsl</input-file>
+<output-file role="principal" compare="XML">output45.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="output_output46">
@@ -12716,276 +12716,276 @@
 <output-file role="principal" compare="XML">output46.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp47">
+<test-case category="XSLT-Result-Tree" id="output_output47">
 <file-path>output</file-path>
 <purpose>Illegal use of disable-output-escaping.</purpose>
 <spec-citation place="16.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp47.xml</input-file>
-<input-file role="principal-stylesheet">outp47.xsl</input-file>
-<output-file role="principal" compare="XML">outp47.out</output-file>
+<input-file role="principal-data">output47.xml</input-file>
+<input-file role="principal-stylesheet">output47.xsl</input-file>
+<output-file role="principal" compare="XML">output47.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp48">
+<test-case category="XSLT-Result-Tree" id="output_output48">
 <file-path>output</file-path>
 <purpose>... html output method should output a DTD immediately before the first element.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp48.xml</input-file>
-<input-file role="principal-stylesheet">outp48.xsl</input-file>
-<output-file role="principal" compare="XML">outp48.out</output-file>
+<input-file role="principal-data">output48.xml</input-file>
+<input-file role="principal-stylesheet">output48.xsl</input-file>
+<output-file role="principal" compare="XML">output48.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp49">
+<test-case category="XSLT-Result-Tree" id="output_output49">
 <file-path>output</file-path>
 <purpose>HTML output method should not escape '&lt;' in attribute values.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp49.xml</input-file>
-<input-file role="principal-stylesheet">outp49.xsl</input-file>
-<output-file role="principal" compare="XML">outp49.out</output-file>
+<input-file role="principal-data">output49.xml</input-file>
+<input-file role="principal-stylesheet">output49.xsl</input-file>
+<output-file role="principal" compare="XML">output49.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp50">
+<test-case category="XSLT-Result-Tree" id="output_output50">
 <file-path>output</file-path>
 <purpose>Valid use of disable-output-escaping.</purpose>
 <spec-citation place="16.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp50.xml</input-file>
-<input-file role="principal-stylesheet">outp50.xsl</input-file>
-<output-file role="principal" compare="XML">outp50.out</output-file>
+<input-file role="principal-data">output50.xml</input-file>
+<input-file role="principal-stylesheet">output50.xsl</input-file>
+<output-file role="principal" compare="XML">output50.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp51">
+<test-case category="XSLT-Result-Tree" id="output_output51">
 <file-path>output</file-path>
 <purpose>Test of indent attribute by itself.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp51.xml</input-file>
-<input-file role="principal-stylesheet">outp51.xsl</input-file>
-<output-file role="principal" compare="XML">outp51.out</output-file>
+<input-file role="principal-data">output51.xml</input-file>
+<input-file role="principal-stylesheet">output51.xsl</input-file>
+<output-file role="principal" compare="XML">output51.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp52">
+<test-case category="XSLT-Result-Tree" id="output_output52">
 <file-path>output</file-path>
 <purpose>html output method should not output white space after the image tag within the anchor tag.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp52.xml</input-file>
-<input-file role="principal-stylesheet">outp52.xsl</input-file>
-<output-file role="principal" compare="XML">outp52.out</output-file>
+<input-file role="principal-data">output52.xml</input-file>
+<input-file role="principal-stylesheet">output52.xsl</input-file>
+<output-file role="principal" compare="XML">output52.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp53">
+<test-case category="XSLT-Result-Tree" id="output_output53">
 <file-path>output</file-path>
 <purpose>Basic test for creating a comment.</purpose>
 <spec-citation place="7.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp53.xml</input-file>
-<input-file role="principal-stylesheet">outp53.xsl</input-file>
-<output-file role="principal" compare="XML">outp53.out</output-file>
+<input-file role="principal-data">output53.xml</input-file>
+<input-file role="principal-stylesheet">output53.xsl</input-file>
+<output-file role="principal" compare="XML">output53.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp54">
+<test-case category="XSLT-Result-Tree" id="output_output54">
 <file-path>output</file-path>
 <purpose>Test for creating a comment using a formula.</purpose>
 <spec-citation place="7.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp54.xml</input-file>
-<input-file role="principal-stylesheet">outp54.xsl</input-file>
-<output-file role="principal" compare="XML">outp54.out</output-file>
+<input-file role="principal-data">output54.xml</input-file>
+<input-file role="principal-stylesheet">output54.xsl</input-file>
+<output-file role="principal" compare="XML">output54.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp55">
+<test-case category="XSLT-Result-Tree" id="output_output55">
 <file-path>output</file-path>
 <purpose>Test creating a comment from a path expression.</purpose>
 <spec-citation place="7.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp55.xml</input-file>
-<input-file role="principal-stylesheet">outp55.xsl</input-file>
-<output-file role="principal" compare="XML">outp55.out</output-file>
+<input-file role="principal-data">output55.xml</input-file>
+<input-file role="principal-stylesheet">output55.xsl</input-file>
+<output-file role="principal" compare="XML">output55.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp56">
+<test-case category="XSLT-Result-Tree" id="output_output56">
 <file-path>output</file-path>
 <purpose>Test creating a comment from a variable.</purpose>
 <spec-citation place="7.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp56.xml</input-file>
-<input-file role="principal-stylesheet">outp56.xsl</input-file>
-<output-file role="principal" compare="XML">outp56.out</output-file>
+<input-file role="principal-data">output56.xml</input-file>
+<input-file role="principal-stylesheet">output56.xsl</input-file>
+<output-file role="principal" compare="XML">output56.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp57">
+<test-case category="XSLT-Result-Tree" id="output_output57">
 <file-path>output</file-path>
 <purpose>Test use of xsl:if and xsl:text inside xsl:comment.</purpose>
 <spec-citation place="7.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp57.xml</input-file>
-<input-file role="principal-stylesheet">outp57.xsl</input-file>
-<output-file role="principal" compare="XML">outp57.out</output-file>
+<input-file role="principal-data">output57.xml</input-file>
+<input-file role="principal-stylesheet">output57.xsl</input-file>
+<output-file role="principal" compare="XML">output57.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp58">
+<test-case category="XSLT-Result-Tree" id="output_output58">
 <file-path>output</file-path>
 <purpose>Test creation of a top-level comment.</purpose>
 <spec-citation place="7.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp58.xml</input-file>
-<input-file role="principal-stylesheet">outp58.xsl</input-file>
-<output-file role="principal" compare="XML">outp58.out</output-file>
+<input-file role="principal-data">output58.xml</input-file>
+<input-file role="principal-stylesheet">output58.xsl</input-file>
+<output-file role="principal" compare="XML">output58.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp59">
+<test-case category="XSLT-Result-Tree" id="output_output59">
 <file-path>output</file-path>
 <purpose>Test creation of a top-level processing-instruction before the document element.</purpose>
 <spec-citation place="7.3" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp59.xml</input-file>
-<input-file role="principal-stylesheet">outp59.xsl</input-file>
-<output-file role="principal" compare="XML">outp59.out</output-file>
+<input-file role="principal-data">output59.xml</input-file>
+<input-file role="principal-stylesheet">output59.xsl</input-file>
+<output-file role="principal" compare="XML">output59.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp60">
+<test-case category="XSLT-Result-Tree" id="output_output60">
 <file-path>output</file-path>
 <purpose>Do everything inside an HTML element. Note first item in this file.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp60.xml</input-file>
-<input-file role="principal-stylesheet">outp60.xsl</input-file>
-<output-file role="principal" compare="XML">outp60.out</output-file>
+<input-file role="principal-data">output60.xml</input-file>
+<input-file role="principal-stylesheet">output60.xsl</input-file>
+<output-file role="principal" compare="XML">output60.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp61">
+<test-case category="XSLT-Result-Tree" id="output_output61">
 <file-path>output</file-path>
 <purpose>Test for disabling output escaping in xsl:value-of on ., which has special code. XML method.</purpose>
 <spec-citation place="16.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp61.xml</input-file>
-<input-file role="principal-stylesheet">outp61.xsl</input-file>
-<output-file role="principal" compare="XML">outp61.out</output-file>
+<input-file role="principal-data">output61.xml</input-file>
+<input-file role="principal-stylesheet">output61.xsl</input-file>
+<output-file role="principal" compare="XML">output61.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp62">
+<test-case category="XSLT-Result-Tree" id="output_output62">
 <file-path>output</file-path>
 <purpose>Test for disabling output escaping in xsl:value-of on ., which has special code. HTML method.</purpose>
 <spec-citation place="16.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp62.xml</input-file>
-<input-file role="principal-stylesheet">outp62.xsl</input-file>
-<output-file role="principal" compare="XML">outp62.out</output-file>
+<input-file role="principal-data">output62.xml</input-file>
+<input-file role="principal-stylesheet">output62.xsl</input-file>
+<output-file role="principal" compare="XML">output62.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp63">
+<test-case category="XSLT-Result-Tree" id="output_output63">
 <file-path>output</file-path>
 <creator>Paul Dick</creator>
 <date>2001-11-08</date>
 <purpose>The html output method should not output an element differently from the xml output method unless the expanded-name of the element has a null namespace URI; an element whose expanded-name has a non-null namespace URI should be output as XML. So the html tags &lt;p&gt;, &lt;hr&gt; and &lt;br&gt; in this case, due to the default html namespace will be output as xml not html.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp63.xml</input-file>
-<input-file role="principal-stylesheet">outp63.xsl</input-file>
-<output-file role="principal" compare="XML">outp63.out</output-file>
+<input-file role="principal-data">output63.xml</input-file>
+<input-file role="principal-stylesheet">output63.xsl</input-file>
+<output-file role="principal" compare="XML">output63.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp64">
+<test-case category="XSLT-Result-Tree" id="output_output64">
 <file-path>output</file-path>
 <purpose>Generate output tagged for WML</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp64.xml</input-file>
-<input-file role="principal-stylesheet">outp64.xsl</input-file>
-<output-file role="principal" compare="XML">outp64.out</output-file>
+<input-file role="principal-data">output64.xml</input-file>
+<input-file role="principal-stylesheet">output64.xsl</input-file>
+<output-file role="principal" compare="XML">output64.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp65">
+<test-case category="XSLT-Result-Tree" id="output_output65">
 <file-path>output</file-path>
 <purpose>Test for special case for XHTML</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp65.xml</input-file>
-<input-file role="principal-stylesheet">outp65.xsl</input-file>
-<output-file role="principal" compare="XML">outp65.out</output-file>
+<input-file role="principal-data">output65.xml</input-file>
+<input-file role="principal-stylesheet">output65.xsl</input-file>
+<output-file role="principal" compare="XML">output65.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp66">
+<test-case category="XSLT-Result-Tree" id="output_output66">
 <file-path>output</file-path>
 <purpose>Verify standalone attribute set to "no".</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp66.xml</input-file>
-<input-file role="principal-stylesheet">outp66.xsl</input-file>
-<output-file role="principal" compare="XML">outp66.out</output-file>
+<input-file role="principal-data">output66.xml</input-file>
+<input-file role="principal-stylesheet">output66.xsl</input-file>
+<output-file role="principal" compare="XML">output66.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp67">
+<test-case category="XSLT-Result-Tree" id="output_output67">
 <file-path>output</file-path>
 <purpose>Verify standalone attribute set to "yes".</purpose>
 <spec-citation place="16.1" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp67.xml</input-file>
-<input-file role="principal-stylesheet">outp67.xsl</input-file>
-<output-file role="principal" compare="XML">outp67.out</output-file>
+<input-file role="principal-data">output67.xml</input-file>
+<input-file role="principal-stylesheet">output67.xsl</input-file>
+<output-file role="principal" compare="XML">output67.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp68">
+<test-case category="XSLT-Result-Tree" id="output_output68">
 <file-path>output</file-path>
 <purpose>Test for-each inside xsl:comment.</purpose>
 <spec-citation place="7.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp68.xml</input-file>
-<input-file role="principal-stylesheet">outp68.xsl</input-file>
-<output-file role="principal" compare="XML">outp68.out</output-file>
+<input-file role="principal-data">output68.xml</input-file>
+<input-file role="principal-stylesheet">output68.xsl</input-file>
+<output-file role="principal" compare="XML">output68.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp69">
+<test-case category="XSLT-Result-Tree" id="output_output69">
 <file-path>output</file-path>
 <purpose>Test for-each inside xsl:processing-instruction.</purpose>
 <spec-citation place="7.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp69.xml</input-file>
-<input-file role="principal-stylesheet">outp69.xsl</input-file>
-<output-file role="principal" compare="XML">outp69.out</output-file>
+<input-file role="principal-data">output69.xml</input-file>
+<input-file role="principal-stylesheet">output69.xsl</input-file>
+<output-file role="principal" compare="XML">output69.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp70">
+<test-case category="XSLT-Result-Tree" id="output_output70">
 <file-path>output</file-path>
 <purpose>Quotes and apostrophes can be used inside themselves, without terminating the string, if entered as entities.</purpose>
 <spec-citation place="1" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp70.xml</input-file>
-<input-file role="principal-stylesheet">outp70.xsl</input-file>
-<output-file role="principal" compare="XML">outp70.out</output-file>
+<input-file role="principal-data">output70.xml</input-file>
+<input-file role="principal-stylesheet">output70.xsl</input-file>
+<output-file role="principal" compare="XML">output70.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp71">
+<test-case category="XSLT-Result-Tree" id="output_output71">
 <file-path>output</file-path>
 <purpose>Test that implied HTML output assumes indent=yes.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp71.xml</input-file>
-<input-file role="principal-stylesheet">outp71.xsl</input-file>
-<output-file role="principal" compare="XML">outp71.out</output-file>
+<input-file role="principal-data">output71.xml</input-file>
+<input-file role="principal-stylesheet">output71.xsl</input-file>
+<output-file role="principal" compare="XML">output71.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp72">
+<test-case category="XSLT-Result-Tree" id="output_output72">
 <file-path>output</file-path>
 <purpose>Test the generation of Processing instructions.</purpose>
 <spec-citation place="7.3" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp72.xml</input-file>
-<input-file role="principal-stylesheet">outp72.xsl</input-file>
-<output-file role="principal" compare="XML">outp72.out</output-file>
+<input-file role="principal-data">output72.xml</input-file>
+<input-file role="principal-stylesheet">output72.xsl</input-file>
+<output-file role="principal" compare="XML">output72.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="output_outp73">
+<test-case category="XSLT-Result-Tree" id="output_output73">
 <file-path>output</file-path>
 <purpose>Test SHIFT_JIS encoding on HTML output.</purpose>
 <spec-citation place="16.2" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">outp73.xml</input-file>
-<input-file role="principal-stylesheet">outp73.xsl</input-file>
-<output-file role="principal" compare="XML">outp73.out</output-file>
+<input-file role="principal-data">output73.xml</input-file>
+<input-file role="principal-stylesheet">output73.xsl</input-file>
+<output-file role="principal" compare="XML">output73.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="output_output74">
@@ -15459,14 +15459,14 @@
 <output-file role="principal" compare="XML">predicate58.out</output-file>
 </scenario>
 </test-case>
-	<test-case category="XSLT-Result-Tree" id="processorinfo_prop03">
+	<test-case category="XSLT-Result-Tree" id="processorinfo_processorinfo03">
 <file-path>processorinfo</file-path>
 <purpose>Test the xsl:vendor-url system property</purpose>
 <spec-citation place="12.4" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">prop03.xml</input-file>
-<input-file role="principal-stylesheet">prop03.xsl</input-file>
-<output-file role="principal" compare="XML">prop03.out</output-file>
+<input-file role="principal-data">processorinfo03.xml</input-file>
+<input-file role="principal-stylesheet">processorinfo03.xsl</input-file>
+<output-file role="principal" compare="XML">processorinfo03.out</output-file>
 </scenario>
 </test-case>
 	<test-case category="XSLT-Result-Tree" id="reluri_reluri01">
@@ -17085,94 +17085,94 @@
 <output-file role="principal" compare="XML">string04.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str05">
+<test-case category="XSLT-Result-Tree" id="string_string05">
 <file-path>string</file-path>
 <purpose>Test of 'string()' conversion w/ element node</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str05.xml</input-file>
-<input-file role="principal-stylesheet">str05.xsl</input-file>
-<output-file role="principal" compare="XML">str05.out</output-file>
+<input-file role="principal-data">string05.xml</input-file>
+<input-file role="principal-stylesheet">string05.xsl</input-file>
+<output-file role="principal" compare="XML">string05.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str06">
+<test-case category="XSLT-Result-Tree" id="string_string06">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str06.xml</input-file>
-<input-file role="principal-stylesheet">str06.xsl</input-file>
-<output-file role="principal" compare="XML">str06.out</output-file>
+<input-file role="principal-data">string06.xml</input-file>
+<input-file role="principal-stylesheet">string06.xsl</input-file>
+<output-file role="principal" compare="XML">string06.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str07">
+<test-case category="XSLT-Result-Tree" id="string_string07">
 <file-path>string</file-path>
 <purpose>Test of 'contains()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str07.xml</input-file>
-<input-file role="principal-stylesheet">str07.xsl</input-file>
-<output-file role="principal" compare="XML">str07.out</output-file>
+<input-file role="principal-data">string07.xml</input-file>
+<input-file role="principal-stylesheet">string07.xsl</input-file>
+<output-file role="principal" compare="XML">string07.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str08">
+<test-case category="XSLT-Result-Tree" id="string_string08">
 <file-path>string</file-path>
 <purpose>Test of 'substring-before()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str08.xml</input-file>
-<input-file role="principal-stylesheet">str08.xsl</input-file>
-<output-file role="principal" compare="XML">str08.out</output-file>
+<input-file role="principal-data">string08.xml</input-file>
+<input-file role="principal-stylesheet">string08.xsl</input-file>
+<output-file role="principal" compare="XML">string08.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str09">
+<test-case category="XSLT-Result-Tree" id="string_string09">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str09.xml</input-file>
-<input-file role="principal-stylesheet">str09.xsl</input-file>
-<output-file role="principal" compare="XML">str09.out</output-file>
+<input-file role="principal-data">string09.xml</input-file>
+<input-file role="principal-stylesheet">string09.xsl</input-file>
+<output-file role="principal" compare="XML">string09.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str10">
+<test-case category="XSLT-Result-Tree" id="string_string10">
 <file-path>string</file-path>
 <purpose>Test of 'normalize-space()' function</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str10.xml</input-file>
-<input-file role="principal-stylesheet">str10.xsl</input-file>
-<output-file role="principal" compare="XML">str10.out</output-file>
+<input-file role="principal-data">string10.xml</input-file>
+<input-file role="principal-stylesheet">string10.xsl</input-file>
+<output-file role="principal" compare="XML">string10.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str11">
+<test-case category="XSLT-Result-Tree" id="string_string11">
 <file-path>string</file-path>
 <purpose>Test of 'translate()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str11.xml</input-file>
-<input-file role="principal-stylesheet">str11.xsl</input-file>
-<output-file role="principal" compare="XML">str11.out</output-file>
+<input-file role="principal-data">string11.xml</input-file>
+<input-file role="principal-stylesheet">string11.xsl</input-file>
+<output-file role="principal" compare="XML">string11.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str09">
+<test-case category="XSLT-Result-Tree" id="string_string12">
 <file-path>string</file-path>
 <purpose>Test of 'concat()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str09.xml</input-file>
-<input-file role="principal-stylesheet">str09.xsl</input-file>
-<output-file role="principal" compare="XML">str09.out</output-file>
+<input-file role="principal-data">string12.xml</input-file>
+<input-file role="principal-stylesheet">string12.xsl</input-file>
+<output-file role="principal" compare="XML">string12.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str13">
+<test-case category="XSLT-Result-Tree" id="string_string13">
 <file-path>string</file-path>
 <purpose>Test of 'format-number()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str13.xml</input-file>
-<input-file role="principal-stylesheet">str13.xsl</input-file>
-<output-file role="principal" compare="XML">str13.out</output-file>
+<input-file role="principal-data">string13.xml</input-file>
+<input-file role="principal-stylesheet">string13.xsl</input-file>
+<output-file role="principal" compare="XML">string13.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="string_string14">
@@ -17187,848 +17187,848 @@
 <output-file role="principal" compare="XML">string14.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str15">
+<test-case category="XSLT-Result-Tree" id="string_string15">
 <file-path>string</file-path>
 <purpose>Test of 'substring()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str15.xml</input-file>
-<input-file role="principal-stylesheet">str15.xsl</input-file>
-<output-file role="principal" compare="XML">str15.out</output-file>
+<input-file role="principal-data">string15.xml</input-file>
+<input-file role="principal-stylesheet">string15.xsl</input-file>
+<output-file role="principal" compare="XML">string15.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str16">
+<test-case category="XSLT-Result-Tree" id="string_string16">
 <file-path>string</file-path>
 <purpose>Test of 'substring()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str16.xml</input-file>
-<input-file role="principal-stylesheet">str16.xsl</input-file>
-<output-file role="principal" compare="XML">str16.out</output-file>
+<input-file role="principal-data">string16.xml</input-file>
+<input-file role="principal-stylesheet">string16.xsl</input-file>
+<output-file role="principal" compare="XML">string16.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str17">
+<test-case category="XSLT-Result-Tree" id="string_string17">
 <file-path>string</file-path>
 <purpose>Test of 'substring()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str17.xml</input-file>
-<input-file role="principal-stylesheet">str17.xsl</input-file>
-<output-file role="principal" compare="XML">str17.out</output-file>
+<input-file role="principal-data">string17.xml</input-file>
+<input-file role="principal-stylesheet">string17.xsl</input-file>
+<output-file role="principal" compare="XML">string17.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str18">
+<test-case category="XSLT-Result-Tree" id="string_string18">
 <file-path>string</file-path>
 <purpose>Test of 'substring()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str18.xml</input-file>
-<input-file role="principal-stylesheet">str18.xsl</input-file>
-<output-file role="principal" compare="XML">str18.out</output-file>
+<input-file role="principal-data">string18.xml</input-file>
+<input-file role="principal-stylesheet">string18.xsl</input-file>
+<output-file role="principal" compare="XML">string18.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str19">
+<test-case category="XSLT-Result-Tree" id="string_string19">
 <file-path>string</file-path>
 <purpose>Test of 'substring()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str19.xml</input-file>
-<input-file role="principal-stylesheet">str19.xsl</input-file>
-<output-file role="principal" compare="XML">str19.out</output-file>
+<input-file role="principal-data">string19.xml</input-file>
+<input-file role="principal-stylesheet">string19.xsl</input-file>
+<output-file role="principal" compare="XML">string19.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str20">
+<test-case category="XSLT-Result-Tree" id="string_string20">
 <file-path>string</file-path>
 <purpose>Test of 'substring()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str20.xml</input-file>
-<input-file role="principal-stylesheet">str20.xsl</input-file>
-<output-file role="principal" compare="XML">str20.out</output-file>
+<input-file role="principal-data">string20.xml</input-file>
+<input-file role="principal-stylesheet">string20.xsl</input-file>
+<output-file role="principal" compare="XML">string20.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str21">
+<test-case category="XSLT-Result-Tree" id="string_string21">
 <file-path>string</file-path>
 <purpose>Test of 'substring()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str21.xml</input-file>
-<input-file role="principal-stylesheet">str21.xsl</input-file>
-<output-file role="principal" compare="XML">str21.out</output-file>
+<input-file role="principal-data">string21.xml</input-file>
+<input-file role="principal-stylesheet">string21.xsl</input-file>
+<output-file role="principal" compare="XML">string21.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str22">
+<test-case category="XSLT-Result-Tree" id="string_string22">
 <file-path>string</file-path>
 <purpose>Test of 'substring()' function on non-existent node</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str22.xml</input-file>
-<input-file role="principal-stylesheet">str22.xsl</input-file>
-<output-file role="principal" compare="XML">str22.out</output-file>
+<input-file role="principal-data">string22.xml</input-file>
+<input-file role="principal-stylesheet">string22.xsl</input-file>
+<output-file role="principal" compare="XML">string22.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str30">
+<test-case category="XSLT-Result-Tree" id="string_string30">
 <file-path>string</file-path>
 <purpose>Test of 'namespace-uri()'.</purpose>
 <spec-citation place="4.1" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str30.xml</input-file>
-<input-file role="principal-stylesheet">str30.xsl</input-file>
-<output-file role="principal" compare="XML">str30.out</output-file>
+<input-file role="principal-data">string30.xml</input-file>
+<input-file role="principal-stylesheet">string30.xsl</input-file>
+<output-file role="principal" compare="XML">string30.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_">
+<test-case category="XSLT-Result-Tree" id="string_string31">
 <file-path>string</file-path>
 <spec-citation place="" type="section" version="1.0" spec="ooops!"/>
 <scenario operation="standard">
-<input-file role="principal-data">.xml</input-file>
-<input-file role="principal-stylesheet">.xsl</input-file>
-<output-file role="principal" compare="XML">.out</output-file>
+<input-file role="principal-data">string31.xml</input-file>
+<input-file role="principal-stylesheet">string31.xsl</input-file>
+<output-file role="principal" compare="XML">string31.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_">
+<test-case category="XSLT-Result-Tree" id="string_string32">
 <file-path>string</file-path>
 <spec-citation place="" type="section" version="1.0" spec="ooops!"/>
 <scenario operation="standard">
-<input-file role="principal-data">.xml</input-file>
-<input-file role="principal-stylesheet">.xsl</input-file>
-<output-file role="principal" compare="XML">.out</output-file>
+<input-file role="principal-data">string32.xml</input-file>
+<input-file role="principal-stylesheet">string32.xsl</input-file>
+<output-file role="principal" compare="XML">string32.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_">
+<test-case category="XSLT-Result-Tree" id="string_string33">
 <file-path>string</file-path>
 <spec-citation place="" type="section" version="1.0" spec="ooops!"/>
 <scenario operation="standard">
-<input-file role="principal-data">.xml</input-file>
-<input-file role="principal-stylesheet">.xsl</input-file>
-<output-file role="principal" compare="XML">.out</output-file>
+<input-file role="principal-data">string33.xml</input-file>
+<input-file role="principal-stylesheet">string33.xsl</input-file>
+<output-file role="principal" compare="XML">string33.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_">
+<test-case category="XSLT-Result-Tree" id="string_string34">
 <file-path>string</file-path>
 <spec-citation place="" type="section" version="1.0" spec="ooops!"/>
 <scenario operation="standard">
-<input-file role="principal-data">.xml</input-file>
-<input-file role="principal-stylesheet">.xsl</input-file>
-<output-file role="principal" compare="XML">.out</output-file>
+<input-file role="principal-data">string34.xml</input-file>
+<input-file role="principal-stylesheet">string34.xsl</input-file>
+<output-file role="principal" compare="XML">string34.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_">
+<test-case category="XSLT-Result-Tree" id="string_string35">
 <file-path>string</file-path>
 <spec-citation place="" type="section" version="1.0" spec="ooops!"/>
 <scenario operation="standard">
-<input-file role="principal-data">.xml</input-file>
-<input-file role="principal-stylesheet">.xsl</input-file>
-<output-file role="principal" compare="XML">.out</output-file>
+<input-file role="principal-data">string35.xml</input-file>
+<input-file role="principal-stylesheet">string35.xsl</input-file>
+<output-file role="principal" compare="XML">string35.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_">
+<test-case category="XSLT-Result-Tree" id="string_string36">
 <file-path>string</file-path>
 <spec-citation place="" type="section" version="1.0" spec="ooops!"/>
 <scenario operation="standard">
-<input-file role="principal-data">.xml</input-file>
-<input-file role="principal-stylesheet">.xsl</input-file>
-<output-file role="principal" compare="XML">.out</output-file>
+<input-file role="principal-data">string36.xml</input-file>
+<input-file role="principal-stylesheet">string36.xsl</input-file>
+<output-file role="principal" compare="XML">string36.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str37">
+<test-case category="XSLT-Result-Tree" id="string_string37">
 <file-path>string</file-path>
 <purpose>Test of 'string()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str37.xml</input-file>
-<input-file role="principal-stylesheet">str37.xsl</input-file>
-<output-file role="principal" compare="XML">str37.out</output-file>
+<input-file role="principal-data">string37.xml</input-file>
+<input-file role="principal-stylesheet">string37.xsl</input-file>
+<output-file role="principal" compare="XML">string37.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str38">
+<test-case category="XSLT-Result-Tree" id="string_string38">
 <file-path>string</file-path>
 <purpose>Test of 'string()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str38.xml</input-file>
-<input-file role="principal-stylesheet">str38.xsl</input-file>
-<output-file role="principal" compare="XML">str38.out</output-file>
+<input-file role="principal-data">string38.xml</input-file>
+<input-file role="principal-stylesheet">string38.xsl</input-file>
+<output-file role="principal" compare="XML">string38.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str39">
+<test-case category="XSLT-Result-Tree" id="string_string39">
 <file-path>string</file-path>
 <purpose>Test of 'string()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str39.xml</input-file>
-<input-file role="principal-stylesheet">str39.xsl</input-file>
-<output-file role="principal" compare="XML">str39.out</output-file>
+<input-file role="principal-data">string39.xml</input-file>
+<input-file role="principal-stylesheet">string39.xsl</input-file>
+<output-file role="principal" compare="XML">string39.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str40">
+<test-case category="XSLT-Result-Tree" id="string_string40">
 <file-path>string</file-path>
 <purpose>Test of 'string()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str40.xml</input-file>
-<input-file role="principal-stylesheet">str40.xsl</input-file>
-<output-file role="principal" compare="XML">str40.out</output-file>
+<input-file role="principal-data">string40.xml</input-file>
+<input-file role="principal-stylesheet">string40.xsl</input-file>
+<output-file role="principal" compare="XML">string40.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str41">
+<test-case category="XSLT-Result-Tree" id="string_string41">
 <file-path>string</file-path>
 <purpose>Test of 'string()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str41.xml</input-file>
-<input-file role="principal-stylesheet">str41.xsl</input-file>
-<output-file role="principal" compare="XML">str41.out</output-file>
+<input-file role="principal-data">string41.xml</input-file>
+<input-file role="principal-stylesheet">string41.xsl</input-file>
+<output-file role="principal" compare="XML">string41.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str42">
+<test-case category="XSLT-Result-Tree" id="string_string42">
 <file-path>string</file-path>
 <purpose>Test of 'string()' function on a simple RTF.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str42.xml</input-file>
-<input-file role="principal-stylesheet">str42.xsl</input-file>
-<output-file role="principal" compare="XML">str42.out</output-file>
+<input-file role="principal-data">string42.xml</input-file>
+<input-file role="principal-stylesheet">string42.xsl</input-file>
+<output-file role="principal" compare="XML">string42.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str43">
+<test-case category="XSLT-Result-Tree" id="string_string43">
 <file-path>string</file-path>
 <purpose>Test of 'string()' function with empty RTF.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str43.xml</input-file>
-<input-file role="principal-stylesheet">str43.xsl</input-file>
-<output-file role="principal" compare="XML">str43.out</output-file>
+<input-file role="principal-data">string43.xml</input-file>
+<input-file role="principal-stylesheet">string43.xsl</input-file>
+<output-file role="principal" compare="XML">string43.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str44">
+<test-case category="XSLT-Result-Tree" id="string_string44">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str44.xml</input-file>
-<input-file role="principal-stylesheet">str44.xsl</input-file>
-<output-file role="principal" compare="XML">str44.out</output-file>
+<input-file role="principal-data">string44.xml</input-file>
+<input-file role="principal-stylesheet">string44.xsl</input-file>
+<output-file role="principal" compare="XML">string44.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str45">
+<test-case category="XSLT-Result-Tree" id="string_string45">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str45.xml</input-file>
-<input-file role="principal-stylesheet">str45.xsl</input-file>
-<output-file role="principal" compare="XML">str45.out</output-file>
+<input-file role="principal-data">string45.xml</input-file>
+<input-file role="principal-stylesheet">string45.xsl</input-file>
+<output-file role="principal" compare="XML">string45.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str46">
+<test-case category="XSLT-Result-Tree" id="string_string46">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str46.xml</input-file>
-<input-file role="principal-stylesheet">str46.xsl</input-file>
-<output-file role="principal" compare="XML">str46.out</output-file>
+<input-file role="principal-data">string46.xml</input-file>
+<input-file role="principal-stylesheet">string46.xsl</input-file>
+<output-file role="principal" compare="XML">string46.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str47">
+<test-case category="XSLT-Result-Tree" id="string_string47">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str47.xml</input-file>
-<input-file role="principal-stylesheet">str47.xsl</input-file>
-<output-file role="principal" compare="XML">str47.out</output-file>
+<input-file role="principal-data">string47.xml</input-file>
+<input-file role="principal-stylesheet">string47.xsl</input-file>
+<output-file role="principal" compare="XML">string47.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str48">
+<test-case category="XSLT-Result-Tree" id="string_string48">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str48.xml</input-file>
-<input-file role="principal-stylesheet">str48.xsl</input-file>
-<output-file role="principal" compare="XML">str48.out</output-file>
+<input-file role="principal-data">string48.xml</input-file>
+<input-file role="principal-stylesheet">string48.xsl</input-file>
+<output-file role="principal" compare="XML">string48.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str49">
+<test-case category="XSLT-Result-Tree" id="string_string49">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str49.xml</input-file>
-<input-file role="principal-stylesheet">str49.xsl</input-file>
-<output-file role="principal" compare="XML">str49.out</output-file>
+<input-file role="principal-data">string49.xml</input-file>
+<input-file role="principal-stylesheet">string49.xsl</input-file>
+<output-file role="principal" compare="XML">string49.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str50">
+<test-case category="XSLT-Result-Tree" id="string_string50">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str50.xml</input-file>
-<input-file role="principal-stylesheet">str50.xsl</input-file>
-<output-file role="principal" compare="XML">str50.out</output-file>
+<input-file role="principal-data">string50.xml</input-file>
+<input-file role="principal-stylesheet">string50.xsl</input-file>
+<output-file role="principal" compare="XML">string50.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str51">
+<test-case category="XSLT-Result-Tree" id="string_string51">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function with node.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str51.xml</input-file>
-<input-file role="principal-stylesheet">str51.xsl</input-file>
-<output-file role="principal" compare="XML">str51.out</output-file>
+<input-file role="principal-data">string51.xml</input-file>
+<input-file role="principal-stylesheet">string51.xsl</input-file>
+<output-file role="principal" compare="XML">string51.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str52">
+<test-case category="XSLT-Result-Tree" id="string_string52">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function with node.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str52.xml</input-file>
-<input-file role="principal-stylesheet">str52.xsl</input-file>
-<output-file role="principal" compare="XML">str52.out</output-file>
+<input-file role="principal-data">string52.xml</input-file>
+<input-file role="principal-stylesheet">string52.xsl</input-file>
+<output-file role="principal" compare="XML">string52.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str53">
+<test-case category="XSLT-Result-Tree" id="string_string53">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function w/ attribute.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str53.xml</input-file>
-<input-file role="principal-stylesheet">str53.xsl</input-file>
-<output-file role="principal" compare="XML">str53.out</output-file>
+<input-file role="principal-data">string53.xml</input-file>
+<input-file role="principal-stylesheet">string53.xsl</input-file>
+<output-file role="principal" compare="XML">string53.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str54">
+<test-case category="XSLT-Result-Tree" id="string_string54">
 <file-path>string</file-path>
 <purpose>Test of 'starts-with()' function with attribute.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str54.xml</input-file>
-<input-file role="principal-stylesheet">str54.xsl</input-file>
-<output-file role="principal" compare="XML">str54.out</output-file>
+<input-file role="principal-data">string54.xml</input-file>
+<input-file role="principal-stylesheet">string54.xsl</input-file>
+<output-file role="principal" compare="XML">string54.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str55">
+<test-case category="XSLT-Result-Tree" id="string_string55">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str55.xml</input-file>
-<input-file role="principal-stylesheet">str55.xsl</input-file>
-<output-file role="principal" compare="XML">str55.out</output-file>
+<input-file role="principal-data">string55.xml</input-file>
+<input-file role="principal-stylesheet">string55.xsl</input-file>
+<output-file role="principal" compare="XML">string55.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str56">
+<test-case category="XSLT-Result-Tree" id="string_string56">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function using variables.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str56.xml</input-file>
-<input-file role="principal-stylesheet">str56.xsl</input-file>
-<output-file role="principal" compare="XML">str56.out</output-file>
+<input-file role="principal-data">string56.xml</input-file>
+<input-file role="principal-stylesheet">string56.xsl</input-file>
+<output-file role="principal" compare="XML">string56.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str57">
+<test-case category="XSLT-Result-Tree" id="string_string57">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function using expressions.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str57.xml</input-file>
-<input-file role="principal-stylesheet">str57.xsl</input-file>
-<output-file role="principal" compare="XML">str57.out</output-file>
+<input-file role="principal-data">string57.xml</input-file>
+<input-file role="principal-stylesheet">string57.xsl</input-file>
+<output-file role="principal" compare="XML">string57.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str58">
+<test-case category="XSLT-Result-Tree" id="string_string58">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str58.xml</input-file>
-<input-file role="principal-stylesheet">str58.xsl</input-file>
-<output-file role="principal" compare="XML">str58.out</output-file>
+<input-file role="principal-data">string58.xml</input-file>
+<input-file role="principal-stylesheet">string58.xsl</input-file>
+<output-file role="principal" compare="XML">string58.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str59">
+<test-case category="XSLT-Result-Tree" id="string_string59">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str59.xml</input-file>
-<input-file role="principal-stylesheet">str59.xsl</input-file>
-<output-file role="principal" compare="XML">str59.out</output-file>
+<input-file role="principal-data">string59.xml</input-file>
+<input-file role="principal-stylesheet">string59.xsl</input-file>
+<output-file role="principal" compare="XML">string59.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str60">
+<test-case category="XSLT-Result-Tree" id="string_string60">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str60.xml</input-file>
-<input-file role="principal-stylesheet">str60.xsl</input-file>
-<output-file role="principal" compare="XML">str60.out</output-file>
+<input-file role="principal-data">string60.xml</input-file>
+<input-file role="principal-stylesheet">string60.xsl</input-file>
+<output-file role="principal" compare="XML">string60.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str61">
+<test-case category="XSLT-Result-Tree" id="string_string61">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str61.xml</input-file>
-<input-file role="principal-stylesheet">str61.xsl</input-file>
-<output-file role="principal" compare="XML">str61.out</output-file>
+<input-file role="principal-data">string61.xml</input-file>
+<input-file role="principal-stylesheet">string61.xsl</input-file>
+<output-file role="principal" compare="XML">string61.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str62">
+<test-case category="XSLT-Result-Tree" id="string_string62">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str62.xml</input-file>
-<input-file role="principal-stylesheet">str62.xsl</input-file>
-<output-file role="principal" compare="XML">str62.out</output-file>
+<input-file role="principal-data">string62.xml</input-file>
+<input-file role="principal-stylesheet">string62.xsl</input-file>
+<output-file role="principal" compare="XML">string62.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str63">
+<test-case category="XSLT-Result-Tree" id="string_string63">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str63.xml</input-file>
-<input-file role="principal-stylesheet">str63.xsl</input-file>
-<output-file role="principal" compare="XML">str63.out</output-file>
+<input-file role="principal-data">string63.xml</input-file>
+<input-file role="principal-stylesheet">string63.xsl</input-file>
+<output-file role="principal" compare="XML">string63.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str64">
+<test-case category="XSLT-Result-Tree" id="string_string64">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function with node as 1st argument, string is in it.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str64.xml</input-file>
-<input-file role="principal-stylesheet">str64.xsl</input-file>
-<output-file role="principal" compare="XML">str64.out</output-file>
+<input-file role="principal-data">string64.xml</input-file>
+<input-file role="principal-stylesheet">string64.xsl</input-file>
+<output-file role="principal" compare="XML">string64.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str65">
+<test-case category="XSLT-Result-Tree" id="string_string65">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function with node as 1st argument, string is not in it.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str65.xml</input-file>
-<input-file role="principal-stylesheet">str65.xsl</input-file>
-<output-file role="principal" compare="XML">str65.out</output-file>
+<input-file role="principal-data">string65.xml</input-file>
+<input-file role="principal-stylesheet">string65.xsl</input-file>
+<output-file role="principal" compare="XML">string65.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str66">
+<test-case category="XSLT-Result-Tree" id="string_string66">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function with attribute as 1st argument, string is in it.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str66.xml</input-file>
-<input-file role="principal-stylesheet">str66.xsl</input-file>
-<output-file role="principal" compare="XML">str66.out</output-file>
+<input-file role="principal-data">string66.xml</input-file>
+<input-file role="principal-stylesheet">string66.xsl</input-file>
+<output-file role="principal" compare="XML">string66.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str67">
+<test-case category="XSLT-Result-Tree" id="string_string67">
 <file-path>string</file-path>
 <purpose>Test of 'contains()' function with attribute as 1st argument, string is not in it.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str67.xml</input-file>
-<input-file role="principal-stylesheet">str67.xsl</input-file>
-<output-file role="principal" compare="XML">str67.out</output-file>
+<input-file role="principal-data">string67.xml</input-file>
+<input-file role="principal-stylesheet">string67.xsl</input-file>
+<output-file role="principal" compare="XML">string67.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str68">
+<test-case category="XSLT-Result-Tree" id="string_string68">
 <file-path>string</file-path>
 <purpose>Test of 'substring-before()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str68.xml</input-file>
-<input-file role="principal-stylesheet">str68.xsl</input-file>
-<output-file role="principal" compare="XML">str68.out</output-file>
+<input-file role="principal-data">string68.xml</input-file>
+<input-file role="principal-stylesheet">string68.xsl</input-file>
+<output-file role="principal" compare="XML">string68.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str69">
+<test-case category="XSLT-Result-Tree" id="string_string69">
 <file-path>string</file-path>
 <purpose>Test of 'substring-before()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str69.xml</input-file>
-<input-file role="principal-stylesheet">str69.xsl</input-file>
-<output-file role="principal" compare="XML">str69.out</output-file>
+<input-file role="principal-data">string69.xml</input-file>
+<input-file role="principal-stylesheet">string69.xsl</input-file>
+<output-file role="principal" compare="XML">string69.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str70">
+<test-case category="XSLT-Result-Tree" id="string_string70">
 <file-path>string</file-path>
 <purpose>Test of 'substring-before()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str70.xml</input-file>
-<input-file role="principal-stylesheet">str70.xsl</input-file>
-<output-file role="principal" compare="XML">str70.out</output-file>
+<input-file role="principal-data">string70.xml</input-file>
+<input-file role="principal-stylesheet">string70.xsl</input-file>
+<output-file role="principal" compare="XML">string70.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str71">
+<test-case category="XSLT-Result-Tree" id="string_string71">
 <file-path>string</file-path>
 <purpose>Test of 'substring-before()' function with node.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str71.xml</input-file>
-<input-file role="principal-stylesheet">str71.xsl</input-file>
-<output-file role="principal" compare="XML">str71.out</output-file>
+<input-file role="principal-data">string71.xml</input-file>
+<input-file role="principal-stylesheet">string71.xsl</input-file>
+<output-file role="principal" compare="XML">string71.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str72">
+<test-case category="XSLT-Result-Tree" id="string_string72">
 <file-path>string</file-path>
 <purpose>Test of 'substring-before()' function with empty node.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str72.xml</input-file>
-<input-file role="principal-stylesheet">str72.xsl</input-file>
-<output-file role="principal" compare="XML">str72.out</output-file>
+<input-file role="principal-data">string72.xml</input-file>
+<input-file role="principal-stylesheet">string72.xsl</input-file>
+<output-file role="principal" compare="XML">string72.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str73">
+<test-case category="XSLT-Result-Tree" id="string_string73">
 <file-path>string</file-path>
 <purpose>Test of 'substring-before()' function with attribute.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str73.xml</input-file>
-<input-file role="principal-stylesheet">str73.xsl</input-file>
-<output-file role="principal" compare="XML">str73.out</output-file>
+<input-file role="principal-data">string73.xml</input-file>
+<input-file role="principal-stylesheet">string73.xsl</input-file>
+<output-file role="principal" compare="XML">string73.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str74">
+<test-case category="XSLT-Result-Tree" id="string_string74">
 <file-path>string</file-path>
 <purpose>Test of 'substring-before()' function with attribute.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str74.xml</input-file>
-<input-file role="principal-stylesheet">str74.xsl</input-file>
-<output-file role="principal" compare="XML">str74.out</output-file>
+<input-file role="principal-data">string74.xml</input-file>
+<input-file role="principal-stylesheet">string74.xsl</input-file>
+<output-file role="principal" compare="XML">string74.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str75">
+<test-case category="XSLT-Result-Tree" id="string_string75">
 <file-path>string</file-path>
 <purpose>Test of 'substring-before()' function with attribute.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str75.xml</input-file>
-<input-file role="principal-stylesheet">str75.xsl</input-file>
-<output-file role="principal" compare="XML">str75.out</output-file>
+<input-file role="principal-data">string75.xml</input-file>
+<input-file role="principal-stylesheet">string75.xsl</input-file>
+<output-file role="principal" compare="XML">string75.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str76">
+<test-case category="XSLT-Result-Tree" id="string_string76">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str76.xml</input-file>
-<input-file role="principal-stylesheet">str76.xsl</input-file>
-<output-file role="principal" compare="XML">str76.out</output-file>
+<input-file role="principal-data">string76.xml</input-file>
+<input-file role="principal-stylesheet">string76.xsl</input-file>
+<output-file role="principal" compare="XML">string76.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str77">
+<test-case category="XSLT-Result-Tree" id="string_string77">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str77.xml</input-file>
-<input-file role="principal-stylesheet">str77.xsl</input-file>
-<output-file role="principal" compare="XML">str77.out</output-file>
+<input-file role="principal-data">string77.xml</input-file>
+<input-file role="principal-stylesheet">string77.xsl</input-file>
+<output-file role="principal" compare="XML">string77.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str78">
+<test-case category="XSLT-Result-Tree" id="string_string78">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str78.xml</input-file>
-<input-file role="principal-stylesheet">str78.xsl</input-file>
-<output-file role="principal" compare="XML">str78.out</output-file>
+<input-file role="principal-data">string78.xml</input-file>
+<input-file role="principal-stylesheet">string78.xsl</input-file>
+<output-file role="principal" compare="XML">string78.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str79">
+<test-case category="XSLT-Result-Tree" id="string_string79">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str79.xml</input-file>
-<input-file role="principal-stylesheet">str79.xsl</input-file>
-<output-file role="principal" compare="XML">str79.out</output-file>
+<input-file role="principal-data">string79.xml</input-file>
+<input-file role="principal-stylesheet">string79.xsl</input-file>
+<output-file role="principal" compare="XML">string79.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str80">
+<test-case category="XSLT-Result-Tree" id="string_string80">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()' function with node.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str80.xml</input-file>
-<input-file role="principal-stylesheet">str80.xsl</input-file>
-<output-file role="principal" compare="XML">str80.out</output-file>
+<input-file role="principal-data">string80.xml</input-file>
+<input-file role="principal-stylesheet">string80.xsl</input-file>
+<output-file role="principal" compare="XML">string80.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str81">
+<test-case category="XSLT-Result-Tree" id="string_string81">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()' function with empty node.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str81.xml</input-file>
-<input-file role="principal-stylesheet">str81.xsl</input-file>
-<output-file role="principal" compare="XML">str81.out</output-file>
+<input-file role="principal-data">string81.xml</input-file>
+<input-file role="principal-stylesheet">string81.xsl</input-file>
+<output-file role="principal" compare="XML">string81.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str82">
+<test-case category="XSLT-Result-Tree" id="string_string82">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()' function with attribute</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str82.xml</input-file>
-<input-file role="principal-stylesheet">str82.xsl</input-file>
-<output-file role="principal" compare="XML">str82.out</output-file>
+<input-file role="principal-data">string82.xml</input-file>
+<input-file role="principal-stylesheet">string82.xsl</input-file>
+<output-file role="principal" compare="XML">string82.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str83">
+<test-case category="XSLT-Result-Tree" id="string_string83">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()' function with attribute.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str83.xml</input-file>
-<input-file role="principal-stylesheet">str83.xsl</input-file>
-<output-file role="principal" compare="XML">str83.out</output-file>
+<input-file role="principal-data">string83.xml</input-file>
+<input-file role="principal-stylesheet">string83.xsl</input-file>
+<output-file role="principal" compare="XML">string83.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str84">
+<test-case category="XSLT-Result-Tree" id="string_string84">
 <file-path>string</file-path>
 <purpose>Test of 'substring-after()' function with attribute.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str84.xml</input-file>
-<input-file role="principal-stylesheet">str84.xsl</input-file>
-<output-file role="principal" compare="XML">str84.out</output-file>
+<input-file role="principal-data">string84.xml</input-file>
+<input-file role="principal-stylesheet">string84.xsl</input-file>
+<output-file role="principal" compare="XML">string84.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str85">
+<test-case category="XSLT-Result-Tree" id="string_string85">
 <file-path>string</file-path>
 <purpose>Test of 'normalize-space()' function with node.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str85.xml</input-file>
-<input-file role="principal-stylesheet">str85.xsl</input-file>
-<output-file role="principal" compare="XML">str85.out</output-file>
+<input-file role="principal-data">string85.xml</input-file>
+<input-file role="principal-stylesheet">string85.xsl</input-file>
+<output-file role="principal" compare="XML">string85.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str86">
+<test-case category="XSLT-Result-Tree" id="string_string86">
 <file-path>string</file-path>
 <purpose>Test of 'normaliz-space()' function with empty node.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str86.xml</input-file>
-<input-file role="principal-stylesheet">str86.xsl</input-file>
-<output-file role="principal" compare="XML">str86.out</output-file>
+<input-file role="principal-data">string86.xml</input-file>
+<input-file role="principal-stylesheet">string86.xsl</input-file>
+<output-file role="principal" compare="XML">string86.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str87">
+<test-case category="XSLT-Result-Tree" id="string_string87">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str87.xml</input-file>
-<input-file role="principal-stylesheet">str87.xsl</input-file>
-<output-file role="principal" compare="XML">str87.out</output-file>
+<input-file role="principal-data">string87.xml</input-file>
+<input-file role="principal-stylesheet">string87.xsl</input-file>
+<output-file role="principal" compare="XML">string87.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str88">
+<test-case category="XSLT-Result-Tree" id="string_string88">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str88.xml</input-file>
-<input-file role="principal-stylesheet">str88.xsl</input-file>
-<output-file role="principal" compare="XML">str88.out</output-file>
+<input-file role="principal-data">string88.xml</input-file>
+<input-file role="principal-stylesheet">string88.xsl</input-file>
+<output-file role="principal" compare="XML">string88.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str89">
+<test-case category="XSLT-Result-Tree" id="string_string89">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str89.xml</input-file>
-<input-file role="principal-stylesheet">str89.xsl</input-file>
-<output-file role="principal" compare="XML">str89.out</output-file>
+<input-file role="principal-data">string89.xml</input-file>
+<input-file role="principal-stylesheet">string89.xsl</input-file>
+<output-file role="principal" compare="XML">string89.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str90">
+<test-case category="XSLT-Result-Tree" id="string_string90">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str90.xml</input-file>
-<input-file role="principal-stylesheet">str90.xsl</input-file>
-<output-file role="principal" compare="XML">str90.out</output-file>
+<input-file role="principal-data">string90.xml</input-file>
+<input-file role="principal-stylesheet">string90.xsl</input-file>
+<output-file role="principal" compare="XML">string90.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str91">
+<test-case category="XSLT-Result-Tree" id="string_string91">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str91.xml</input-file>
-<input-file role="principal-stylesheet">str91.xsl</input-file>
-<output-file role="principal" compare="XML">str91.out</output-file>
+<input-file role="principal-data">string91.xml</input-file>
+<input-file role="principal-stylesheet">string91.xsl</input-file>
+<output-file role="principal" compare="XML">string91.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str92">
+<test-case category="XSLT-Result-Tree" id="string_string92">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function with attributes.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str92.xml</input-file>
-<input-file role="principal-stylesheet">str92.xsl</input-file>
-<output-file role="principal" compare="XML">str92.out</output-file>
+<input-file role="principal-data">string92.xml</input-file>
+<input-file role="principal-stylesheet">string92.xsl</input-file>
+<output-file role="principal" compare="XML">string92.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str93">
+<test-case category="XSLT-Result-Tree" id="string_string93">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function with attributes.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str93.xml</input-file>
-<input-file role="principal-stylesheet">str93.xsl</input-file>
-<output-file role="principal" compare="XML">str93.out</output-file>
+<input-file role="principal-data">string93.xml</input-file>
+<input-file role="principal-stylesheet">string93.xsl</input-file>
+<output-file role="principal" compare="XML">string93.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str94">
+<test-case category="XSLT-Result-Tree" id="string_string94">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function with attributes.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str94.xml</input-file>
-<input-file role="principal-stylesheet">str94.xsl</input-file>
-<output-file role="principal" compare="XML">str94.out</output-file>
+<input-file role="principal-data">string94.xml</input-file>
+<input-file role="principal-stylesheet">string94.xsl</input-file>
+<output-file role="principal" compare="XML">string94.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str95">
+<test-case category="XSLT-Result-Tree" id="string_string95">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str95.xml</input-file>
-<input-file role="principal-stylesheet">str95.xsl</input-file>
-<output-file role="principal" compare="XML">str95.out</output-file>
+<input-file role="principal-data">string95.xml</input-file>
+<input-file role="principal-stylesheet">string95.xsl</input-file>
+<output-file role="principal" compare="XML">string95.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str96">
+<test-case category="XSLT-Result-Tree" id="string_string96">
 <file-path>string</file-path>
 <purpose>Test of 'translate()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str96.xml</input-file>
-<input-file role="principal-stylesheet">str96.xsl</input-file>
-<output-file role="principal" compare="XML">str96.out</output-file>
+<input-file role="principal-data">string96.xml</input-file>
+<input-file role="principal-stylesheet">string96.xsl</input-file>
+<output-file role="principal" compare="XML">string96.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str97">
+<test-case category="XSLT-Result-Tree" id="string_string97">
 <file-path>string</file-path>
 <purpose>Test of 'concat()' function.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str97.xml</input-file>
-<input-file role="principal-stylesheet">str97.xsl</input-file>
-<output-file role="principal" compare="XML">str97.out</output-file>
+<input-file role="principal-data">string97.xml</input-file>
+<input-file role="principal-stylesheet">string97.xsl</input-file>
+<output-file role="principal" compare="XML">string97.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str98">
+<test-case category="XSLT-Result-Tree" id="string_string98">
 <file-path>string</file-path>
 <purpose>Test of 'concat()' function with nodes.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str98.xml</input-file>
-<input-file role="principal-stylesheet">str98.xsl</input-file>
-<output-file role="principal" compare="XML">str98.out</output-file>
+<input-file role="principal-data">string98.xml</input-file>
+<input-file role="principal-stylesheet">string98.xsl</input-file>
+<output-file role="principal" compare="XML">string98.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str99">
+<test-case category="XSLT-Result-Tree" id="string_string99">
 <file-path>string</file-path>
 <purpose>Test of 'concat()' function with nodes.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str99.xml</input-file>
-<input-file role="principal-stylesheet">str99.xsl</input-file>
-<output-file role="principal" compare="XML">str99.out</output-file>
+<input-file role="principal-data">string99.xml</input-file>
+<input-file role="principal-stylesheet">string99.xsl</input-file>
+<output-file role="principal" compare="XML">string99.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str100">
+<test-case category="XSLT-Result-Tree" id="string_string100">
 <file-path>string</file-path>
 <purpose>Test of 'concat()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str100.xml</input-file>
-<input-file role="principal-stylesheet">str100.xsl</input-file>
-<output-file role="principal" compare="XML">str100.out</output-file>
+<input-file role="principal-data">string100.xml</input-file>
+<input-file role="principal-stylesheet">string100.xsl</input-file>
+<output-file role="principal" compare="XML">string100.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str101">
+<test-case category="XSLT-Result-Tree" id="string_string101">
 <file-path>string</file-path>
 <purpose>Test of 'concat()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str101.xml</input-file>
-<input-file role="principal-stylesheet">str101.xsl</input-file>
-<output-file role="principal" compare="XML">str101.out</output-file>
+<input-file role="principal-data">string101.xml</input-file>
+<input-file role="principal-stylesheet">string101.xsl</input-file>
+<output-file role="principal" compare="XML">string101.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str102">
+<test-case category="XSLT-Result-Tree" id="string_string102">
 <file-path>string</file-path>
 <purpose>Test of concat() on entities and expressions</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str102.xml</input-file>
-<input-file role="principal-stylesheet">str102.xsl</input-file>
-<output-file role="principal" compare="XML">str102.out</output-file>
+<input-file role="principal-data">string102.xml</input-file>
+<input-file role="principal-stylesheet">string102.xsl</input-file>
+<output-file role="principal" compare="XML">string102.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str103">
+<test-case category="XSLT-Result-Tree" id="string_string103">
 <file-path>string</file-path>
 <purpose>Test of 'concat()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str103.xml</input-file>
-<input-file role="principal-stylesheet">str103.xsl</input-file>
-<output-file role="principal" compare="XML">str103.out</output-file>
+<input-file role="principal-data">string103.xml</input-file>
+<input-file role="principal-stylesheet">string103.xsl</input-file>
+<output-file role="principal" compare="XML">string103.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str104">
+<test-case category="XSLT-Result-Tree" id="string_string104">
 <file-path>string</file-path>
 <purpose>Test of 'concat()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str104.xml</input-file>
-<input-file role="principal-stylesheet">str104.xsl</input-file>
-<output-file role="principal" compare="XML">str104.out</output-file>
+<input-file role="principal-data">string104.xml</input-file>
+<input-file role="principal-stylesheet">string104.xsl</input-file>
+<output-file role="principal" compare="XML">string104.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str105">
+<test-case category="XSLT-Result-Tree" id="string_string105">
 <file-path>string</file-path>
 <purpose>Special case of concat() with one argument. Strictly speaking, this should fail just like STRerr14.</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str105.xml</input-file>
-<input-file role="principal-stylesheet">str105.xsl</input-file>
-<output-file role="principal" compare="XML">str105.out</output-file>
+<input-file role="principal-data">string105.xml</input-file>
+<input-file role="principal-stylesheet">string105.xsl</input-file>
+<output-file role="principal" compare="XML">string105.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str106">
+<test-case category="XSLT-Result-Tree" id="string_string106">
 <file-path>string</file-path>
 <purpose>Test of 'format-number()'</purpose>
 <spec-citation place="12.3" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">str106.xml</input-file>
-<input-file role="principal-stylesheet">str106.xsl</input-file>
-<output-file role="principal" compare="XML">str106.out</output-file>
+<input-file role="principal-data">string106.xml</input-file>
+<input-file role="principal-stylesheet">string106.xsl</input-file>
+<output-file role="principal" compare="XML">string106.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="string_string107">
@@ -18043,144 +18043,144 @@
 <output-file role="principal" compare="XML">string107.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str108">
+<test-case category="XSLT-Result-Tree" id="string_string108">
 <file-path>string</file-path>
 <purpose>Test of 'format-number()'</purpose>
 <spec-citation place="12.3" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">str108.xml</input-file>
-<input-file role="principal-stylesheet">str108.xsl</input-file>
-<output-file role="principal" compare="XML">str108.out</output-file>
+<input-file role="principal-data">string108.xml</input-file>
+<input-file role="principal-stylesheet">string108.xsl</input-file>
+<output-file role="principal" compare="XML">string108.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str109">
+<test-case category="XSLT-Result-Tree" id="string_string109">
 <file-path>string</file-path>
 <purpose>Test of 'format-number()'</purpose>
 <spec-citation place="12.3" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">str109.xml</input-file>
-<input-file role="principal-stylesheet">str109.xsl</input-file>
-<output-file role="principal" compare="XML">str109.out</output-file>
+<input-file role="principal-data">string109.xml</input-file>
+<input-file role="principal-stylesheet">string109.xsl</input-file>
+<output-file role="principal" compare="XML">string109.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str110">
+<test-case category="XSLT-Result-Tree" id="string_string110">
 <file-path>string</file-path>
 <purpose>Test of 'format-number()'</purpose>
 <spec-citation place="12.3" type="section" version="1.0" spec="xslt"/>
 <scenario operation="standard">
-<input-file role="principal-data">str110.xml</input-file>
-<input-file role="principal-stylesheet">str110.xsl</input-file>
-<output-file role="principal" compare="XML">str110.out</output-file>
+<input-file role="principal-data">string110.xml</input-file>
+<input-file role="principal-stylesheet">string110.xsl</input-file>
+<output-file role="principal" compare="XML">string110.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str111">
+<test-case category="XSLT-Result-Tree" id="string_string111">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str111.xml</input-file>
-<input-file role="principal-stylesheet">str111.xsl</input-file>
-<output-file role="principal" compare="XML">str111.out</output-file>
+<input-file role="principal-data">string111.xml</input-file>
+<input-file role="principal-stylesheet">string111.xsl</input-file>
+<output-file role="principal" compare="XML">string111.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str112">
+<test-case category="XSLT-Result-Tree" id="string_string112">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str112.xml</input-file>
-<input-file role="principal-stylesheet">str112.xsl</input-file>
-<output-file role="principal" compare="XML">str112.out</output-file>
+<input-file role="principal-data">string112.xml</input-file>
+<input-file role="principal-stylesheet">string112.xsl</input-file>
+<output-file role="principal" compare="XML">string112.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str113">
+<test-case category="XSLT-Result-Tree" id="string_string113">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str113.xml</input-file>
-<input-file role="principal-stylesheet">str113.xsl</input-file>
-<output-file role="principal" compare="XML">str113.out</output-file>
+<input-file role="principal-data">string113.xml</input-file>
+<input-file role="principal-stylesheet">string113.xsl</input-file>
+<output-file role="principal" compare="XML">string113.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str114">
+<test-case category="XSLT-Result-Tree" id="string_string114">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str114.xml</input-file>
-<input-file role="principal-stylesheet">str114.xsl</input-file>
-<output-file role="principal" compare="XML">str114.out</output-file>
+<input-file role="principal-data">string114.xml</input-file>
+<input-file role="principal-stylesheet">string114.xsl</input-file>
+<output-file role="principal" compare="XML">string114.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str115">
+<test-case category="XSLT-Result-Tree" id="string_string115">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str115.xml</input-file>
-<input-file role="principal-stylesheet">str115.xsl</input-file>
-<output-file role="principal" compare="XML">str115.out</output-file>
+<input-file role="principal-data">string115.xml</input-file>
+<input-file role="principal-stylesheet">string115.xsl</input-file>
+<output-file role="principal" compare="XML">string115.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str116">
+<test-case category="XSLT-Result-Tree" id="string_string116">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str116.xml</input-file>
-<input-file role="principal-stylesheet">str116.xsl</input-file>
-<output-file role="principal" compare="XML">str116.out</output-file>
+<input-file role="principal-data">string116.xml</input-file>
+<input-file role="principal-stylesheet">string116.xsl</input-file>
+<output-file role="principal" compare="XML">string116.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str117">
+<test-case category="XSLT-Result-Tree" id="string_string117">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str117.xml</input-file>
-<input-file role="principal-stylesheet">str117.xsl</input-file>
-<output-file role="principal" compare="XML">str117.out</output-file>
+<input-file role="principal-data">string117.xml</input-file>
+<input-file role="principal-stylesheet">string117.xsl</input-file>
+<output-file role="principal" compare="XML">string117.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str118">
+<test-case category="XSLT-Result-Tree" id="string_string118">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str118.xml</input-file>
-<input-file role="principal-stylesheet">str118.xsl</input-file>
-<output-file role="principal" compare="XML">str118.out</output-file>
+<input-file role="principal-data">string118.xml</input-file>
+<input-file role="principal-stylesheet">string118.xsl</input-file>
+<output-file role="principal" compare="XML">string118.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str119">
+<test-case category="XSLT-Result-Tree" id="string_string119">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str119.xml</input-file>
-<input-file role="principal-stylesheet">str119.xsl</input-file>
-<output-file role="principal" compare="XML">str119.out</output-file>
+<input-file role="principal-data">string119.xml</input-file>
+<input-file role="principal-stylesheet">string119.xsl</input-file>
+<output-file role="principal" compare="XML">string119.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str120">
+<test-case category="XSLT-Result-Tree" id="string_string120">
 <file-path>string</file-path>
 <purpose>Test of 'substring()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str120.xml</input-file>
-<input-file role="principal-stylesheet">str120.xsl</input-file>
-<output-file role="principal" compare="XML">str120.out</output-file>
+<input-file role="principal-data">string120.xml</input-file>
+<input-file role="principal-stylesheet">string120.xsl</input-file>
+<output-file role="principal" compare="XML">string120.out</output-file>
 </scenario>
 </test-case>
-<test-case category="XSLT-Result-Tree" id="string_str121">
+<test-case category="XSLT-Result-Tree" id="string_string121">
 <file-path>string</file-path>
 <purpose>Test of 'translate()'</purpose>
 <spec-citation place="4.2" type="section" version="1.0" spec="xpath"/>
 <scenario operation="standard">
-<input-file role="principal-data">str121.xml</input-file>
-<input-file role="principal-stylesheet">str121.xsl</input-file>
-<output-file role="principal" compare="XML">str121.out</output-file>
+<input-file role="principal-data">string121.xml</input-file>
+<input-file role="principal-stylesheet">string121.xsl</input-file>
+<output-file role="principal" compare="XML">string121.out</output-file>
 </scenario>
 </test-case>
 <test-case category="XSLT-Result-Tree" id="string_string122">
