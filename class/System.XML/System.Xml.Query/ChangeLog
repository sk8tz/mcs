2004-09-13  Atsushi Enomoto <atsushi@ximian.com>

	* SequenceType.cs, XPath2Expression.cs :
	  Added SequenceType.IsNumeric(XmlTypeCode).
	  In type comparison, untyped XPathNavigator is xdt:untypedAtomic
	  (not sure as yet if it is always correct.)
	* XQueryComparisonOperator.cs : rewrote all numeric comparison using
	  IsNumeric().

2004-09-12  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs : ComparisonExpr.CompareAtomic() should consider
	  spec-conformant untypedAtomic handling.
	* XQueryContext.cs : Variables were incorrectly added to the older
	  context. Fixed Context and ContextManager constructors that were 
	  in silly chicken-and-egg.
	* XPathSequence.cs : now Context property always returns current
	  XQuery context (will be fixed; it is workaround for variable
	  resolution). In For iteration, context sequence should vary.
	* XQueryComparisonOperator.cs : All value comparison failed to return
	  true when both operands are the same types.
	* XsltCommand.cs : use XmlWriter.Create().

2004-09-08  Atsushi Enomoto <atsushi@ximian.com>

	* XPathSequence.cs : workarounded bug #65521. Erased foreach inside
	  iterators.

2004-09-08  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs : fixed EnclosedExpr.Compile() that resulted
	  in index out of range.
	* XPathSequence.cs : FLWORIterator got working, but only when compiled
	  with .NET 2.0 csc (still weird Invalid IL error happens).

2004-08-31  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs,
	  XPathSequence.cs :
	  Implemented GroupExpr.Evaluate() [union/intersect/except].
	  Fixed incorrect iterator input for DescendantExpr.Evaluate().
	  MinusExpr is (already) implemented not to be evaluated.
	* XQueryExpression.cs :
	  PI name and nameExpr could be implemented.
	* XQueryFunction.cs :
	  UserFunctionCallExpr.Invoke() should not be invoked.
	* XQueryFunctionCliImpl.cs :
	  Implemented count(), doc(). Halfly implemented trace().
	* XmlQueryException.cs : Serializable.

2004-08-31  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs :
	  Implemented the whole ComparisonExpr.Evaluate(). It now handles
	  empty sequence expectedly.
	* XQueryComparisonOperator.cs : added.

2004-08-31  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs :
	  Revised some parameters for XPathSequence classes ctor().
	  Don't require XPathSequence while they are not required.
	  AxisIterator need to accept only current node as its input.
	  Implemented node comparison operators.
	  Removed AxisStepExpr.ParentStep (in the future it might hold line
	  information).
	* XQueryParser.jay : changes wrt AxisStepExpr.ParentStep.
	* XPathSequence.cs, XQueryExpression.cs, XQueryFunction.cs :
	  Removed some extraneous code.
	  NodeIterator.ctor() now requires XPathNavigator and XQueryContext
	  instead of XPathSequence.
	  Added SelfIterator (derived from NodeIterator).

2004-08-31  Atsushi Enomoto <atsushi@ximian.com>

	* XQueryArithmeticOperator.cs : added.
	* XPath2Expression.cs, XQueryParser.jay :
	  renamed some ArithmeticOperator enumeration members.
	  Implemented ArithmeticOperationExpr.Evaluate().

2004-08-30  Atsushi Enomoto <atsushi@ximian.com>

	* XPathSequence.cs : fixed NodeIterator to get correct current node
	  from the input sequence. Now open MoveNext() again as public to
	  allow override by NodeIterator.

2004-08-30  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs : empty ExprSequence should not be allowed for
	  FLWORExpr.WhereClause. It should be null.
	* XPathSequence.cs : ExprSequenceIterator.Clone() was missing copy of
	  the input sequence. FLWORIterator.MoveNext() had incorrect !(not)
	  and wrong Where test.
	* XQueryContext.cs : sequence should be cloned when pushed to context.

2004-08-30  Atsushi Enomoto <atsushi@ximian.com>

	* XQueryCommandImpl.cs : dust cleaning :(

2004-08-30  Atsushi Enomoto <atsushi@ximian.com>

	* XQueryASTCompiler.cs, XQueryStaticContext.cs :
	  Now it requires Evidence and XQueryCommandImpl for security check 
	  and event dispatch.
	* XQueryCommandImpl.cs :
	  Provide Evidence for compiler. Added some code for message dispatch.
	* XQueryContext.cs :
	  Now don't pool variable only in XQueryContextManager.
	  When variable name could not be resolved, return empty sequence
	  (not sure if it is always correct).
	  Fixes which reflects XPathEmptySequence.ctor() parameter changes.
	* XQueryCliFunction.cs :
	  Now it requires CAS if Evidence is supplied (in the future 
	  Evidence won't be null _at any time_).
	* XQueryConvert.cs :
	  implemented GetFallbackType(). Fixed some comments.
	* XPathSequence.cs :
	  Don't require XPathSequence as an argument for XPathEmptySequence.
	  Implemented FilteredIterator.
	  Implemented FLWORIterator partly (not working).
	  Fixed some incorrect exception type: XPathEx- to XmlQueryEx-.
	  Dispatch message event to XQueryStaticContext.OnMessageEvent().
	  Added EnumeratorIterator.
	* XQueryFunction.cs:
	  Fixes which reflects XPathEmptySequence.ctor() parameter changes.
	* XQueryExpression.cs :
	  Commonized content serialization for node constructors.
	* XPath2Expression.cs :
	  use XPathItem.TypedValue instead of (string) Value.
	  In effective boolean value computation, Check Decimal as well. 
	  Fixed misimplemented QuantifiedExpr.EvaluateAsBoolean().
	  Fix which reflects XQueryContext.PushVariables() changes.
	  Handle possible null argument on ParenthesizedExpr i.e. "( )".

2004-08-26  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs :
	  Fixed PathRootExpr.Evaluate() that always failed.
	  Renamed PathChildExpr to PathSlashExpr, PathDescendantExpr to
	  PathSlash2Expr, and added abstract PathStepExpr.
	  PathSlash2Expr.Evaluate() now uses PathStepIterator
	* XPathSequence.cs :
	  - Modified MoveNextCore() as protected.
	  - Fixed SingleItemIterator.MoveNext() to be simple.
	  - Renamed ChildPathIterator to PathStepIterator. Mostly copied 
	    SlashIterator logic from Iterator.cs into PathStepIterator.
	  - Removed DescendantPathIterator ("//" should be the same as
	    "/descendant-or-self::node()/").
	  - NodeIterator.Node should come from current node, not context node.
	  - Added dummy flag for NodeIterator's copy constructor (that resulted
	    in incorrect copying for some usecases).
	* XQueryParser.jay : Fixes in sync with Expr class name changes.

2004-08-26  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs :
	  Don't compute node's EBV based on atomized value.

2004-08-26  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs : in Compiler(), function call's arguments must
	  also be compiled.
	* XQueryASTCompiler.cs : When function is external, it should not try
	  to compile body, and tries to handle it as a native CLI method (I
	  don't like this name resolution design very much, so it is likely
	  to be redesigned).
	* XQueryCliFunction.cs : trivial code comment fix.
	* XQueryFunction : added user-specified function call support.
	  When CLI function returned null, don't wrap null and just return
	  XQueryEmptySequence.
	* XQueryFunctionCliImpl.cs : fn:nilled() requires certain node.
	  Implemented numeric functions (in the future they might be
	  rewritten to avoid boxing).
	* XQueryTokenizer.cs : Skip XQuery comment inside default state.
	  PI and XML comment are not read correctly.

2004-08-25  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs :
	  Check write state before writing document node.
	  Check if navigator's SchemaInfo is null or not before atomizing.
	  Use individual axis-based iterator in AxisStepExpr.Evaluate().
	* XPathSequence.cs : added individual axis-based iterator.
	  Removed commented NodeKindTestIterator.
	* XQueryCliFunction.cs, XQueryContext.cs, XQueryFunction.cs :
	  Now XQueryContext.CurrentItem explicitly throws exception if
	  no context node was provided (also XQueryCommand.Execute() is
	  fixed not to provide empty document as input).
	  Now XQueryFunction should not access to CurrentItem unless it is
	  required.
	* XQueryFunctionCliImpl.cs : fixed more method signatures.

2004-08-25  Atsushi Enomoto <atsushi@ximian.com>

	* removed IXmlCompilerInclude.cs (does not exist anymore).

2004-08-25  Atsushi Enomoto <atsushi@ximian.com>

	* SequenceType.cs : moved type inference method to XPathAtomicValue.
	  Use IsArray in runtime type inference. Initialize fields completely.
	  Handle collection to runtime type for functions that takes array.
	* XPath2Expression.cs : Add whitespaces on serializing XPath items.
	  EBV != atomized boolean value. Add Atomize() for XPathItem (Atomize()
	  for XPathSequence should be removed in the future).
	  Replaced some ExprSequence to ExprSingle for optimization.
	* XQueryFunctionCliImpl.cs : Fixed some return types.
	* XQueryTokenizer.cs : Fixed weird ReadDecimal().

2004-08-24  Atsushi Enomoto <atsushi@ximian.com>

	* SequenceType.cs : added ToRuntimeType().
	* XPath2Expression.cs : override is required.
	* XPathSequence.cs : fixed ExprSequenceIterator.MoveNext() that caused
	  infinite loop.
	* XQueryCompileContext.cs : CultureInfo was missing.
	* XQueryContext.cs : CurrentContext must be created after setting
	  currentSequence.
	* XQueryConvert.cs : DateTimeToString() was missing.
	* XQueryFunction.cs : convert parameters to runtime type before 
	  being used in Invoke(). Use function's ReturnType to create typed
	  atomic.
	* XQueryParser.jay : create XQueryFunctionArgumentList instance
	  for function calls that does not have parameters.

2004-08-23  Atsushi Enomoto <atsushi@ximian.com>

	* SequenceType.cs, XPath2Expression.cs, XQueryASTCompiler.cs,
	  XQueryCliFunction.cs, XQueryCompileOptions.cs, XQueryContext.cs,
	  XQueryConvert.cs, XQueryExpression.cs, XQueryFunction,cs,
	  XQueryFunctionCliImpl.cs, XQueryFunctionTable.cs,
	  XQueryModuleProlog.cs, XQueryParser.jay, XQueryStaticContext.cs,
	  XQueryTokenizer.cs :
	  Eliminate MS.Internal.Xml.* classes. More null check everywhere and
	  make Compile() pass though as a dummy. Unified FunctionParam into
	  XQueryFunctionArgument. More kind error message. Several fixes.

2004-08-20  Atsushi Enomoto <atsushi@ximian.com>

	* XQueryExpression.cs : Content for XmlTextConstructor might be null,
	  and use literal text for constructor argument if supplied.
	* XQueryParser.jay, XQueryTokenizer.cs : Element content literal
	  string was not parsed and kept correctly. Parse CDATA section.

2004-08-20  Atsushi Enomoto <atsushi@ximian.com>

	* XPath2Expression.cs, XQueryConvert.cs, XQueryExpression.cs,
	  XQueryModuleProlog.cs, XQueryParser.jay, XQueryTokenizer.cs :
	  several changes for XQueryCommand.Execute() implementation.

2004-08-20  Atsushi Enomoto <atsushi@ximian.com>

	* XQueryContext.cs, XQueryStaticContext.cs, SequenceType.cs,
	  XPathSequence.cs, XQueryFunction.cs, XQueryFunctionTable.cs,
	  XQueryCliFunction.cs, XQueryCompileContext.cs, XQueryASTCompiler.cs,
	  XQueryCommandImpl.cs, XQueryFunctionCliImpl :
	  new files for XQuery implementation.

2004-07-28  Atsushi Enomoto <atsushi@ximian.com>

	* XmlQueryCompileException.cs : removed extra GetObjectData().
	* XsltCommand.cs : fixed signatures of Compile() and Execute() methods.

2004-07-27  Atsushi Enomoto <atsushi@ximian.com>

	* XQueryParser.jay,
	  XPath2Expression.cs,
	  XQueryModuleProlog.cs,
	  XQueryTokenizer.cs :
	  Removed SchemaContext. StepExpr and XPathAxis redesign.
	  (Partially) updated Prolog to match with XQuery 7/23/2004 spec.
	  XML comment/PI/CDATA recognition in tokenizer.

2004-07-26  Atsushi Enomoto <atsushi@ximian.com>

	* skelton-2.0.cs,
	  XQueryParser.jay,
	  XQueryTokenizer.cs,
	  XQueryModuleProlog.cs,
	  XPath2Expression.cs,
	  XQueryExpression.cs : added.

2004-07-23  Atsushi Enomoto <atsushi@ximian.com>

	* XmlQueryCompileException.cs, XmlQueryException.cs :
	  added internal constructor that supplies error location.
	  Removed Message property.

2004-07-20  Atsushi Enomoto <atsushi@ximian.com>

	* XsltCommand.cs, XmlArgumentList.cs : sealed. Added missing MonoTODO.
	* XQueryConvert.cs : added. (namespace is temporarily MS.Internal.Xml)

2004-05-22  Atsushi Enomoto <atsushi@ximian.com>

	* IXmlCompilerInclude.cs,
	  QueryEventArgs.cs,
	  QuertEventHandler.cs,
	  XmlArgumentList.cs,
	  XsltCommand.cs : added.

	* XmlQueryArgumentList.cs,
	  XsltProcessor.cs : removed (only in .NET 1.2).

	* XmlCommand.cs,
	  XmlQueryCompileException.cs,
	  XmlQueryException.cs : updated API to that of .NET 2.0.

2003-12-14  Tim Coleman <tim@timcoleman.com>
	* ChangeLog XmlCommand.cs XmlQueryArgumentList.cs
	* XmlQueryCompileException.cs XmlQueryException.cs XsltProcessor.cs:
		Move classes from the System.Data.SqlXml assembly where they
		did not belong.
