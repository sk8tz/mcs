<!-- updated according to final specs -->
<md-schema version="1.0">

<!-- see tables in 23.2.6 -->
<coded-tokens>

	<!-- NOTE: specs use token-type spelling (map/table/@token-type) rather than table id -->

	<map name="TypeDefOrRef" bits="2">
		<table name="TypeDef" tag="0"/>
		<table name="TypeRef" tag="1"/>
		<table name="TypeSpec" tag="2"/>
	</map>

	<map name="HasConstant" bits="2">
		<table name="Field" tag="0" token-type="FieldDef"/>
		<table name="Param" tag="1" token-type="ParamDef"/>
		<table name="Property" tag="2"/>
	</map>

	<map name="HasCustomAttribute" bits="5"><!-- specs: HasCustomattribute -->
		<table name="Method" tag="0" token-type="MethodDef"/>
		<table name="Field" tag="1" token-type="FieldDef"/>
		<table name="TypeRef" tag="2"/>
		<table name="TypeDef" tag="3"/>
		<table name="Param" tag="4" token-type="ParamDef"/>
		<table name="InterfaceImpl" tag="5"/>
		<table name="MemberRef" tag="6"/>
		<table name="Module" tag="7"/>
		<table name="DeclSecurity" tag="8" token-type="Permission"/>
		<table name="Property" tag="9"/>
		<table name="Event" tag="10"/>
		<table name="StandAloneSig" tag="11" token-type="Signature"/>
		<table name="ModuleRef" tag="12"/>
		<table name="TypeSpec" tag="13"/>
		<table name="Assembly" tag="14"/>
		<table name="AssemblyRef" tag="15"/>
		<table name="File" tag="16"/>
		<table name="ExportedType" tag="17"/>
		<table name="ManifestResource" tag="18"/>
	</map>

	<map name="HasFieldMarshal" bits="1"><!-- specs: HasFieldMarshall -->
		<table name="Field" tag="0" token-type="FieldDef"/>
		<table name="Param" tag="1" token-type="ParamDef"/>
	</map>

	<map name="HasDeclSecurity" bits="2">
		<table name="TypeDef" tag="0"/>
		<table name="Method" tag="1" token-type="MethodDef"/>
		<table name="Assembly" tag="2"/>
	</map>

	<map name="MemberRefParent" bits="3">
		<table name="TypeDef" tag="0"/><!-- specs: Not used -->
		<table name="TypeRef" tag="1"/>
		<table name="ModuleRef" tag="2"/>
		<table name="Method" tag="3" token-type="MethodDef"/>
		<table name="TypeSpec" tag="4"/>
	</map>

	<map name="HasSemantics" bits="1">
		<table name="Event" tag="0"/>
		<table name="Property" tag="1"/>
	</map>

	<map name="MethodDefOrRef" bits="1">
		<table name="Method" tag="0" token-type="MethodDef"/>
		<table name="MemberRef" tag="1"/>
	</map>

	<map name="MemberForwarded" bits="1">
		<table name="Field" tag="0" token-type="FieldDef"/>
		<table name="Method" tag="1" token-type="MethodDef"/>
	</map>

	<map name="Implementation" bits="2">
		<table name="File" tag="0"/>
		<table name="AssemblyRef" tag="1"/>
		<table name="ExportedType" tag="2"/><!-- specs: tag value absent -->
	</map>

	<map name="CustomAttributeType" bits="3">
		<table name="TypeRef" tag="0"/><!-- specs: not used -->
		<table name="TypeDef" tag="1"/><!-- specs: not used -->
		<table name="Method" tag="2" token-type="MethodDef"/>
		<table name="MemberRef" tag="3"/>
		<table name="String" tag="4"/><!-- specs: not used -->
	</map>

	<!-- LAMESPEC: 2 bits per tag, specs claims 3 -->
	<map name="ResolutionScope" bits="2">
		<table name="Module" tag="0"/>
		<table name="ModuleRef" tag="1"/>
		<table name="AssemblyRef" tag="2"/><!-- LAMESPEC: tag=3 -->
		<table name="TypeRef" tag="3"/><!-- LAMESPEC: tag=4 -->
	</map>

</coded-tokens>


<!-- 22.1.15 Element Types used in Signatures -->
<element-types>
	<type name="End" value="0x00" remarks="Marks end of a list."/>
	<type name="Void" value="0x01"/>
	<type name="Boolean" value="0x02"/>
	<type name="Char" value="0x03"/>
	<type name="I1" value="0x04"/>
	<type name="U1" value="0x05"/>
	<type name="I2" value="0x06"/>
	<type name="U2" value="0x07"/>
	<type name="I4" value="0x08"/>
	<type name="U4" value="0x09"/>
	<type name="I8" value="0x0a"/>
	<type name="U8" value="0x0b"/>
	<type name="R4" value="0x0c"/>
	<type name="R8" value="0x0d"/>
	<type name="String" value="0x0e"/>
	<type name="Ptr" value="0x0f" remarks="Followed by &lt;type&gt; token."/>
	<type name="ByRef" value="0x10" remarks="Followed by &lt;type&gt; token."/>
	<type name="ValueType" value="0x11" remarks="Followed by &lt;type&gt; token."/>
	<type name="Class" value="0x12" remarks="Followed by &lt;type&gt; token."/>
	<type name="Array" value="0x14"/>
	<type name="TypedByRef" value="0x16"/>
	<type name="I" value="0x18" remarks="System.IntPtr"/>
	<type name="U" value="0x19" remarks="System.UIntPtr"/>
	<type name="FnPtr" value="0x1b" remarks="Followed by full method signature."/>
	<type name="Object" value="0x1c" remarks="System.Object"/>
	<type name="SzArray" value="0x1d" remarks="Single-dim array with 0 lower bound."/>
	<type name="CModReqd" value="0x1f" remarks="Required modifier : followed by a TypeDef or TypeRef token."/>
	<type name="CModOpt" value="0x20" remarks="Optional modifier : followed by a TypeDef or TypeRef token."/>
	<type name="Internal" value="0x21" remarks="Implemented within the CLR."/>

	<type name="Modifier" value="0x40" remarks="Or'd with following element types."/>
	<type name="Sentinel" value="0x41" remarks="Sentinel for varargs method signature."/>
	<type name="Pinned" value="0x45" remarks="Denotes a local variable that points at a pinned object."/>
</element-types>




<!--
 Metadata tables.
-->

<tables>

	<!-- -->
	<table name="Module" id="0x00" section="21.27">
		<schema>
			<field name="Generation" type="ushort"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="Mvid" type="index(#GUID)"/>
			<field name="EncId" type="index(#GUID)"/>
			<field name="EncBaseId" type="index(#GUID)"/>
		</schema>
	</table>


	<!-- -->
	<table name="TypeRef" id="0x01" section="21.35">
		<schema>
			<field name="ResolutionScope" type="coded-index(ResolutionScope)"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="Namespace" type="index(#Strings)"/>
		</schema>
	</table>


	<!-- -->
	<table name="TypeDef" id="0x02" section="21.34">
		<schema>
			<field name="Flags" type="uint" cli-type="System.Reflection.TypeAttributes"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="Namespace" type="index(#Strings)"/>
			<field name="Extends" type="coded-index(TypeDefOrRef)"/>
			<field name="FieldList" type="index(Field)"/>
			<field name="MethodList" type="index(Method)"/>
		</schema>
	</table>


	<!-- -->
	<table name="FieldPtr" id="0x03" temporary="yes">
		<schema>
			<field name="Field" type="index(Field)"/>
		</schema>
	</table>


	<!-- -->
	<table name="Field" id="0x04" section="21.15">
		<schema>
			<field name="Flags" type="ushort" cli-type="System.Reflection.FieldAttributes"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="Signature" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="MethodPtr" id="0x05" temporary="yes">
		<schema>
			<field name="Method" type="index(Method)"/>
		</schema>
	</table>


	<!-- -->
	<table name="Method" id="0x06" section="21.24">
		<schema>
			<field name="RVA" type="RVA" remarks="RVA of the COR_ILMETHOD structure for the body of the method."/>
			<field name="ImplFlags" type="ushort" cli-type="System.Reflection.MethodImplAttributes"/>
			<field name="Flags" type="ushort" cli-type="System.Reflection.MethodAttributes"/><!-- ??? MethodAttribute -->
			<field name="Name" type="index(#Strings)"/>
			<field name="Signature" type="index(#Blob)"/>
			<field name="ParamList" type="index(Param)"/>
		</schema>
	</table>


	<!-- -->
	<table name="ParamPtr" id="0x07" temporary="yes">
		<schema>
			<field name="Param" type="index(Param)"/>
		</schema>
	</table>


	<!-- -->
	<table name="Param" id="0x08" section="21.30">
		<schema>
			<field name="Flags" type="ushort" cli-type="System.Reflection.ParameterAttributes"/><!-- specs: ParamAttributes -->
			<field name="Sequence" type="ushort"/>
			<field name="Name" type="index(#Strings)"/>
		</schema>
	</table>


	<!-- -->
	<table name="InterfaceImpl" id="0x09" section="21.21">
		<schema>
			<field name="Class" type="index(TypeDef)"/>
			<field name="Interface" type="coded-index(TypeDefOrRef)"/>
		</schema>
	</table>



	<!-- -->
	<table name="MemberRef" id="0x0a" section="21.23">
		<schema>
			<field name="Class" type="coded-index(MemberRefParent)"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="Signature" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="Constant" id="0x0b" section="21.9">
		<schema>
			<field name="Type" type="short" cli-type="ElementType" remarks="1 byte ElementType constant, followed by a 1-byte padding zero."/>
			<field name="Parent" type="coded-index(HasConstant)"/>
			<field name="Value" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="CustomAttribute" id="0x0c" section="21.10">
		<schema>
			<field name="Parent" type="coded-index(HasCustomAttribute)"/>
			<field name="Type" type="coded-index(CustomAttributeType)"/>
			<field name="Value" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="FieldMarshal" id="0x0d" section="21.17">
		<schema>
			<field name="Parent" type="coded-index(HasFieldMarshal)"/>
			<field name="NativeType" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="DeclSecurity" id="0x0e" section="21.11">
		<schema>
			<field name="Action" type="short"/><!-- TODO: System.Security.SecurityAction -->
			<field name="Parent" type="coded-index(HasDeclSecurity)"/>
			<field name="PermissionSet" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="ClassLayout" id="0x0f" section="21.8">
		<schema>
			<field name="PackingSize" type="short"/><!-- TODO: use enum? -->
			<field name="ClassSize" type="int"/>
			<field name="Parent" type="index(TypeDef)"/>
		</schema>
	</table>


	<!-- -->
	<table name="FieldLayout" id="0x10" section="21.16">
		<schema>
			<field name="Offset" type="int"/>
			<field name="Field" type="index(Field)"/>
		</schema>
	</table>


	<!-- -->
	<table name="StandAloneSig" id="0x11" section="21.33">
		<schema>
			<field name="Signature" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="EventMap" id="0x12" section="21.12">
		<schema>
			<field name="Parent" type="index(TypeDef)"/>
			<field name="EventList" type="index(Event)"/>
		</schema>
	</table>


	<!-- -->
	<table name="EventPtr" id="0x13" temporary="yes">
		<schema>
			<field name="Event" type="index(Event)"/>
		</schema>
	</table>


	<!-- -->
	<table name="Event" id="0x14" section="21.13">
		<schema>
			<field name="EventFlags" type="short" cli-type="System.Reflection.EventAttributes"/><!-- specs: EventAttribute -->
			<field name="Name" type="index(#Strings)"/>
			<field name="EventType" type="coded-index(TypeDefOrRef)"/>
		</schema>
	</table>


	<!-- -->
	<table name="PropertyMap" id="0x15" section="21.32">
		<schema>
			<field name="Parent" type="index(TypeDef)"/>
			<field name="PropertyList" type="index(Property)"/>
		</schema>
	</table>


	<!-- -->
	<table name="PropertyPtr" id="0x16" temporary="yes">
		<schema>
			<field name="Property" type="index(Property)"/>
		</schema>
	</table>


	<!-- -->
	<table name="Property" id="0x17" section="21.30"><!-- NOTE: previous name was "Properties" -->
		<schema>
			<field name="Flags" type="ushort" cli-type="System.Reflection.PropertyAttributes"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="Type" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="MethodSemantics" id="0x18" section="21.26">
		<schema>
			<field name="Semantics" type="ushort" cli-type="MethodSemanticsAttributes"/>
			<field name="Method" type="index(Method)"/>
			<field name="Association" type="coded-index(HasSemantics)"/>
		</schema>
	</table>


	<!-- -->
	<table name="MethodImpl" id="0x19" section="21.25">
		<schema>
			<field name="Class" type="index(TypeDef)"/>
			<field name="MethodBody" type="coded-index(MethodDefOrRef)"/>
			<field name="MethodDeclaration" type="coded-index(MethodDefOrRef)"/>
		</schema>
	</table>


	<!-- -->
	<table name="ModuleRef" id="0x1a" section="21.28">
		<schema>
			<field name="Name" type="index(#Strings)"/>
		</schema>
	</table>


	<!-- -->
	<table name="TypeSpec" id="0x1b" section="21.36">
		<schema>
			<field name="Signature" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="ImplMap" id="0x1c" section="21.20">
		<schema>
			<field name="MappingFlags" type="ushort" cli-type="PInvokeAttributes"/>
			<field name="MemberForwarded" type="coded-index(MemberForwarded)"/>
			<field name="ImportName" type="index(#Strings)"/>
			<field name="ImportScope" type="index(ModuleRef)"/>
		</schema>
	</table>


	<!-- -->
	<table name="FieldRVA" id="0x1d" section="21.18">
		<schema>
			<field name="RVA" type="RVA"/>
			<field name="Field" type="index(Field)"/>
		</schema>
	</table>


	<!-- -->
	<table name="ENCLog" id="0x1e" temporary="yes">
		<schema>
			<field name="Token" type="uint"/>
			<field name="FuncCode" type="uint"/>
		</schema>
	</table>


	<!-- -->
	<table name="ENCMap" id="0x1f" temporary="yes">
		<schema>
			<field name="Token" type="uint"/>
		</schema>
	</table>


	<!-- -->
	<table name="Assembly" id="0x20" section="21.2">
		<schema>
			<field name="HashAlgId" type="int" cli-type="System.Configuration.Assemblies.AssemblyHashAlgorithm"/>
			<field name="MajorVersion" type="short"/>
			<field name="MinorVersion" type="short"/>
			<field name="BuildNumber" type="short"/>
			<field name="RevisionNumber" type="short"/>
			<field name="Flags" type="uint" cli-type="AssemblyFlags"/>
			<field name="PublicKey" type="index(#Blob)"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="Culture" type="index(#Strings)"/>
		</schema>
	</table>


	<!-- -->
	<table name="AssemblyProcessor" id="0x21" section="21.4">
		<schema>
			<field name="Processor" type="int"/>
		</schema>
	</table>


	<!-- -->
	<table name="AssemblyOS" id="0x22" section="21.3">
		<schema>
			<field name="OSPlatformID" type="int"/>
			<field name="OSMajorVersion" type="int"/>
			<field name="OSMinorVersion" type="int"/>
		</schema>
	</table>


	<!-- -->
	<table name="AssemblyRef" id="0x23" section="21.5">
		<schema>
			<field name="MajorVersion" type="short"/>
			<field name="MinorVersion" type="short"/>
			<field name="BuildNumber" type="short"/>
			<field name="RevisionNumber" type="short"/>
			<field name="Flags" type="uint" cli-type="AssemblyFlags"/>
			<field name="PublicKeyOrToken" type="index(#Blob)"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="Culture" type="index(#Strings)"/>
			<field name="HashValue" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="AssemblyRefProcessor" id="0x24" section="21.7">
		<schema>
			<field name="Processor" type="int"/>
			<field name="AssemblyRef" type="index(AssemblyRef)"/>
		</schema>
	</table>


	<!-- -->
	<table name="AssemblyRefOS" id="0x25" section="21.6">
		<schema>
			<field name="OSPlatformID" type="int"/>
			<field name="OSMajorVersion" type="int"/>
			<field name="OSMinorVersion" type="int"/>
			<field name="AssemblyRef" type="index(AssemblyRef)"/>
		</schema>
	</table>


	<!-- -->
	<table name="File" id="0x26" section="21.19">
		<schema>
			<field name="Flags" type="uint" cli-type="System.IO.FileAttributes"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="HashValue" type="index(#Blob)"/>
		</schema>
	</table>


	<!-- -->
	<table name="ExportedType" id="0x27" section="21.14">
		<schema>
			<field name="Flags" type="uint" cli-type="System.Reflection.TypeAttributes"/>
			<field name="TypeDefId" type="index(TypeDef)"/>
			<field name="TypeName" type="index(#Strings)"/>
			<field name="TypeNamespace" type="index(#Strings)"/>
			<field name="Implementation" type="coded-index(Implementation)"/>
		</schema>
	</table>


	<!-- -->
	<table name="ManifestResource" id="0x28" section="21.22">
		<schema>
			<field name="Offset" type="int"/>
			<field name="Flags" type="uint" cli-type="ManifestResourceAttributes"/>
			<field name="Name" type="index(#Strings)"/>
			<field name="Implementation" type="coded-index(Implementation)"/>
		</schema>
	</table>


	<!-- -->
	<table name="NestedClass" id="0x29" section="21.29">
		<schema>
			<field name="NestedClass" type="index(TypeDef)"/>
			<field name="EnclosingClass" type="index(TypeDef)"/>
		</schema>
	</table>


	<!-- -->
	<table name="TypeTyPar" id="0x2a" temporary="yes">
		<schema>
			<field name="Number" type="ushort"/>
			<field name="Class" type="index(TypeDef)"/>
			<field name="Bound" type="coded-index(TypeDefOrRef)"/>
			<field name="Name" type="index(#Strings)"/>
		</schema>
	</table>


	<!-- -->
	<table name="MethodTyPar" id="0x2b" temporary="yes">
		<schema>
			<field name="Number" type="ushort"/>
			<field name="Method" type="index(Method)"/>
			<field name="Bound" type="coded-index(TypeDefOrRef)"/>
			<field name="Name" type="index(#Strings)"/>
		</schema>
	</table>


</tables>

</md-schema>
