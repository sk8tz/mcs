2008-01-07  Andreia Gaita <avidigal@novell.com>

	* build-csproj2k5: Added to generate Mono.Mozilla2K5.csproj from .sources
	* Mono.Mozilla2K5.csproj: updated
	* Makefile: run the build-csproj2k5

2008-01-07  Andreia Gaita <avidigal@novell.com>

	* Mono.Mozilla.dll.sources: Added new classes (see below).

	* Mono.Mozilla/DOM/DOMObject.cs: 
	- Store reference to the IWebBrowser control that created this (and	
	subclassed) object. This reference needs to be used in any gluezilla calls 
	that have to invoke methods on the mozilla ui thread (any Widget method, 
	whose ptr reference	is stored in Base and indexed by IWebBrowser control).
	
	- Tweak the Dispose pattern: subclasses don't have their own private
	dispose field to keep track of whether they've been disposed already, this
	base class takes care of that.
	
	* Mono.Mozilla/DOM/DOMNode.cs:
	- Initialize a proxy to the nsI object that this wrapper encapsulates.
	- Cache all objects returned from this object in an hashtable, so that 
		1) we can keep track of all objects and release them earlier and 
		properly
		2) we don't have to keep creating new objects everytime we get requests 
		for read-only stuff 
	- Implement FirstChild and LocalName
	- Add Dispose pattern

	* Mono.Mozilla/DOM/DOMHTMLElement.cs: 
	- Change the inheritance to DOMElement.
	- Change the constructor to send the nsI object and IWebBrowser up the tree.
	- Get a proxy to the nsI object.
	- Add dispose pattern.
	
	* Mono.Mozilla/DOM/DOMHTMLDocument.cs: 
	- Change the constructor to send the IWebBrowser instance up the tree.
	- Add resources hashtable to keep track of already-fetched objects. 
	Particularly useful here since getElementById can be called n times, so it
	would be complicated to keep track and dispose properly of all the objects.
	- Implement DocumentElement
	- Change Body and GetElementById to use resources cache
	- Fix GetElementById case

	* Mono.Mozilla/DOM/DOMElement.cs: Added. Inherits from DOMNode, so the 
	parent class also keeps track of the nsI object.
	* Mono.Mozilla/DOM/DOMNodeList.cs: Added to support easy iteration of nodes.
	* Mono.Mozilla/DOM/Navigation.cs: Tweak dispose pattern and constructor to
	the new model.

	* Mono.Mozilla/WebBrowser.cs: Fix the DOMHTMLDocument creation. 
	
	* Mono.WebBrowser/DOM/IDOMHTMLDocument.cs: Fix case on GetElementById, add
	DocumentElement property.

	* Mono.WebBrowser/DOM/IDOMNodeList.cs, 
	  Mono.WebBrowser/DOM/IDOMElement.cs:
	Added, no external functionality for now.
	
2008-01-07  Andreia Gaita <avidigal@novell.com>

	* Mono.Mozilla/DOM/Navigation.cs: Fix calls to the nsIWebNavigation
	interface (case change from being generated through xpidl2cs. that's what
	I get for merging in batches :/ )

2008-01-07  Andreia Gaita <avidigal@novell.com>

	* Mono.Mozilla/Base.cs: Add GetProxyForObject method to create proxies
	for mozilla objects.
	Remove trace listener.

2008-01-07  Andreia Gaita <avidigal@novell.com>

	* Mono.Mozilla/interfaces/nsIDOMRange.cs,
	  Mono.Mozilla/interfaces/nsIDOMDocumentRange.cs:
	Added to get the content of elements. 

	* Mono.Mozilla/interfaces/*.cs: Regenerated with the xpidl2cs.pl script.
	Add helper class to create a proxy for all native mozilla interfaces. 

	* Mono.Mozilla/interfaces/extras/: classes for the mozilla interfaces that 
	don't get generated automatically, like enums, delegates, etc.

	* Mono.Mozilla/interfaces/extras/nsIWriteSegmentFun.cs: 
	Delegate callback for a writer function for mozilla	streams 
	(nsIInputStream.readSegments)
	
	* Mono.Mozilla/interfaces/extras/Options.cs: Enum for nsIWebNavigation.stop

2007-12-25  Andreia Gaita  <avidigal@novell.com>

	* Mono.Mozilla/DOM/DOMHTMLDocument.cs,
	  Mono.Mozilla/DOM/DOMObject.cs
	  Mono.Mozilla/DOM/Navigation.cs:
	  
	Properly dispose unmanaged resources.
	Use native mozilla dom interfaces through com directly instead
	of going through the glue, as they are now proxies that invoke
	the methods on the main mozilla ui properly (avoiding threading problems).
	Check if library was properly initialized.
	Add Go method - implements navigation
	directly through COM instead of going through the glue.
	
	* Mono.Mozilla/interfaces/nsIWebNavigation.cs: Use typed flags instead of
	generic uint32. Remove comments about threading (as it is now safe to use
	this interface)

	* Mono.Mozilla/Base.cs: Return bool on initialization so I can track if
	library was properly initialized from the interfaces that go directly 
	through COM and not through the glue

	* Mono.Mozilla/WebBrowser.cs: Save initialization result so interfaces
	don't get called if the library was not initialized.

2007-11-08  Andreia Gaita  <avidigal@novell.com>

	* Mono.Mozilla.csproj, Mono.Mozilla2K5.csproj: Synch with .sources

2007-11-08  Andreia Gaita  <avidigal@novell.com>

	* Mono.Mozilla.dll.sources,
	  Mono.Mozilla/DOM/Navigation.cs,
	  Mono.Mozilla/interfaces/nsIHistoryEntry.cs,
	  Mono.Mozilla/interfaces/nsIInputStream.cs,
	  Mono.Mozilla/interfaces/nsISHistory.cs,
	  Mono.Mozilla/interfaces/nsISHistoryListener.cs,
	  Mono.Mozilla/interfaces/nsISimpleEnumerator.cs,
	  Mono.Mozilla/interfaces/nsIURI.cs,
	  Mono.Mozilla/interfaces/nsIWebNavigation.cs,
	  Mono.WebBrowser/DOM/INavigation.cs:

	Add nsIWebNavigation interface and related 
	dependencies to access navigation-related properties directly (CanGoBack, etc). 
	Add INavigation interface and implementation to expose navigation properties. 
	Navigation is now done through this interface (Reload(), Stop(), etc).
	
	Please note: Due to threading issues on linux (namely, mozilla being run 
	on a different thread), only methods that do not affect drawing can be 
	invoked through the interfaces, so although Reload is now called from 
	the INavigation interface, it is still being routed through the Base 
	class and the glue code (and not through the nsIWebNavigation.Reload 
	call, as are other non-drawing-affecting methods like GetTitle).

	* Mono.Mozilla/ICallback.cs, Callback.cs: Remove unneeded events, adjust parameters, 
	add support enumeration for tracking loading state.

	* Mono.Mozilla/DOM/DOMHTMLDocument.cs, Mono.WebBrowser/DOM/IDOMHTMLDocument.cs: 
	Add URL getter.

	* Mono.WebBrowser/IWebBrowser.cs, Mono.Mozilla/WebBrowser.cs: 
	Add Navigation interface getter.
	Add Navigated event support through the StateChange and LocationChange
	events.
	Clean up cached objects when navigating.
	Remove Reload, Forward, Stop, Home methods, these are now accessible 
	through the INavigation interface.

	* Mono.Mozilla/Base.cs: Add call to return the navigation interface. 
	Add MarshalAs so that returning interfaces directly works on mono.

2007-10-31  Andreia Gaita  <avidigal@novell.com>

	* Base.cs: Send (and create if needed) user dir to store local mozilla data

2007-10-30  Andreia Gaita  <avidigal@novell.com>

	* Base.cs: use the blur method to signal when the webbrowser loses
	focus
	
2007-10-18 Andreia Gaita <avidigal@novell.com>

	* use the newly-renamed gluezilla library

2007-10-07 Andreia Gaita <avidigal@novell.com>

	* More dialog event options.
	* Mono.Mozilla/interfaces/nsIDOM*: Added mozilla dom interfaces.
	* Mono.WebBrowser/DOM/IDOM*: Added generic interfaces for public 
	  dom access.
	* Mono.Mozilla/DOM/DOM*: corresponding implementations for 
	  accessing mozilla.
	* WebBrowser.cs: moved to Mono.Mozilla, since it is a 
	  mozilla-specific implementation of the generic public
	  interface.

2007-09-23 Andreia Gaita <avidigal@novell.com>

	* Added implementation of dialog popups - alert,
	alertcheck, confirm, confirmcheck, confirmex, prompt, 
	promptusernameandpassword, promptpassword, select.
	Cleaned up some.

2007-09-19 Andreia Gaita <avidigal@novell.com>

	* Forgot to commit an update on the xulbrowser check :/

2007-09-13 Andreia Gaita <avidigal@novell.com>

	* add check for xulbrowser library, if it's not 
	present complain then leave (don't blow up)
	* change blur method to call deactivate (mozilla seems
	to need it to know when it loses focus)
	* add FocusOption enumeration for finer focus control

2007-09-12 Andreia Gaita <avidigal@novell.com>

	* Base.cs, IWebBrowser.cs, WebBrowser.cs: setup shutdown routine

2007-08-11 Andreia Gaita <avidigal@novell.com>

	* AssemblyInfo.cs: fix version and attributes

2007-08-10 Andreia Gaita <avidigal@novell.com>

	* Reorganize sources by namespace, fix csproj

2007-08-10 Andreia Gaita <avidigal@novell.com>

	* Move to main tree

2007-08-10 Andreia Gaita <avidigal@novell.com>

	* Add file headers. Take out generic collections, because
	we'll need to use this on 1.1 as well.

2007-08-09 Andreia Gaita <avidigal@novell.com>

	* Change external generic interfaces to Mono.WebBrowser
	namespace, while mozilla-specific stuff is Mono.Mozilla.
	Encapsulate code even further with a Manager, so that
	callers can only use what's available in the IWebBrowser
	interface by asking for a new instance from the Manager.
	Everything not in the IWebBrowser interface is private.
	Navigation control, new window creation events.

2007-07-30 Andreia Gaita <avidigal@novell.com>

	* Add focus and activation management
	  Add new ICallback interface to encapsulate callbacks
	  from xulbrowser. IWebBrowser has all calls and events
	  accessible from MWF.
	  Implement mouse, focus and key handlers

2007-07-21 Andreia Gaita <avidigal@novell.com>

	* MozilaInvoke is now called Base, and encapsulates all the
	pinvokes plus a list of web controls that have been loaded
	indexed the control, with binding info (callback object and
	IntPtr to the native xulbrowser instance.
	WebBrowser.cs implements IWebBrowser and is the entry point
	to the library - the WebControl api keeps a reference and 
	calls only this.
	Add vstudio 2005 project for 2.0 api

2007-06-25 Andreia Gaita <avidigal@novell.com>

	* Callback.cs, IWebBrowser.cs, WebBrowser.cs: 
	Change OnWidgetLoaded callback to send the new 	
	handle when it's called.
	
2007-06-18	Andreia Gaita	<avidigal@novell.com>

	* initial checkin.