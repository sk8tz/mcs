2001-08-08 Nick Drochak <ndrochak@gol.com>

         * ReadOnlyCollectionBase.cs: Initialized private member.
         * CollectionBase.cs: Initialized private member.
	 * common.src : Added ReadOnlyCollectionBase.cs and CollectionBase.cs
	 * /mcs/class/makefile: Used $(SYSTEMROOT) instead of hard coded //c/winnt
	 * /mcs/makefile: Used $(SYSTEMROOT) instead of hard coded //c/winnt

2001-08-08 Nick Drochak <nick@jobdragon.com>

         * CollectionBase.cs: Add
         * ReadOnlyCollectionBase.cs: Add
         * CollectionBaseTest.cs: Add
         * ReadOnlyCollectionBaseTest.cs: Add

2001-07-31 Garrett Rooney <rooneg@electricjellyfish.net>

	* StackTest.cs: Add Test case for System.Collections.Stack.  
	Contributed by Chris Hynes <chrish@assistedsolutions.com>

2001-07-30 Garrett Rooney <rooneg@electricjellyfish.net>

	* Stack.cs: Clone() doesn't need to check if it's synchronized, since 
	we override it in SyncStack anyway...  

	* Stack.cs: Pop() now shrinks the array if we drop below 1/4 full, to 
	avoid using massive amounts of memory that are not necessary.  We only 
	drop to half the current size, which I hope will avoid the 'ping-pong' 
	effect.

	* Stack.cs: SyncStack.IsReadOnly should return stack.IsReadOnly 
	instead of just returning false, since we may have a ReadOnly wrapper 
	in the future (although i can't imagine why).  Thanks to David 
	Menestrina <dmenest@yahoo.com> for pointing this out.

2001-07-23  Sergey Chaban <serge@wildwestsoftware.com>

	*  Hashtable.cs: Fixed bug in Clear(), the Count wasn't zeroed.
           From now, Clear() increases modification count.
           Fixed HCP bug in GetHash(object) - hcp.GetHashCode() was used
           instead of hcp.GetHashCode(key). This was resulted in the
           insanely long lookup times when HashCodeProvider was used to
           construct Hashtable. Added thread-safe wrapper.

2001-07-16  David Menestrina <dmenest@yahoo.com>

         * BitArray.cs: Add
         * BitArrayTest.cs: Add

2001-07-18  Miguel de Icaza  <miguel@ximian.com>

	* IDictionary.cs (Collections): IDictionary implements ICollection
	as well.  Thanks Sergey!

2001-07-18  Garrett Rooney  <rooneg@electricjellyfish.net>

	* Stack.cs Removed unnecessary locking from many methods of 
	SyncStack, removed SyncEnumerator because it was unnecessary, 
	added a modCount member to Stack and Stack.Enumerator, to 
	ensure that the Stack has not been modified out form under the 
	Enumerator, and changed the Enumerator to use a reference to the 
	stack rather than copying over the contents array.

2001-07-17  David Menestrina  <dmenest@yahoo.com>

        * Added implementation of BitArray.

2001-07-17  Miguel de Icaza  <miguel@ximian.com>

	* Hashtable.cs: Removed call to d.Count in the Hashtable
	constructor that takes an IDictionary as IDictionary does not
	provide a Count field.

2001-07-15  Sean MacIsaac  <macisaac@ximian.com>

	* IDictionary.cs: Clear was clear.

2001-07-13  Miguel de Icaza  <miguel@ximian.com>

	* All files: Renamespace things to System.

2001-07-05  Vladimir Vukicevic  <vladimir@ximian.com>

	* ArrayList.cs: initial checkin and implementation

	* ICollection.cs, IComprarer.cs, IDictionary.cs,
	  IDictionaryEnumerator.cs, IEnumerable.cs, IHashCodeProvider.cs,
	  IList.cs: initial checkin

