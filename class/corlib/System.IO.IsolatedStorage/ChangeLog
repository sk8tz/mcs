2004-06-13  Gert Driesen <drieseng@users.sourceforge.net>

	* IsolatedStorage.cs: really mark the storage_scope field private

2004-06-09  Gert Dresen <drieseng@users.sourceforge.net>

	* IsolatedStorage.cs: use private variable for holding scope,
	set scope in InitStore method, removed need for extra protected 
	member (public API fix)
	* IsolatedStorageFile.cs: use InitStore to initialize scope

2004-05-12  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorage.cs: More details on MonoTODO. Throw exceptions on
	AssemblyIdentity and DomainIdentity properties.
	* IsolatedStorageFile.cs: More details on MonoTODO.
	* IsolatedStorageFileStream.cs: Removed MonoTODO on class. Now use 
	Path.Combine to build filenames (constructor) and throw an exception 
	when we try to get the handle (as documented).

2003-07-30  Duncan Mak  <duncan@ximian.com>

	* IsolatedStorageInfo.cs (CreateAssemblyFilename):
	(CreateDomainFilename): Replace String.Format with Path.Combine.
	
	* IsolatedStorageFile.cs:
	(GetStore): Update storage_scope accordingly.
	(GetUseStoreForAssembly): Include IsolatedStorageScope.User.
	(GetUseStoreForDomain): Include IsolatedStorageScope.User and
	IsolatedStorageScope.Assembly.
	
	* IsolatedStorage.cs:
	(CurrentSize):
	(MaximumSize): throw InvalidOperationExceptions. This is a
	subclass responsibility.
	(Scope): Implemented using a static field, storage_scope.
	(SeparatorInternal)
	(SeparatorExternal): Implemented. Use Path.DirectorySeparatorChar
	for SeparatorExternal.

2003-02-18  Jonathan Pryor <jonpryor@vt.edu>
	* IsolatedStorageFile.cs: Fix spelling error (GetUseStoreForDomain -->
	  GetUserStoreFor Domain).  Reported by 
	  Torsten Rendelmann <torsten.rendelmann@procos.com>.

2003-01-19  Sebastien Pouliot  <spouliot@videotron.ca>

	* IsolatedStorageFile.cs: Added missing [CLSCompliant(false)]
	to CurrentSize and MaximumSize to fix compilation (at least 
	under Windows/csc).

2003-01-18  Jonathan Pryor <jonpryor@vt.edu>

	- General: Get a simple implementation working.  Simple, not-all-there, but
	  sufficient to get "Programming C#" example 21-17 working under Mono.  This
	  doesn't say much, as it's not a stress-test by any means.
	* INormalizeForIsolatedStorage.cs: re-indent to fit mono code style
	* IsolatedStorage.cs: match mono coding guidelines
	* IsolatedStorageFileStream.cs: Add members that "C# In A Nutshell" claims
	  the class should override.  Most of these members just delegate to the
	  base class, though.  CreateIsolatedPath is used to get the actual filename
	  for the IsolatedStorageFileStream.
	* IsolatedStorageScope.cs: Documentation goes in monodoc, so there's no
	  point in having C# doc-tags.  Add "Roaming" member, which "C# In A
	  Nutshell" lists.
	* IsolatedStorageFile.cs: Public class documented in "C# In A Nutshell".
	  Simple implementation.  Will probably need work to conform with .NET,
	  address security concerns.
	* IsolatedStorageInfo.cs: Abstract IsolatedStorage information used by other
	  classes, such as the directory isolated storage is located under, how to
	  calculate the size of isolated storage, etc.

2002-02-19  Duncan Mak  <duncan@ximian.com>

	* IsolatedStorageFileStream.cs: Added MonoTODO here. This class
	is completely stubbed out (over the summer) and didn't get
	properly MonoTODO'd.

2002-02-08  Duncan Mak  <duncan@ximian.com>

	* IsolatedStorage.cs: Looked at MemberInfo.cs, another fellow
	abstract class. Oh, that's what it means! Removed unnesscessary
	MonoTODO attributes.

2002-02-07  Duncan Mak  <duncan@ximian.com>

	* IsolatedStorage.cs: Added to CVS, stubbed out the API.
	* IsolatedStorageException.cs: Implemented.

2002-01-07  Duco Fijma <duco@lorentz.xs4all.nl>
	* Created INormalizeForIsolatedStorage
