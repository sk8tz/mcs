2002-03-28  Dan Lewis  <dihlewis@yahoo.co.uk>

	* Directory.cs: Throws DirectoryNotFoundException.
	* MonoIO.cs: Fixed to work around enum problem.

2002-03-27  Dan Lewis  <dihlewis@yahoo.co.uk>

	* StreamReader.cs: Implemented ReadLine() and ReadEnd().

2002-03-27  Dan Lewis  <dihlewis@yahoo.co.uk>

	* Directory.cs, File.cs, FileSystemInfo.cs, FileInfo.cs,
	DirectoryInfo.cs, Path.cs: Modified to use MonoIO class instead of
	wrapper and PAL classes.

	* MonoIO.cs, MonoIOStat.cs, MonoIOError.cs: Added.

2002-03-25  Mike Kestner <mkestner@speakeasy.net>

	* MemoryStream.cs (Read): Fixed bug in exception throw.

2002-03-24  Mike Kestner <mkestner@speakeasy.net>

	* StreamReader.cs (ReadBuffer): Fix buffer merging bugs.

2002-03-23  Martin Baulig  <martin@gnome.org>

	* StreamReader.cs: Always do buffered reading, use 4k blocks.
	(Read (char[], int, int)): Implemented.
	(DiscardBufferedData): Implemented.

2002-03-21  Mike Kestner <mkestner@speakeasy.net>

	* StreamReader.cs : Fill out, add buffering, and use encoding.

2002-03-19  Martin Baulig  <martin@gnome.org>

	* StreamWriter.cs (StreamWriter (string)): The default is to override
	the file, not to append to it.
	(StreamWriter (string path, bool append)): When appending, seek to the
	end of the file, otherwise truncate the file to zero length.
	(Dispose (bool)): Close the internalStream.
	(Flush): Flush the interalStream.
	(Write (char[], int, int)): Flush the internalStream in auto-flush-mode.

2002-03-19  Dan Lewis <dihlewis@yahoo.co.uk>

	* FileStream.cs: Flush buffer before FileSetLength.

2002-02-28  Miguel de Icaza  <miguel@ximian.com>

	* Stream.cs (NullStream): Do not track position, this beast does
	nothing in practice.

2002-03-15  Dan Lewis <dihlewis@yahoo.co.uk>

	* SearchPattern.cs: New class. Glob matching code for Directory.
	* Directory.cs: Changed to use SearchPattern instead of mono_glob_*()

2002/03/15 Nick Drochak <ndrochak@gol.com>

	* DirectoryInfo.cs: Fixed the overloaded GetDirectories and GetFiles.
	This code seemed to be copied from somewhere, and it was close,
	but didn't match the docs.  This was the last bit needed to get
	NAnt to compile with our class libs.

2002-03-12  Duncan Mak  <duncan@ximian.com>

	* EndOfStreamException.cs:
	* FileLoadException.cs:
	* FileNotFoundException.cs:
	* PathTooLongException.cs: Changed the base classes to IOException
	instead of SystemException.

	* IOException.cs: Added missing constructors.
	
2002-03-07  Nick Drochak  <ndrochak@gol.com>

	* FileMode.cs: Docs don't say this should be explicitly derived from
	int, so just make it a normal Enum.

2002-03-02  Jason Diamond  <jason@injektilo.org>

	* StringReader.cs: Fixed off-by-one error in Peek() and Read().

2002-02-12  Nick Drochak  <ndrochak@gol.com>

	* PathTooLongException.cs: put it in the correct namespace
	* EndOfStreamException.cs: put it in the correct namespace

Thu Jan 31 17:32:32 CET 2002 Paolo Molaro <lupus@ximian.com>

	* Directory.cs: handle opendir() return NULL and absolute filenames.

2002-01-31  Duncan Mak  <duncan@ximian.com>

	* FileLoadException.cs:
	* FileNotFoundException: Added missing bits for serialization.

Thu Jan 24 17:42:54 CET 2002 Paolo Molaro <lupus@ximian.com>

	* Directory.cs: allow directories in GetFiles() mask.

2002-01-23  Miguel de Icaza  <miguel@ximian.com>

	* FileInfo.c (CopyTo, MoveTo): Implement.

	* FileStream.cs: Add argument checking to the constructor.

	* File.cs: Rewrote most of the file.  Implement Copy, Open, Create,
	OpenText, OpenWrite, Move.  Made pending methods flagged as MonoTODO. 
	
	* Directory.cs (Delete): reimplement without using DirectoryInfo.
	(Delete): Implement the recursive version.
	(GetCreationTime, GetLastWriteTime, GetLastAccessTime): Implement.
	(Move): Reimplement.
	(getNames): dead code removal.

	* Path.cs: define an internal DirectorySeparatorStr that we use in
	a few spots.

	* Wrapper.cs: Updated to new version.
	
	* DirectoryInfo (Delete): Implement using the Directory API.

	* DirectoryInfo.cs (GetFiles, GetDirectories, GetFileSystemInfos,
	Delete, Create, Parent, Exists, MoveTo): Implement. 

	* Directory.cs (GetListing): implement new utility function.
	(GetDirectories): Implement.
	(GetFileSystemEntries): Implement.
	(GetFiles): Implement.

	* CheckArgument.cs (Path): Do not allow null by default.

Tue Jan 22 22:53:23 CET 2002 Paolo Molaro <lupus@ximian.com>

	* DirectoryInfo.cs, FileInfo.cs: do not use Debug from the system
	assembly in corlib.

2002-01-20 Nick Drochak  <ndrochak@gol.com>

	* SeekOrigin.cs: Added Serializable attribute.

2002-01-19  Duncan Mak  <duncan@ximian.com>

	* PathTooLongException.cs: 
	* EndOfStreamException.cs: Added to CVS.

Thu Jan 10 12:06:46 MST 2002 Matt Kimball <matt@kimball.net>

	* BufferedStream.cs: Initial implemenation.  The synchronous
	methods for both reading and writing are implemented.  I'll do the
	asynchronous methods in a bit.
	
Wed Jan  9 16:04:39 MST 2002 Matt Kimball <matt@kimball.net>

	* BinaryWriter.cs: Initial implementation.  And it's all there.

	* BinaryReader.cs: The constructor now uses the passed in encoding,
	not UTF8 always.

Wed Jan  9 13:54:28 MST 2002 Matt Kimball <matt@kimbal.net>

	* BinaryReader.cs: Initial implementation.  I think it's complete.

2002-01-04  Ravi Pratap  <ravi@ximian.com>

	* CheckArgument.cs, CheckPermission.cs, Directory.cs: MonoTODO
	attribute decorations.

	* DirectoryInfo.cs, File.cs, FileInfo.cs, FileSystemInfo.cs,
	Path.cs, TextReader.cs, TextWriter.cs : Ditto.

	* FileLoadException.cs, FileNotFoundException.cs, StreamReader.cs: 
	Ditto.

2001-12-11  Dick Porter  <dick@ximian.com>

	* FileStream.cs: Use handles rather than casting file descriptors.
	Added Handle property.

Wed Nov 14 16:47:47 CET 2001 Paolo Molaro <lupus@ximian.com>

	* CheckPermission.cs: disable ModeAccess() code: it's wrong.
	* FileStream.cs: only trow an exception if the read failed in ReadByte().
	* StreamReader.cs: implement Peek and Read.
	* TextWriter.cs: CLSCompliant updates.

2001-11-10  Sean MacIsaac  <macisaac@ximian.com>

	* FileNotFoundException.cs: Added some constructors

	* Path.cs (GetFullPath): Fixed implementation

Fri Nov 2 18:27:58 CET 2001 Paolo Molaro <lupus@ximian.com>

	* DirectoryNotFoundException.cs: implemented.

Tue Sep 25 18:54:06 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* File.cs: fix signatures of the Open() and OpenRead() functions
	(they are static).

Thu Sep 13 18:04:23 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* FileLoadException.cs, FileNotFoundException.cs: added.

2001-08-28  Dietmar Maurer  <dietmar@ximian.com>

	* TextReader.cs: implemented the Read method

	* StreamReader.cs: impl. stubs

	* StreamWriter.cs: impl.

	* TextWriter.cs: implemented Write and WriteLine methods

Sun Aug 26 23:01:41 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* FileAccess.cs, FileMode.cs: change values to be compatible with
	the ms ones.
	
Sun Aug 26 11:47:56 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* IOException.cs: Implemented System.IO.Exception.

2001-07-18  Michael Lambert <michaellambert@email.com>

        *SeekOrigin.cs.cs, FileShare.cs, FileMode.cs, FileAccess.cs: Add.

2001-07-19  Marcin Szczepanski <marcins@zipworld.com.au>

	* System.IO.MemoryStream.cs: Added.  Had quite a few cases of
	"LAMESPEC", but the tests work against the MS implementation so
	the major functions are right (ie. Read/Write/Seek).  Some more
	tests required for the various constructors and exceptions.

2001-07-16  Marcin Szczepanski <marcins@zipworld.com.au>

	* StringReader.cs, StringWriter.cs, TextReader.cs, TextWriter.cs:
	New class implemenations.

	* StringReaderTest.cs, StringWriterTest.cs: Test suite for the above.

