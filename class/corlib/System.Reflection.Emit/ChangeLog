
Fri May 10 20:57:27 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* CustomAttributeBuilder.cs: expose internal data for use in
	reflection.
	* FieldBuilder.cs, TypeBuilder.cs: special case FieldOffset and
	StructLayout attributes.

Fri May 10 16:30:57 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* MethodBuilder.cs, ConstructorBuilder.cs: implemented InitLocals
	property.

2002-04-26  Martin Baulig  <martin@gnome.org>

	* ModuleBuilder.cs (DefineDocument): Implemented.

Tue Apr 16 13:02:28 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: pad output file to file alignment.
	* FieldBuilder.cs: ReflectedType.
	* ModuleBuilder.cs: added guid generation and array method creation.
	* MonoArrayMethod.cs: array method support code.
	
Wed Apr 10 12:57:31 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: use a stack to keep track of exception blocks.

Mon Apr  8 06:19:01  2002 Piers Haken <piersh@friskit.com>

	* ILGenerator.cs: added LabelField.label_base to allow for
	arbitrary offsets (for switch statement)

Fri Apr 5 15:41:19 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: simpler protocol wih the runtime to
	get the assembly data.

Tue Mar 26 20:10:24 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: use FileMode.Create.
	* ILGenerator.cs: optimize localbuilder related opcodes.
	Track parameters to adjust maxstack.
	* LocalBuilder.cS: use unsigned for position.

2002-03-23  Miguel de Icaza  <miguel@ximian.com>

	* LocalBuilder.cs: Drop the symbol_writer as LocalBuilder fields.
	Do this lazily in SetLocalSymInfo.
	
2002-03-24  Martin Baulig  <martin@gnome.org>

	* ModuleBuilder.cs (GetSymbolWriter): The MonoSymbolWriter's constructor
	now takes a `string assembly_filename' argument, pass it our fully
	qualified assembly name.

2002-03-24  Nick Drochak  <ndrochak@gol.com>

	* ILGenerator.cs: Use #if-#endif instead of if(false){} to disable
	code.  This way there is no compiler warning.

	* TypeBuilder.cs: Removed the returns that came after the throws.
	This removes a few more compiler warnings. Also marked with MonoTODO
	all places where we throw NotImplemented exceptions.

2002-03-23  Martin Baulig  <martin@gnome.org>

	* SignatureHelper.cs (GetFieldSignatureHelper, GetLocalSignatureHelper):
	Implemented.

	* LocalBuilder.cs (LocalBuilder): This internal constructor now takes
	a ModuleBuilder argument instead of a ISymbolWriter one.
	(SetLocalSymInfo): Create and pass type signature to DefineLocalVariable.

2002-03-23  Martin Baulig  <martin@gnome.org>

	* ILGenerator.cs (BeginScope, EndScope): Implemented.

2002-03-20  Martin Baulig  <martin@gnome.org>

	* ModuleBuilder.cs (GetSymbolWriter): New internal function. Dynamically
	loads the default symbol writer, catch all possible exceptions and return
	null on failure.
	(ModuleBuilder): Added `bool emitSymbolInfo' argument to this internal
	constructor; if set, call GetSymbolWriter ().
	(GetSymWriter): Implemented.

	* LocalBuilder.cs (LocalBuilder): Added ISymbolWriter argument to this
	internal method.
	(SetLocalSymInfo): Implemented, call ISymbolWriter.DefineLocalVariable ()
	if the symbol writer is not null.

	* ILGenerator.cs (ILGenerator): Call ModuleBuilder.GetSymWriter () to get
	and store the symbol writer.
	(DeclareLocal): Pass the symbol writer to LocalBuilder's constructor.
	(MarkSequencePoint): Implemented, call ISymbolWriter.DefineSequencePoints ()
	if the symbol writer is not null.

	* AssemblyBuilder.cs (DefineDynamicModule): Pass the `bool emitSymbolInfo'
	to ModuleBuilder's constructor.

Sat Mar 16 19:11:47 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs: handle modified types correctly.

Thu Mar 7 17:10:42 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: allow saving bigger assemblies.
	* ILGenerator.cs: add fixup table for fields and methods, since
	at the end of the compile they may end up with a different table
	index.
	* ModuleBuilder.cs: add cache for type names to speed up the type
	lookups from the compiler.
	* TypeBuilder.cs: GetInterfaces () returns only interfaces in the
	current type, not in parents (the docs are wrong).

Tue Mar 5 18:09:34 CET 2002 Paolo Molaro <lupus@ximian.com>

	* EventBuilder.cs: implemented.
	* TypeBuilder.cs: implemented DefineEvent() method and UnderlyingSystemType
	property.

Mon Mar 4 20:34:52 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: make enough room in the byte array for string
	tokens.
	* TypeBuilder.cs: fixed GetInterfaces().

Mon Mar 4 11:30:40 CET 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: implemented GetConstructors(), GetFields(),
	GetMethods(), GetProperties().

Thu Feb 28 19:15:10 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: call into the runtime to init some basic
	assembly stuff. Reserve slot 1 of typedef table for .<Module>.
	* ModuleBuilder.cs: call into the runtime if we need to create a
	modief type, such as arrays, byref etc.
	* TypeBuilder.cs: call into the runtime to create the MonoClass
	representation for the type. Throw exceptions with not implemented
	stuff.

Wed Feb 27 18:48:47 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: fix nested exception blocks.

Wed Feb 20 22:30:49 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: upped compiled assembly size limit.
	Implemented SetCustomAttribute () methods.
	* CustomAttributeBuilder.cs: implemented the needed constructor
	stuff.
	* Cosntructorbuilder.cs, EnumBuilder.cs, FieldBuilder.cs,
	MethodBuilder.cs, ModuleBuilder.cs, ParameterBuilder.cs,
	PropertyBuilder.cs, TypeBuilder.cs: Implemented SetCustomAttribute () methods.

Wed Feb 20 14:54:01 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: add SetCustomAttribute () to keep the compiler
	going.

Fri Feb 15 18:15:04 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: finally block support and fixes.

Thu Feb 14 18:55:52 CET 2002 Paolo Molaro <lupus@ximian.com>

	* FieldBuilder.cs: Add SetRVAData().
	* ILGenerator.cs: speed up code array growth.
	* TypeBuilder.cs: fix IsValueTypeImpl(). Add class_size member.
	Implement DefineInitializedData().

Tue Jan 22 23:01:11 CET 2002 Paolo Molaro <lupus@ximian.com>

	* EnumBuilder.cs, TypeBuilder.cs: updates for changes in Type.cs.
	* ModuleBuilder.cs: fix lookup of nested types.

Tue Jan 15 22:46:21 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: implement some of the exception support methods.

Mon Jan 14 17:07:32 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ModulerBuilder.cs: search also for subtypes in GetTypes().
	* TypeBuilder.cs: bugfix in FullName. Implemented DefineNestedType().

Fri Jan 11 19:00:29 CET 2002 Paolo Molaro <lupus@ximian.com>

	* MethodBuilder.cs, ConstructorBuilder.cs: save parameter info.

Thu Jan 10 21:07:54 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: handle type tokens (used for box opcode).

Wed Jan 9 19:37:55 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: emit float and doubles.
	* ModuleBuilder.cs: off-by-one error fix and GetType()
	implementations.
	* TypeBuilder.cs: AttributesImpl added.
	* UnmanagedMarshal.cs: stubbed out class.

Sat Jan 5 15:59:05 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: fix emission of two-bytes opcodes.
	Missing slot for locals array. Throw exceptions on unimplemented
	methods.
	* OpCode.cs: add a comment: the Value property is useless.
	* OpCodes.cs: fix name of tail opcode (Tail -> Tailcall).

2002-01-05  Ravi Pratap  <ravi@ximian.com>

	* ConstructorBuilder.cs : Use the MonoTODO attribute.

	* ILGenerator.cs, Label.cs, MethodBuilder.cs, ModuleBuilder.cs,
	ParameterBuilder.cs, TypeBuilder.cs : Ditto.
	
Thu Jan 3 23:26:15 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: typo fix.

Mon Dec 24 17:21:30 CET 2001 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: added DefineMethodOverride().
	* MethodBuilder.cs: add override_method member and setter.

Mon Nov 19 13:58:01 CET 2001 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: add method to register a string in the "#US"
	stream.
	* EnumBuilder.cs, SignatureHelper.cs: added stubs.
	* ILGenerator.cs: more stuff implemented.
	* LocalBuilder.cs: keep track of local var index.

Thu Nov 15 18:11:23 CET 2001 Paolo Molaro <lupus@ximian.com>

	* ConstructorBuilder.cs: implement the interesting methods.
	* ILGenerator.cs: adapt for use with both a MethodBuilder and a
	ConstructorBuilder.
	* MethodBuilder.cs: add ImplAttributes.
	* ParameterBuilder.cs: adapt for ConstructorBuilder.
	* TypeBuilder.cs: add constructors handling.

Wed Nov 14 17:01:45 CET 2001 Paolo Molaro <lupus@ximian.com>

	* ConstructorBuilder.cs: added missing stubs and some implementation.
	* CustomAttributeBuilder.cs: added.
	* EventBuilder.cs: added.
	* FieldBuilder.cs: updates.
	* MethodBuilder.cs: stuff to implement P/Invoke methods.
	* ModuleBuilder.cs: added GetArrayMethod() stub.
	* ParameterBuilder.cs, PropertyBuilder.cs: updates.
	* TypeBuilder.cs: updates and stubs.

2001-11-10  Sean MacIsaac  <macisaac@ximian.com>

	* TypeBuilder.cs: Added implementation for TypeHandle.

Tue Nov 6 09:13:45 CET 2001 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: define an internal constructor.

2001-10-07  Miguel de Icaza  <miguel@ximian.com>

	* AssemblyBuilder.cs: Reformatted.

	Added override keywords to those that needed them.

	Removed methods that we do not override, but just inherit

Tue Sep 25 16:53:08 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs, ConstructorBuilder.cs, ModuleBuilder.cs: added.
