2003-02-25 Lluis Sanchez Gual <lluis@ideary.com>

	* Identity.cs: Added property to check if an identity is connected (it is remotely accesible)
	* ObjRef.cs: Added internal helper method for getting the server type of an ObjRef.
	* RemotingServices.cs: Implemented Disconnect method. Added support for custom proxy
	  creating using ProxyAttribute. Added support for activation attributes in creation
	  of proxies. Some other minor corrections.
	* ServerIdentity.cs: minor corrections.

2003-02-18 Lluis Sanchez Gual <lluis@ideary.com>

	* Identity.cs: Added envoy message sink.
	* ObjRef.cs: Implemented EnvoySink property
	* RemotingConfiguration.cs: now enables proxy creation for types registered
	  as ClientActivatedType or WellKnownClientType.
	* RemotingServices.cs: Added support for ContextBoundObjects.
	  Added methods for creating proxies. 
	* ServerIdentity.cs: Added initialization of envoy sink.
	* EnvoyInfo.cs: Added. It is an implementation on IEnvoyInfo.

2003-02-08  Sebastien Pouliot  <spouliot@videotron.ca>

	* RemotingConfiguration.cs: Changed using to Mono.Xml for MiniParser.

2003-02-07 Patrik Torstensson

	* RemotingServices.cs: Always marshal an object in GetObjectData

2003-02-07 Lluis Sanchez Gual <lluis@ideary.com>

	* Identity.cs: Added ObjRef attribute, that holds the objref of the object.
	  Removed implementation of CreateObjRef. Now it is implemented in the derived classes.
	* ServerIdentity.cs: Added implementation of CreateObjRef.
	* RemotingServices.cs: Changed implementation of GetRemoteObject and GetClientIdentity.
	  Now they only have and ObjRef as input parameter. This is the objref received from
	  the server. Unmarshal() also checks if the objref is for a well known object.
	  In this case, a proxy is always created, but if not, it tries to get the real object.
	* ObjRef.cs: Added some flags that have info for marshalling/unmarshalling.
	  Changed behavior of IsPossibleToCAD. Now returns false. Returning true makes serialization 
	  of this ObjRef to fail in the target AD. Added method UpdateChannelInfo.

2003-02-04 Lluis Sanchez Gual <lluis@ideary.com>

	* Identity.cs: created and identity class for each identity type. It is a more clear design.
	* ServerIdentity.cs: added. Implements identity funtionality specific to server objects
	* RemotingServices.cs: Modified to work with new types of identities.
	* RemotingConfiguration.cs: Modified to work with new types of identities.
	* ObjRef.cs: Added initialization of channel info in default constructor.
	* Identity.cs: Added support for WellKnownService objects.

2003-02-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* RemotingServices.cs:
	(GetMethodBaseFromMethodMessage): fixed to make it also work with
	internal methods without MethodSignature (see ApplicationHost.cs).

2003-02-03 Patrik Torstensson

	* ObjRef.cs: added copy constructor and two helpers for cross 
	  appdomain message marshalling.
	* RemotingServices.cs: Added helper to create transparant proxy for appdomain, and
	  register internal cross appdomain channel.

2003-01-29 Lluis Sanchez Gual <lluis@ideary.com>

	* RemotingServices.cs: Added support for WellKnownService objects.
	* RemotingConfiguration.cs: Implemented most of methods (Configure is not working yet).
	* ObjRef.cs: Added initialization of channel info in default constructor.
	* Identity.cs: Added support for WellKnownService objects.

2003-01-28 Patrik Torstensson

	* ObjRef.cs: Fixed Objref marshalling flags
	
2003-01-24 Lluis Sanchez Gual <lluis@ideary.com>

	* RemotingServices.cs: Implemented some missing methods: IsMethodOverloaded, 
	  SetObjectUriForMarshal, IsOneWay, IsObjectOutOfAppDomain, 
	  IsObjectOutOfContext, GetObjRefForProxy, GetObjectData,
	  GetMethodBaseFromMethodMessage.
	* TypeInfo.cs: Added.
	* ObjRef.cs: Implemented serialization and added support for IRemotingTypeInfo.

2002-12-28 Lluis Sanchez Gual <lluis@ideary.com>

	* SoapServices.cs: Implemented some methods

2002-12-20 Lluis Sanchez Gual <lluis@ideary.com>

	* ObjRef.cs: Implementation now based on methods of RemotingServices.
	* RemotingServices.cs: Remoting information now kept in Identity objects.
	  All methods adapted to work with identities.
	  Renamed ExecuteMessage to InternalExecuteMessage. ExecuteMessage should
	  not make a direct call to the object.
	* Identity.cs: added.

2002-12-11  Jaime Anguiano Olarra <jaime@gnome.org>

	* RemotingConfiguration.cs: added to the CVS.

2002-11-29  Jaime Anguiano Olarra <jaime@gnome.org>

	* ObjectHandle.cs: added implementation  for InitializeLifetimeService
	* method.


2002-11-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SoapServices.cs: fix error CS3005.

2002-09-03  Dietmar Maurer  <dietmar@ximian.com>

	* RemotingServices.cs: add an unique app_id string used to generate
	unique object uris.

	* ObjRef.cs: added serialization support

2002-08-31  Dietmar Maurer  <dietmar@ximian.com>

	* ObjRef.cs: gather the channel date at creation time.

2002-08-20  Dietmar Maurer  <dietmar@ximian.com>

	* RemotingServices.cs: Connect impl. 

2002-08-02  Duncan Mak  <duncan@ximian.com>

	* ActivatedClientTypeEntry.cs:
	* ActivatedServiceTypeEntry.cs:
	* WellKnownClientTypeEntry.cs:
	* WellKnownServiceTypeEntry.cs: Various visibility fixes.

2002-07-31  Duncan Mak  <duncan@ximian.com>

	* TypeEntry.cs:
	* ActivatedClientTypeEntry.cs:
	* ActivatedServiceTypeEntry.cs:
	* WellKnownClientTypeEntry.cs:
	* WellKnownServiceTypeEntry.cs: Added all the classes derived from TypeEntry.

	* RemotingException.cs: 
	* RemotingTimeoutException.cs: 
	* ServerException.cs: Added missing exceptions.

	* IChannelInfo.cs: 
	* IEnvoyInfo.cs: 
	* IRemotingTypeInfo.cs: Added missing interfaces.

2002-07-24  Duncan Mak  <duncan@ximian.com>

	* LeaseState.cs: Moved to System.Runtime.Remoting.Lifetime.

	* SoapMethodOption.cs: 
	* SoapOption.cs: Removed and merged into System.Runtime.Remoting.Metadata.SoapOption.

2002-07-09  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* IObjectHandle.cs: New file.
	* ObjectHandle.cs: implemented constructor and Unwrap.

2002-01-05  Ravi Pratap  <ravi@ximian.com>

	* ObjRef.cs : Strew the MonoTODO attribute.

2001-09-02  Miguel de Icaza  <miguel@ximian.com>

	* ObjRef.cs: Include System.Runtime.Serialization

