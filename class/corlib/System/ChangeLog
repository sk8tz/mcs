2001-11-27  Derek Holden  <dholden@draper.com>

	* IntegerFormatter.cs: Formatting of type "Number" was not
	using NumberFormatInfo.NumberNegativePattern.

2001-11-26  Dick Porter  <dick@ximian.com>

	* LocalDataStoreSlot.cs: No need to delete a system TLS slot in
	the finalise routine any more

2001-11-21  Miguel de Icaza  <miguel@ximian.com>

	* ApplicationException.cs: internationalize by adding calls to
	Locale.GetText ().  And throw NotImplementedExceptions on calls
	that we have to implement.

	* Version.cs: Ditto.

	* ValueType.cs: ditto.

	* UnauthorizedAccessException.cs: ditto.

	* UInt32.cs: ditto.

	* UInt64.cs: ditto.

	* UInt16.cs: ditto.

	* TypeLoadException.cs: ditto

	* TypeInitializationException.cs: ditto.

	* Type.cs: ditto.

	* TimeSpan.cs: ditto.

	* SystemException.cs: ditto.

	* String.cs: ditto.

	* StackOverflowException.cs: ditto.x

	* Single.cs: ditto.

	* SByte.cs: ditto.

	* RuntimeTypeHandle.cs: ditto.

	* RuntimeMethodHandle.cs: ditto.

	* RuntimeFieldHandle.cs: ditto.

	* Random.cs: ditto.

	* OutOfMemoryException.cs: ditto.

	* OperatingSystem.cs: ditto.

	* ObjectDisposedException.cs: ditto.

	* NullReferenceException.cs: ditto.

	* NotImplementedException.cs: ditto.

	* NotFiniteNumberException.cs: ditto.o

	* MulticastNotSupportedException.cs: ditto.

	* MissingMethodException.cs: ditto.

	* MemberAccessException.cs: ditto.

	* Math.cs: ditto.

	* InvalidCastException.cs: ditto.

	* IntegerFormatter.cs: ditto.

	* Int32.cs: ditto.

	* Int16.cs: ditto.

	* IndexOutOfRangeException.cs: ditto.

	* Environment.cs: ditto

	* Enum.cs: ditto.

	* DuplicateWaitObjectException.cs: ditto.

	* DivideByZeroException.cs: ditto.

	* Delegate.cs: ditto

	* DecimalFormatter.cs: ditto.

	* Decimal.cs: ditto.

	* DateTime.cs: ditto.

	* Convert.cs: ditto.

	* Char.cs: ditto.

	* Byte.cs: ditto.

	* Boolean.cs: ditto.

	* ArrayTypeMismatchException.cs: ditto.

	* ArithmeticException.cs: ditto.

	* ArgumentOutOfRangeException.cs: ditto.

	* ArgumentNullException.cs: ditto.

	* Enum.cs: Make it derive from ValueType, add CompareTo method.

	* Attribute.cs: Reformat.

2001-11-14  Miguel de Icaza  <miguel@ximian.com>

	* Decimal.cs, Double.cs, Byte.cs, Char.cs, Int16, UInt16, Int32,
	UInt32, Int64, UInt64, SByte, Single (CompareTo): Throw the
	exception if the value is null too.

	* Char.cs (CompareTo): ditto.

	* ApplicationException.cs: Added constructor that does serialization.

	* ParamArrayAttribute.cs: Define attribute correctly.

Wed Nov 14 16:31:19 CET 2001 Paolo Molaro <lupus@ximian.com>

	* AppDomain.cs: rename dummy interface _AppDomain to AppDomain_Intf.
	* Array.cs: fix Array.Copy.
	* AssemblyLoadEventArgs.cs: rename field.
	* CLSCompliantAttribute.cs: use correct name for the class.
	* Char.cs: fix IsLetter.
	* Console.cs, DateTime.cs, Decimal.cs, IConvertible.cs, Math.cs,
	SByte.cs, UInt16.cs, UInt32.cs, UInt64.cs, UIntPtr.cs: CLSCompliant updates.
	* Convert.cs: CLSCompliant updates, add ChangeType() methods.
	* Delegate.cs: renamed target field to m_target.
	* Enum.cs: added missing methods.
	* MonoType.cs: add a constructor and some needed properties.
	* Object.cs: implement GetType().
	* String.cs: CLSCompliant updates. Fixes everywhere to remove the
	ending 0 char.
	* Type.cs: add missing methods/properties.

2001-11-10  Sean MacIsaac  <macisaac@ximian.com>

	* AttributeUseage.cs: Should define AttributeUsageAttribute.

	* CLSCompliant.cs: Marked with AttributeUsage attribute.

	* Decimal.cs: Fixed CLSCompliant attributes.

	* Type.cs: changed _impl to internal (needs to be accessable by
	subclasses).

	(TypeHandle): Marked as abstract, implementation removed.

	(IsNotPublic, IsPublic, GetMethods, GetPropery, GetConstructor,
	GetMethod): Added stub implementations so NUnit would link against
	corlib

Tue Nov 6 09:11:43 CET 2001 Paolo Molaro <lupus@ximian.com>

	* AppDomain.cs: use an internal constructor for AssemblyBuilder.

2001-11-05  Miguel de Icaza  <miguel@ximian.com>

	* NonSerializedAttribute.cs: Add AttributeUsage rules for this
	attribute. 

Fri Nov 2 18:23:15 CET 2001 Paolo Molaro <lupus@ximian.com>

	* String.cs: fix a couple of bugs.
	* AppDomain.cs: use new AppBuilder constructor.
	* Buffer.cs, GC.cs, NonSerializedAttribute.cs,
	NotImplementedException.cs, ObjectDisposedException.cs,
	UnauthorizedAccessException.cs: add implementation.
	* OverflowException.cs: fix class name.

2001-10-28  Jeffrey Stedfast  <fejj@ximian.com>

	* String.cs: Don't use a terminating nil char for our internal
	array.

2001-10-27  Miguel de Icaza  <miguel@ximian.com>

	* Delegate.cs (Delegate.CombineImpl): Implement.
	(Delegate.Combine): Implement.

	* MulticastDelegate.cs (MulticastDelegate.Equals): Implement.

	(MulticastDelegate.CombineImpl): This was not as trivial as I
	thought. 

	* ContextStaticAttribute.cs: Added AttributeUsage to
	ContextStaticAttribute. 

	* FlagsAttribute.cs: Add AttributeUsage to FlagsAttribute

2001-10-15  Martin Weindel <martin.weindel@t-online.de>

        * added Decimal.cs * added DecimalFormatter.cs (internal class
	used from System.Decimal)

2001-10-11  Thomas Neidhart <tome@sbox.tugraz.at>

	* Convert.cs: Added methods for Base64 transforming just used the
	  existing System.Security.Cryptography.ToBase64Transform, should
	  be changed to use a stand-alone class, e.g. Base64Encoder
	  
2001-10-10  Derek Holden  <dholden@draper.com>

	* IntegerFormatter.cs: Added. Implements ToString for all the
	integer data types for all the format types.

	* Byte.cs: Using IntegerFormatter for ToString's.

	* SByte.cs: Using IntegerFormatter for ToString's.

	* Int16.cs: Using IntegerFormatter for ToString's.

	* Int32.cs: Using IntegerFormatter for ToString's.

	* Int64.cs: Using IntegerFormatter for ToString's.

	* UInt16.cs: Using IntegerFormatter for ToString's.

	* UInt32.cs: Using IntegerFormatter for ToString's.

	* UInt64.cs: Using IntegerFormatter for ToString's.

2001-10-07  Miguel de Icaza  <miguel@ximian.com>

	* Exception.cs: Implement bits of serialization.

	* RuntimeFieldHandle.cs: Implement Serialization features.

	* Type.cs: Implement TypeHandle property.

2001-09-28  Dick Porter  <dick@ximian.com>

	* LocalDataStoreSlot.cs: Implemented

Tue Sep 25 19:58:14 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* String.cs: fix off-by-one error in Trim().

Tue Sep 25 18:52:14 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* Type.cs: added GetType () method.

Tue Sep 25 17:29:02 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* MissingMethodException.cs, MissingMemberException.cs,
	MemberAccessException.cs: added.

Tue Sep 25 16:46:43 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* String.cs: don't access the string array out of bounds in
	LastIndexOf.  * Type.cs: fix return type of the Assembly property.

Mon Sep 24 20:35:24 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* String.cs: make Intern and IsIntern internalcalls.

2001-09-13  Dick Porter  <dick@ximian.com>

	* Type.cs: Added a stub for the IsValueType property.

	* SystemException.cs (System): Added the other constructor, so
	that System.Threading exceptions can inherit it.

2001-09-08  Jeffrey Stedfast  <fejj@ximian.com>

	* String.cs (TrimStart): Don't keep looping through the trimchars
	once we've found a match.
	(TrimEnd): Same here.
	(Trim): And finally here.

2001-09-07  Ravi Pratap  <ravi@ximian.com>

	* Char.cs (IsLetterOrDigit): Implement.
	(IsLower): Implement, but we need to be Unicode aware.
	(IsNumber): Implement.
	(IsPunctuation): Implement.
	(IsWhiteSpace): Implement.
	(ToUpper): Fix to subtract 32 from the ASCII value, not 33 :)
	(ToLower): Same here.

2001-09-04  Miguel de Icaza  <miguel@ximian.com>

	* Object.cs: Shortcut, if (a == b) then return true.

Fri Sep 7 18:34:48 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* Delegate.cs: we need a pointer to the method thunk in
	the delegate object.

Fri Sep 7 12:28:01 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* AsyncCallback.cs, common.src: add AsyncCallback delegate.

2001-09-06  Jeffrey Stedfast  <fejj@ximian.com>

	* String.cs (System): Don't mix uint and int.

2001-09-04  Jeffrey Stedfast  <fejj@ximian.com>

	* String.cs (BoyerMoore): Modified to not use pointers and to instead
	use indexes.
	(IndexOf): Use BoyerMoore.

2001-09-02  Miguel de Icaza  <miguel@ximian.com>

	* All over: Use the autogenerated enumerations from the ECMA
	documentation that Sergey wrote.
	
	* PlatformID.cs: Add Unix definition.

	* OperatingSystem.cs: Use Unix instead of Linux here.

	* MarshalByRefObject.cs: Mark class as [Serializable].

2001-08-28  Dietmar Maurer  <dietmar@ximian.com>

	* Console.cs: impl. (write only)
	implemented the stdin stuff

	* Int32.cs: impl. real op_Equal

2001-08-24  Miguel de Icaza  <miguel@ximian.com>

	* (common.src): Removed IAsyncResult as it is not on CVS yet.

	* UIntPtr.cs: Removed CLSCompliant attribute before the namespace,
	as it breaks the build.

2001-08-23  Michael Lambert <michaellambert@email.com>

	* IntPtr.cs: Optimized unsafe declaration, implemented GetObjectData, 
	added CLSCompliant attribute

	* IAsyncResult.cs: Added

	* common.src: Added IAsyncResult.cs

2001-08-23  Michael Lambert <michaellambert@email.com>

	* UIntPtr.cs: Added

	* common.src: Added UIntPtr.cs

2001-08-20  Dietmar Maurer  <dietmar@ximian.com>

	* Attribute.cs: uncomment some code to make it compile again

	* mono.src: removed duplicated Attribute.cs

2001-08-16  Nick Drochak <ndrochak@gol.com>

	* Attribute.cs: implemented all methods except GetHashCode()

	* common.src: added Attribute.cs so it would compile in

2001-08-10  Dietmar Maurer  <dietmar@ximian.com>

	* Object.cs: changed MemberWiseClone to MemberwiseClone, and
	marked it as InternalCall
	
	* common.src: removed UriFormatException.cs because the file is
	not there.

	* RuntimeTypeHandle.cs: replaced IntrPtr with IntPtr
	* Char.cs: replaced byte with char

	* Array.cs: make it work with the mono interpreter

2001-08-06  Miguel de Icaza  <miguel@ximian.com>

	* Version.cs: Make the class sealed

2001-08-08  Bob Smith  <bob@thestuff.net>

        * Random.cs: Many compile fixes.
        * Random.cs: I read a bad spec. Class updated to match real spec.

2001-08-06  Miguel de Icaza  <miguel@ximian.com>

	* IntPtr.cs: Added and Completed implementation.

	* Uri.cs: Add a note.

2001-08-06  Bob Smith  <bob@thestuff.net>

        * Random.cs: Compile fix. Needs more testing.

2001-08-06 Garrett Rooney <rooneg@electricjellyfish.net>

	* Uri.cs: Initial Implementation.  Parsing needs to be fixed to take 
	into account IPv6 addresses, url encoding needs to be implemented, and 
	various minor methods need to be written, but this is a decent start.

2001-08-06  Dietmar Maurer  <dietmar@ximian.com>

	* common.src: added Object.cs

	* mono.src: added ValueType.cs

2001-08-02  Dietmar Maurer  <dietmar@ximian.com>

	* Math.cs: replaced libc with libm

2001-08-02  Bob Smith  <bob@thestuff.net>

        * Random.cs: Implemented. Needs testing.

2001-08-02  Miguel de Icaza  <miguel@ximian.com>

	* IServiceProvider.cs, EventHandler.cs: New files.

2001-08-02  Marcel Narings  <marcel@narings.nl>
	
	* DateTime.cs: Cleaned up a bit. Added the Add* family members.
	Added exceptions. Added IConvertible. Still needs some platform 
	dependend stuff, the Parse and ToString members

2001-08-01  Dietmar Maurer  <dietmar@ximian.com>

	* Type.cs (GetTypeFromHandle): added placeholder 

2001-07-24  Derek Holden  <dholden@draper.com>

	* Boolean.cs: Formatted to code style standard. Added GetTypeCode
	which is really an IConvertible defined method.

	* Byte.cs: Added a missing Parse method. Put in Parse and ToString
	behavior, still need to do the main Parse and ToString.

	* Char.cs: Added a bunch of missing ECMA methods. Commented a
	specification discrepency. Still didn't any unicode stuff, though
	every IsFoo(char c) method has an IsFoo(string, index)
	counterpart, added wrappers for those.
	
	* Convert.cs: Fixed NaN/Inf checking and double/float
	rounding. Added ToType for IConvertible classes

	* Double.cs: Fixed ECMA min and max values. Added IsInfinity /
	IsNaN methods. Changed Inf/NaN internals.

	* IConvertible.cs: Added comments for using
	Convert.ToType. Changed return values to draft base values.

	* Int16.cs: Added a missing Parse statement. Put in behavior for
	overloaded ToString and Parse methods.

	* Int32.cs: Added a missing Parse statement. Put in behavior for
	overloaded ToString and Parse methods.

	* Int64.cs: Added a missing Parse statement. Put in behavior for
	overloaded ToString and Parse methods.
	
	* Single.cs: Put in ECMA epsilon value. Added IsInfinity / IsNaN
	methods. Changed Inf/NaN internals.

	* SByte.cs: Added a missing Parse method. Put in Parse and
	ToString behavior, still need to do the main Parse and ToString.

	* UInt16.cs: Added a missing Parse statement. Put in behavior for
	overloaded ToString and Parse methods.

	* UInt32.cs: Added a missing Parse statement. Put in behavior for
	overloaded ToString and Parse methods.

	* UInt64.cs: Added a missing Parse statement. Put in behavior for
	overloaded ToString and Parse methods.
	
2001-07-20  Miguel de Icaza  <miguel@ximian.com>

	* MulticastDelegate.cs: New File.

	* Delegate.cs: New file.

	* Enum.cs: New file.

	* Attribute.cs: New file.

	* Type.cs: New file.

	* ParamArrayAttribute.cs: New file.

	* RuntimeTypeHandle.cs: New file.

	* MulticastDelegate.cs: Added.

	* DateTime.cs: Added

	* Delegate.cs: Added

2001-07-18  Michael Lambert <michaellambert@email.com>

        * AttributeTargets.cs: Add.

2001-07-19  Jeffrey Stedfast  <fejj@ximian.com>

	* Char.cs: Made ToUpper and ToLower public methods.

	* String.cs: Lots and lots of compile fixes - just need to write
	DateTime.cs and this should build completely now.

2001-07-19  Bob Smith (bob@thestuff.net)

	* Math.cs: Implemented. 

2001-07-19  Miguel de Icaza  <miguel@ximian.com>

	* String.cs: Removed tolower and toupper.

	* Char.cs: Moved ToLower and ToUpper from string to here. 

	* Convert.cs ToByte (float value), ToByte (double value) Use IsNan
	instead of comparing the value to Nan.

2001-07-19  Duco Fijma (duco@lorentz.xs4all.nl)

	* TimeSpan.cs: New implementation.

2001-07-18  Scott Sanders <scott@stonecobra.com>

         * UriFormatExcpetion.cs: Add - 85% complete

2001-07-17  Jeffrey Stedfast  <fejj@ximian.com>

	* String.cs (IndexOf): Slight optimization that allows skipping
	over a few chars here and there. This isn't as good as using my
	Boyer-Moore implementation, however, Boyer-Moore is only really
	good for long strings (I plan on making the code decide which
	string search algorithm it should use on-the-fly at some point).
	(LastIndexOf): Fix to work correctly.
	(BoyerMoore): Took out some unneeded code and fixed an edge-case.

2001-07-16  Michael Lambert <michaellambert@email.com>

	* EventArgs.cs: Add.
	
2001-07-16  Miguel de Icaza  <miguel@ximian.com>

	* Version.cs: Remove my buggy comment.

2001-07-15  Sean MacIsaac  <macisaac@ximian.com>

	* String.cs: Spelling error of IComparable, object's
	MemberwiseClone cannot be overridden.  Made indexer valid for now,
	but not sure what to do about this in the long run.  Seems to be a
	couple bugs in csc.exe having to do with multiple pointer defs in
	the same statement, and returning subclasses of a class in the
	return type of an interface function implementation.  Also moved
	operators inside of class definition.

2001-07-14  Jeffrey Stedfast  <fejj@ximian.com>

	* String.cs: A tom of compile fixes, although we still don't compile.

	* IConvertible.cs: The To*Int64() methods return *Int64's, not
	*Int32's. Also, it's ToDateTime() not ToDateType().

2001-07-14  Jeffrey Stedfast  <fejj@ximian.com>

	* String.cs: Apparently I needed to at least write stubs for the
	IConvertible interfaces. *sigh*

2001-07-14  Jeffrey Stedfast  <fejj@ximian.com>

	* String.cs: Many logic/other fixes and better usage of the
	features of c#
	(tolower): New convenience method to help condense code.
	(toupper): Another new helper method.
	(Compare): Use the new helper methods.
	(ToLower): use tolower().
	(ToUpper): use toupper().
	(LastIndexOfAny): Implemented.
	(BoyerMoore): New private helper method that implements a modified
	version of the Boyer-Moore search algorithm. Noothing uses it yet
	as I'm not 100% sure it even works properly with unicode strings
	not to mention it uses a huge lookup-table :-)
	(Split): Implemented.

2001-07-13  Jeffrey Stedfast  <fejj@ximian.com>

	* TODO: Added things that need to be finished in System.String

	* String.cs: New source file implementing the System.String class

2001-07-12  Sean MacIsaac  <macisaac@ximian.com>

	* TypeCode.cs: UInt64 was UInt63.

	* Object.cs: Fixed a numer of compiler errors.

	* Array.cs: Fixed some compiler errors.

	* IComparable.cs: Fixed some compiler errors.

	* ICloneable.cs: Fixed some compiler errors.

	* IConvertible.cs: Fixed some compiler errors.

	* IFormattable.cs: Fixed a compiler error.

	* IFormatProvider.cs: Fixed a compiler error.

	* IDisposable.cs: Fixed a compiler error.

	* IFormatProvider.cs: Added public accesability type to
	IFormatProvider.

	* Exception.cs: Added a using statement to remove compile time
	error.

	* ApplicationException.cs: Removed a ; that was causing a compiler
	error.

	* Int16.cs: Fixed some compiler errors.

	* Int32.cs: Fixed some compiler errors.

	* Int64.cs: Fixed some compiler errors.

	* SystemException.cs: Fixed a compiler error.

	* UInt16.cs: Fixed some compiler errors.

	* UInt32.cs: Fixed some compiler errors.

	* UInt64.cs: Fixed some compiler errors.

	* Void.cs: Fixed a compiler error.	

2001-07-12  Joe Shaw  <joe@ximian.com>

	* Array.cs: Fix backwards parameters to Array.SetValue()
	throughout.
	(BinarySearch): Fix backward logic surrounding whether to call
	value.CompareTo or comparer.Compare.
	(LastIndexOf): Stop being stupid. I am so not used to strongly
	bounded arrays...
	(Sort): Implement a quicksort.

2001-07-11  Joe Shaw  <joe@ximian.com>

	* Array.cs: Change all instances of trying to access an array with
	the index operator to calls to GetValue and SetValue, and add
	InternalGetValue and InternalSetValue which are internal calls
	into the runtime. Ew.

2001-07-10  Joe Shaw  <joe@ximian.com>

	* Array.cs: Implemented everything but Sort().

2001-07-09  Jeffrey Stedfast  <fejj@ximian.com>

	* Object.cs (Object::Equals): Object variable name is `o'.

2001-07-06  Joe Shaw  <joe@ximian.com>

	* Int16.cs, Int32.cs, Int64.cs, UInt16.cs, UInt32.cs, UInt64.cs:
	Implement the IComparable and IFormattable interfaces. Fix a typo
	(publig -> public)

	* ApplicationException.cs, ArgumentException.cs,
	ArgumentNullException.cs, ArgumentOutOfRangeException.cs,
	ArtithmeticException.cs, ArrayTypeMismatchException.cs,
	DivideByZeroException.cs, DuplicateWaitObjectException.cs,
	ExecutionEngineException.cs, FormatException.cs,
	IndexOutOfRangeException.cs, InvalidCastException.cs,
	InvalidOperationException.cs, InvalidProgramException.cs,
	MulticateNotSupportedException.cs, NotFiniteNumberException.cs,
	NotSupportedException.cs, NullReferenceException.cs,
	OutOfMemoryException.cs, OverflowException.cs, RankException.cs,
	StackOverflowException.cs, SystemException.cs,
	TypeInitializationException.cs: Added all of the exceptions
	specified by the language spec. Mmmm... bloat.

2001-07-06  Miguel de Icaza  <miguel@ximian.com>

	* Int64.cs, Int32.cs: Put.  Parsing and ToString missing.  Should
	do a generic routine all of these guys use.

	* Int16.cs: identified missing methods.

	* UInt16.cs, UInt32.cs, UInt64.cs: Add.

2001-06-26  Miguel de Icaza  <miguel@ximian.com>

	* TypeCode.cs: Implement

	* Void.cs: Implement.

	* TODO: Add file to keep track of pending tasks.

	* Object.cs, ValueType.cs: Implement.
