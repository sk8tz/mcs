			Mono JScript .Net Compiler

			    Cesar Lopez Nataren
		          (cesar@ciencias.unam.mx)
				    2003

Structure: Divided by compilation phase.

Lexical Analysis: We use the Antlr [1] lexer generator for
producing the one needed for our compiler. But, the Microsoft.JScript
namespace, exposes some clases related to that task. Those are:
- JSToken
- JSScanner
- Context
- DocumentContext
- JScriptLexer, this is the class generated by Antlr.


Syntax Analysis and Abstract Syntax Tree construction:
- AST
- ASTList
- ArrayLiteral
- BinaryOp
- Binding *
- BitwiseBinary
- Block
- DebugBreak *
- Enum
- Equality
- Eval
- ForIn
- FunctionDeclaration
- FunctionExpression
- Import *
- JSParser
- JScriptParser is the parser generated by Antlr.
- Literal
- Package
- Print
- ScriptBlock
- Statement (we could delete this one)
- Throw
- Try
- UnaryOp
- VariableDeclaration
- VariableStatement
- With


Visual Studio for Applications (VSA), execution support:
- BaseVsaEngine
- GlobalScope
- IRedirectOutput
- VsaEngine
- ActivationObject
- ScriptObject
- IActivationObject


Object System:
- JSObject
- BooleanObject
- DateObject
- EnumeratorObject
- ErrorObject
- JSPrototypeObject
- MathObject
- NumberObject
- RegExpObject 
- StringObject
- VBArrayObject



I/O support:
- ScriptStream


Utils:
- Convert



[1] You can get info about it at: http://antlr.org
