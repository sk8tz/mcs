// $ANTLR 2.7.2: "jscript-lexer-parser.g" -> "JScriptLexer.cs"$

namespace Microsoft.JScript.Tmp
{
	public class JScriptParserTokenTypes
	{
		public const int EOF = 1;
		public const int NULL_TREE_LOOKAHEAD = 3;
		public const int LITERAL_function = 4;
		public const int IDENTIFIER = 5;
		public const int LPAREN = 6;
		public const int RPAREN = 7;
		public const int COLON = 8;
		public const int LBRACE = 9;
		public const int RBRACE = 10;
		public const int LITERAL_const = 11;
		public const int ASSIGNMENT = 12;
		public const int SEMI_COLON = 13;
		public const int LITERAL_class = 14;
		public const int LITERAL_extends = 15;
		public const int LITERAL_implements = 16;
		public const int COMMA = 17;
		public const int LITERAL_get = 18;
		public const int LITERAL_set = 19;
		public const int LITERAL_debugger = 20;
		public const int LITERAL_if = 21;
		public const int LITERAL_else = 22;
		public const int LITERAL_import = 23;
		public const int LITERAL_interface = 24;
		public const int LITERAL_do = 25;
		public const int LITERAL_while = 26;
		public const int LITERAL_for = 27;
		public const int LITERAL_in = 28;
		public const int LITERAL_continue = 29;
		public const int LITERAL_break = 30;
		public const int LITERAL_package = 31;
		public const int LITERAL_return = 32;
		public const int LITERAL_with = 33;
		public const int LITERAL_super = 34;
		public const int LITERAL_switch = 35;
		public const int LITERAL_case = 36;
		public const int LITERAL_default = 37;
		public const int LITERAL_enum = 38;
		public const int LITERAL_static = 39;
		public const int LITERAL_throw = 40;
		public const int LITERAL_try = 41;
		public const int CC_ON = 42;
		public const int LITERAL_print = 43;
		public const int COND_SET = 44;
		public const int COND_DEBUG = 45;
		public const int LITERAL_on = 46;
		public const int LITERAL_off = 47;
		public const int COND_POSITION = 48;
		public const int LITERAL_end = 49;
		public const int LITERAL_file = 50;
		public const int STRING_LITERAL = 51;
		public const int LITERAL_catch = 52;
		public const int LITERAL_finally = 53;
		public const int LITERAL_var = 54;
		public const int MULTIPLICATION_ASSIGN = 55;
		public const int DIVISION_ASSIGN = 56;
		public const int REMAINDER_ASSIGN = 57;
		public const int ADDITION_ASSIGN = 58;
		public const int SUBSTRACTION_ASSIGN = 59;
		public const int SIGNED_LEFT_SHIFT_ASSIGN = 60;
		public const int SIGNED_RIGHT_SHIFT_ASSIGN = 61;
		public const int UNSIGNED_RIGHT_SHIFT_ASSIGN = 62;
		public const int BITWISE_AND_ASSIGN = 63;
		public const int BITWISE_XOR_ASSIGN = 64;
		public const int BITWISE_OR_ASSIGN = 65;
		public const int CONDITIONAL = 66;
		public const int LOGICAL_OR = 67;
		public const int LOGICAL_AND = 68;
		public const int BITWISE_OR = 69;
		public const int BITWISE_XOR = 70;
		public const int BITWISE_AND = 71;
		public const int EQUALS = 72;
		public const int DOES_NOT_EQUALS = 73;
		public const int STRICT_EQUALS = 74;
		public const int STRICT_DOES_NOT_EQUALS = 75;
		public const int L_THAN = 76;
		public const int G_THAN = 77;
		public const int LE_THAN = 78;
		public const int GE_THAN = 79;
		public const int LITERAL_instanceof = 80;
		public const int SIGNED_RIGHT_SHIFT = 81;
		public const int SIGNED_LEFT_SHIFT = 82;
		public const int PLUS = 83;
		public const int MINUS = 84;
		public const int TIMES = 85;
		public const int DIVISION = 86;
		public const int REMAINDER = 87;
		public const int LITERAL_delete = 88;
		public const int LITERAL_void = 89;
		public const int LITERAL_typeof = 90;
		public const int INCREMENT = 91;
		public const int DECREMENT = 92;
		public const int BITWISE_NOT = 93;
		public const int LOGICAL_NOT = 94;
		public const int LITERAL_new = 95;
		public const int LSQUARE = 96;
		public const int RSQUARE = 97;
		public const int DOT = 98;
		public const int LITERAL_this = 99;
		public const int LITERAL_true = 100;
		public const int LITERAL_false = 101;
		public const int LITERAL_null = 102;
		public const int DECIMAL_LITERAL = 103;
		public const int HEX_INTEGER_LITERAL = 104;
		public const int LITERAL_public = 105;
		public const int LITERAL_private = 106;
		public const int LITERAL_protected = 107;
		public const int LITERAL_internal = 108;
		public const int LITERAL_expando = 109;
		public const int LITERAL_abstract = 110;
		public const int LITERAL_final = 111;
		public const int LITERAL_hide = 112;
		public const int LITERAL_override = 113;
		public const int TAB = 114;
		public const int VERTICAL_TAB = 115;
		public const int FORM_FEED = 116;
		public const int SPACE = 117;
		public const int NO_BREAK_SPACE = 118;
		public const int LINE_FEED = 119;
		public const int CARRIAGE_RETURN = 120;
		public const int LINE_SEPARATOR = 121;
		public const int PARAGRAPH_SEPARATOR = 122;
		public const int UNSIGNED_RIGHT_SHIFT = 123;
		public const int COND_IF = 124;
		public const int COND_ELIF = 125;
		public const int COND_ELSE = 126;
		public const int COND_END = 127;
		public const int SL_COMMENT = 128;
		
	}
}
