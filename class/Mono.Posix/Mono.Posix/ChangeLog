2004-11-05  Jonathan Pryor  <jonpryor@vt.edu>

	* PosixConvert.cs: New file; conversion functions for Mono.Posix types.
	* PosixDirectory.cs: New file; Friendly wrapper over directory information.
	* PosixDirectoryInfo.cs: New file; Friendly wrapper over directory information.
	* PosixEnvironment.cs: New file; Friendly wrapper over environment information.
	* PosixFile.cs: New file; Friendly wrapper over file information.
	* PosixFileInfo.cs: New file; Friendly wrapper over file information.
	* PosixFileSystemInfo.cs: New file; Friendly wrapper over `stat'.
	* PosixGroup.cs: New file; User Group-related functionality
	* PosixGroupInfo.cs: New file; User Group-related functionality
	* PosixIOException.cs: New file; Exception for POSIX-generated exceptions.
	* PosixMarshal.cs: New file; utility functions for marshaling, etc.
	* PosixProcess.cs: New file; Friendly wrapper over process information.
	* PosixStream.cs: New file; Friendly wrapper over file descriptors.
	* PosixSymbolicLinkInfo.cs: New file; Friendly wrapper over symbolic links.
	* PosixUser.cs: New file; Friendly wrapper over user information.
	* PosixUserInfo.cs: New file; Friendly wrapper over user information.
	* Stdlib.cs: New file; C standard library exports.
	* Syscall.cs: Effective re-write.  
	  - Organize exports by header file
	  - add additional enumerations (Error for the E* error values, etc.)
	  - always explicitly specify enumeration underlying type
	  - Use a new wrapping infrastructure so that ABI-stable types are exported
	  	- For example, size_t is exported as ulong, not IntPtr.
	  - Wrap more functions, and wrap them better (such as getpwnam).
	  - This release is NOT backward compatible.  Many names are the same, and
	    hopefully they're still compatible, but no effort was made to maintain
	    compatibility.  For example, FileMode was removed and replaced with
	    FilePermissions, to avoid a name conflict with System.IO.FileMode.
		- Change umount() to use MonoPosixHelper: portability fix for Mac OS X.
	* make-map.cs: Another effective re-write, to clean up the code, produce
	  better output, and produce more output.  For example, most of
	  PosixConvert can be auto-generated, so it is (modulo version delays and
	  bootstrap issues).  `map.c' is now conditional on all macros, and has
	  error checking for invalid/unsupported values.

2004-09-18  Jackson Harper  <jackson@ximian.com>

	* Syscall.cs: Add support for poll ().

2004-09-18  Jackson Harper  <jackson@ximian.com>

	* make-map.cs: Use field value not name for #defines.
		
2004-09-14  Loren Bandiera <lorenb@mmgsecurity.com>

	* Syscall.cs: Added method for getpwnam which uses Passwd
	struct.
	* macros.c: Helper function for getpwnam
	(In committing, Josh Tauberer also added getpwuid.)

2004-07-09  Dick Porter  <dick@ximian.com>

	* PeerCred.cs: Get the unix socket peer credentials.

2004-05-26  Miguel de Icaza  <miguel@ximian.com>

	* Syscall.cs: Do not let the runtime handle strings, as we do not
	own those strings, we must transform the char * into a string
	ourselves. 

2004-05-03  Miguel de Icaza  <miguel@ximian.com>

	* Syscall.cs: Add symlink

2004-04-19  Miguel de Icaza  <miguel@ximian.com>

	* Syscall.cs: Use hex values for FileMode, since C# does not have
	an octal integer mode.

2004-03-30  Joshua Tauberer <tauberer@for.net>

	* Added readlink, strerror, opendir, readdir, closedir
	* Added Mono.Posix.Stat.UnixToDateTime(long unixtime) --> DateTime

2004-03-11  Joshua Tauberer <tauberer@for.net>

	* Syscall.cs: Removed argument to getgid that shouldn't be there.
		Added getusername, getgroupname which wrap getpwuid, getgrgid
		without dealing with pointers to structures.
		Removed duplicate FileMode enum nested in Syscall class.
		Added stat and lstat, which use StatMode enumeration
		(like FileMode but nicer and complete) and Stat struct.
	* macros.c: Helper functions for getpwuid, getgrgid, stat, lstat.

2004-01-07  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Syscall.cs: moved the assembly attribute to a proper place
	and added 'signal.h'
	* make-map.cs: use reflection to invoke the properties, as it
	fails under MS runtime.
	

2004-01-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Syscall.cs: moved assembly attribute and added unsafe block to fix
	the build on windows.

2003-11-11  Wojciech Polak <polak@gnu.org

	* Syscall.cs: Applied patch from Wojciech Polak <polak@gnu.org> to
	support IsAtty.

2003-05-16  Dick Porter  <dick@ximian.com>

	* UnixEndPoint.cs: New property to get and set the filename, like
	the IPEndPoint has for the IP address.  Also implement ToString().

Tue Apr 29 16:53:56 CEST 2003 Paolo Molaro <lupus@ximian.com>

	* Syscall.cs: remove the unsafe mess.

2003-02-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Check in.
	* UnixEndPoint.cs: first file.

