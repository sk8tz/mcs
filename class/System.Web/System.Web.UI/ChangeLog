2002-08-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/ApplicationFileParser.cs:
	* System.Web.UI/BaseParser.cs:
	* System.Web.UI/PageParser.cs:
	* System.Web.UI/TemplateControl.cs:
	* System.Web.UI/TemplateControlParser.cs:
	* System.Web.UI/TemplateParser.cs: first steps to move xsp into
	System.Web.

2002-07-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: request to render postback script can be after form started
	rendering.

2002-07-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: added more page events to invoke automagically if some
	methods are defined.

2002-07-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(SaveViewState): save state even when control is not visible.
	(SaveViewStateRecursive):
	(LoadViewStateRecursive): made internal.

2002-07-21  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: improved event raising to allow client postback for a wider
	variety of actions (clicking an hyperlink, ...).

2002-07-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* UserControl.cs: implemented Load/SaveViewState.

2002-07-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AttributeCollection.cs:
	(Add): handle 'style' through styleCollection.

	* CssStyleCollection.cs:
	(fillStyle): renamed to FillStyle and made it internal.

	* Page.cs:
	(GetViewStateString): fixed, broken after other recent changes.
	(ProcessPostData): allow a second try for postback data after OnLoad.
	(ProcessRequest): clear controls collection, removed call to 
	UnloadRecursive.

2002-07-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: uncommented Dispose.

	* Page.cs:
	(DeterminePostBackMode): more checkings.
	(GetPostBackClientHyperLink): implemented.
	(GetPostBackEventReference): added some comments with the HTML that MS
	generates for that.
	(ProcessRequest): fixed processing order. The page is unloaded after
	a request and regenerated from view state on subsequents posts.

2002-07-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: fixed related to ViewState. Added RemovedControl.

	* ControlCollection.cs: notify owner of control removal.
	
	* CssStyleCollection.cs: almost rewritten to make it render the style
	attribute after changes to it.

	* Page.cs: follow the guidelines in 'Control execution lifecycle'.
	Removed Xml code.

	* StateBag.cs: don't use IDictionary.GetEnumerator on the
	HybridDictionary: it makes the program give an InvalidCastException at
	runtime. Why?

2002-07-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: fire Init and Load events for all children.

2002-07-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* UserControl.cs: New file.

2002-07-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ControlBuilderAttribute.cs: finished implementation.

2002-07-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ConstructorNeedsTagAttribute.cs: the default constructor sets the
	property to false.

2002-07-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/AttributeCollection.cs: added CssStyleCollection.

	* System.Web.UI/CssStyleCollection.cs: use a StateBag instead of a
	Hashtable. Added internal .ctor.

	* System.Web.UI/DataBinding.cs: propertyType is a Type. Implemented
	Equals and GetHashCode.

	* System.Web.UI/DataBoundLiteralControl.cs:
	(LoadViewState):
	(SaveViewState): implemented.

	* System.Web.UI/Page.cs: FileDependencies is not public.

	* System.Web.UI/ParseChildrenAttribute.cs: give a value to Default.
	(GetHashCode):
	(Equals):
	(IsDefaultAttribute): implemented.

2002-07-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: fixed Visible property.
	* Page.cs: fixed GetViewStateString.

2002-07-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/Page.cs:
	(GetViewStateString): new function to give the server access to the
	generated view state string.
	(Validate): d'oh!

2002-07-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(SaveViewstateRecursive): implemented.
	(SaveViewState): fixed.
	(IParserAccessor.AddParsedSubObject): don't use 'this'.

	* Page.cs: added code to save view state to an xml file.  It's not
	being used right now.

2002-06-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/LiteralControl.cs: 
	Fixes based on class status page:
	
		- Add attributes (DefaultEvent, ParseChildren).
		- Fix declarations.
		- Explicitly implement some interfaces (IPostBackDataHandler
		and IPostBackEventHandler).
		- Implemented some missing methods.

2002-06-29  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: reimplemented FindControls.

	* Page.cs:
	(.ctor): set the page for this control.
	(IsPostBack): return valid value.
	(DeterminePostBackMode): finished.
	(OnFormRender): render __VIEWSTATE (uses GetTypeHashCode()).
	(ProcessPostData): implemented. Raises change and postback events.
	(ProcessRequest): changed to support reuse of the instance.
	(RegisterRequiresPostBack): implemented.

	* ValidatorCollection.cs: implemented all methods.

2002-06-25  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	* Page.cs: first attemp to save view state.

	* HtmlForm.cs: don't render Action.

2002-06-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: implemented more properties using information we already
	have in Context.
	(OnFormRender):
	(OnFormPostRender):
	(VerifyRenderingInServerForm): implemented.

2002-06-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: changed InvokeEventMethod to use a GetMethod that works with
	out runtime. Renamed Page_Init and Page_Load.

	After this, we can load a dll and render HTML in linux.

2002-06-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(AddedControl): new function that is called whenever a control is
	added to a collection of controls in a container. It sets the defaults
	except for Page.
	
	* ControlCollection.cs: call AddedControl in Add/AddAt.

	* DataBoundLiteralControl.cs: implemented constructor, Text, Render,
	SetStaticString and SetDataBoundString.

	* Page.cs: removed SetDefaults.

2002-06-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CompiledTemplateBuilder.cs: new file. Used in the code generated
	by xsp.

	* Control.cs:
	(BindingContainer): implemented.
	(EnsureChildControls): avoid stack overflow.

	* DataBinder.cs: implemented Eval and PropertyValue.

2002-06-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* HtmlTextWriter.cs: fixed style attributes rendering (almost the same
	bug as in regular attributes).

2002-06-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: implemented PreventAutoID.

	* Page.cs:
	(SetDefaults): don't set ID automatically if Control.PreventAutoID has
	been called.

2002-06-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs:
	(Validators): if the collection is null, create one.
	(GetPostBackEventReference 2): don't throw exception.
	(GetPostBackClientEvent): return a string with containing the method
	name, the control name and the argument.

2002-06-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: SetPage is now called SetDefaults and also sets a default 
	ID for controls that don't have one yet.

2002-06-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs:
	(GetPostBackClient):
	(RegisterRequiresPostBack): don't throw NotImplementedException to
	keep going.
	(ProcessRequest): set the current page as the Page property for *all*
	the controls, not just the direct children of the page.

2002-06-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(MapPathSecure): until security is implemented, return the same path
	received as argument.
	(RenderControl): call OnPreRender before rendering the control. So
	AdRotator can read its configuration file.Is there any other place
	where this should be done?

	* HtmlTextWriter.cs:
	(AddAttribute): fixed. Now it really stores attributes.
	(RenderBeginTag): fixed a couple of bugs (little ones but hard to find).

2002-06-09  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ControlCollection.cs:
	(AddAt): if index is -1 behave as a plain Add.

2002-06-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: for each child control to render, assign Control.Page.
	Probably also needed in HtmlContainerControl derived classes.
	
2002-06-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AttributeCollection.cs: don't need a Hastable. StateBag now works 
	fine and takes care of the details.

	* Control.cs: added HasChildren property.

	* StateBag.cs: fixed a couple of nasty bugs.

2002-06-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: run OnInit, OnLoad y PreRender before rendering the page.
	Invoke Page_Init and/or Page_Load if the user supplied them (though 
	this should depend on AutoEventWireUp attribute of Page directive).

2002-06-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: don't throw exception in ControlID. By now, it returns ID.

	* Page.cs: 
	(ProcessRequest): implemented.

2002-06-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/Page.cs: finished stubbing out. Implemented some
	methods.

2002-06-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs:
	(FileDependencies): now is public public.
	(EnableViewStateMAC): uncommented and made protected. 
	(GetTypeHashCode): added method.
	
2002-05-24  Duncan Mak  <duncan@ximian.com>

	* TemplateControl.cs (SetStringResourcePointer): Fixed typo.

	* StateBag.cs (Item): Changed the visibility level of the this
	[object] indexer.

	Misc. formatting edits, fixing some bugs introduced by the indentation.

	* DataBinder.cs (Eval)
	(GetIndexedPropertyValue)
	(GetPropertyValue): Fixed return types.

2002-05-21  Miguel de Icaza  <miguel@ximian.com>

	* HtmlTextWriter.cs: Use this to change the member instances.

2002-05-17  Duncan Mak  <duncan@ximian.com>

	* AttributeCollection.cs: 
	* ControlCollection.cs: 
	* CssStyleCollection.cs: 
	* DataBindingCollection.cs: 
	* EmptyControlCollection.cs: Added missing Collection classes.

2002-05-17  Duncan Mak  <duncan@ximian.com>

	* BaseParser.cs:
	* TemplateParser.cs:  Implemented. BaseParser is weird because
	there is no documentation on what it does.

	* ControlBuilder.cs:
	
	* DataBinder.cs: 
	* DataBinding.cs: Added. 

	* DataBoundLiteralControl.cs: 
	* Triplet.cs: Added.

	* RenderMethod.cs: Added this delegate for Control.cs

2002-05-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ValidationPropertyAttribute.cs: a couple of fixes to make it compile.

2002-05-14  Duncan Mak  <duncan@ximian.com>

	* ValidationPropertyAttribute.cs: Added to CVS.

2002-05-10  Duncan Mak  <duncan@ximian.com>

	* ConstructorNeedsTagAttribute.cs: 
	* ControlBuilderAttribute.cs: 
	* ImageClickEventArgs.cs: 
	* ParseChildrenAttribute.cs: 
	* PartialCachingAttribute.cs: 
	* PersistChildrenAttribute.cs: 
	* PersistenceModeAttribute.cs: 
	* TemplateContainerAttribute.cs: Added to CVS.

	* PersistanceMode.cs: Removed, fixed typo.
	* PersistenceMode.cs: Replacing above.

	* StateBag.cs (this): Fixed indexer, it takes a string as the
	index, not an object.

	* ValidatorCollection.cs: Fixed typo, ValidatedCollection to ValidatorCollection. 

	* Page.cs (Validators): return type should be ValidatorCollection,
	not ValidatedCollection.

	* TagPrefixAttribute.cs: Added to CVS.

2002-05-07  Duncan Mak  <duncan@ximian.com>

	* Utils.cs (GetClientValidatedEvent): Uncommented the 'Page' argument.

2002-03-26   Gaurav Vaish <gvaish@iitk.ac.in>

        * DataBindingHandlerAttribute.cs
                                   - Completed
        * ToolboxDataAttribute.cs  - Completed

2002-01-03  Nick Drochak  <ndrochak@gol.com>

	* DesignTimeParseData.cs: initialze static member to avoid compile
	error
	* PropertyConverter.cs: remove uneeded exception variables from
	catch blocks.

2002-01-02  Nick Drochak  <ndrochak@gol.com>

	* DesignTimeParseData.cs: fix header to show correct class name

2001-12-21   Gaurav Vaish <gvaish@iitk.ac.in>

        * StateBag.cs             - Completed

2001-12-19   Gaurav Vaish <gvaish@iitk.ac.in>

        * Pair.cs                 - Small undocumented class. Completed.

2001-12-18   Gaurav Vaish <gvaish@iitk.ac.in>

        * DesignTimeParseData.cs  - Initial implementation
        * StateBag.cs             - Initial implementation

2001-12-17   Gaurav Vaish <gvaish@iitk.ac.in>

        * PropertyConverter.cs    - Undocumented class. Completed.
        * Utils.cs                - Undocumented, private class.
				    Initial implementation

2001-08-28  Bob Smith  <bob@thestuff.net>
        * Control.cs: Figured out some undocumented API.
        * Added TODO.
        * BuildMethod.cs: Initial implementation.
        * BuildTemplateMethod.cs: Initial implementation.
        * HtmlTextWriterAttribute.cs: Initial implementation.
        * HtmlTextWriterStyle.cs: Initial implementation.
        * HtmlTextWriterTag.cs: Initial implementation.
        * IAttributeAccessor.cs: Initial implementation.
        * IDataBindingsAccessor.cs: Initial implementation.
        * ImageClickEventHandler.cs: Initial implementation.
        * INamingContainer.cs: Initial implementation.
        * IParserAccessor.cs: Initial implementation.
        * IPostBackDataHandler.cs: Initial implementation.
        * IPostBackEventHandler.cs: Initial implementation.
        * IStateManager.cs: Initial implementation.
        * ITagNameToTypeMapper.cs: Initial implementation.
        * ITemplate.cs: Initial implementation.
        * IValidator.cs: Initial implementation.
        * OutputCacheLocation.cs: Initial implementation.
        * PersistanceMode.cs: Initial implementation.
        * StateItem.cs: Initial implementation.

2001-08-27  Bob Smith  <bob@thestuff.net>

        * Control.cs: Bug fixes and implementations.

2001-08-24  Bob Smith  <bob@thestuff.net>

        * Control.cs: Bug fixes.

2001-08-23  Bob Smith  <bob@thestuff.net>

        * Control.cs: More implementation. Events reworked for performance.

2001-08-22  Bob Smith  <bob@thestuff.net>

        * LiteralControl.cs: Implemented.
        * Control.cs: Even more implementation (Events). What a beast.

2001-08-20  Bob Smith  <bob@thestuff.net>

        * Control.cs: More implementation. Not done yet. Shutter.

2001-08-17  Bob Smith  <bob@thestuff.net>

        * Control.cs: Partial implementation.
