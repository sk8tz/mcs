2004-06-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	* Html32TextWriter.cs:
	* HtmlTextWriter.cs:
	* SimpleWebHandlerParser.cs:
	* TemplateControl.cs: Added protected missing members and attributes.

2004-06-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ObjectStateFormatter.cs: use ObjectFormatter methods instead of
	calling a protected method of another object.

2004-06-03  Atsushi Enomoto  <atsushi@ximian.com>

	* ObjectStateFormatter.cs : csc build fix. Protected Read()/Write()
	  (of other objects) are called in TypeConverterFormatter.

2004-06-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ObjectStateFormatter.cs: before choosing the binary formatter, check
	if the object type has a TypeConverter that can convert to/from string.
	Fixes bug #59495.

	* Page.cs: call GetViewStateString from outside the WriteLine. This
	allows writing to the Response when getting the string without breaking
	the HTML generated.

2004-06-02  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* HtmlTextWriter.cs: render end tag for unknown tags.
	Patch frmo Markus Kräutner. Fixes bug #59466.

2004-05-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: call DeterminePostBackMode only once per request. Patch by
	Evain Jb.

2004-05-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Html32TextWriter.cs: stub contributed by Matthijs ter Woord
	[meddochat].

	* ObjectTagBuilder.cs: remove the HasBody override as MS does not have
	that.

2004-05-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SimpleWebHandlerParser.cs:
	* TemplateParser.cs: for the assembly names given in the 'assembly'
	attribute, use LoadWithPartialName instead of Load.
2004-03-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: return HttpContext.Current if _context has not yet been
	assigned to. Fixes bug #55245.

2004-03-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateParser.cs: don't add import statement or assemblies from
	global.asax to every file. Fixes bug #55496.

2004-03-09  Juraj Skripsky <juraj@hotfeet.ch>

	* DataBinder.cs: allow unquoted string expressions (e.g. "[test]") and
	handle single quotes and a few corner cases correctly (see test cases).

2004-03-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControl.cs: fixed typos and added new method names to the set
	of page events.

2004-02-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ControlBuilder.cs: added SetTagName().

	* ObjectTagBuilder.cs: use SetTagName so that we can properly close
	<object> builders if the closing tag is provided.

2004-02-16  Jackson Harper <jackson@ximian.com>

	* Page.cs: Set cacheability for Location.DownStream.
	
2004-02-10  Jackson Harper <jackson@ximian.com>

	* TemplateParser.cs: Use full path if the assembly is in the
	private bin directory. Patch by Gonzalo Paniagua Javier.
	
2004-02-09  Jackson Harper <jackson@ximian.com>

	* Page.cs: Set cacheability for server side caching.
	
2004-01-30  Jackson Harper <jackson@ximian.com>

	* Control.cs: Ensure that dynamically loaded controls are
	initialized.
	
2004-01-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ApplicationFileParser.cs: check for error in directives. Use
	GlobalAsaxCompiler.CompileApplicationType for compiling.
	
	* ObjectTagBuilder.cs: load the Type and check for errors.

	* TemplateParser.cs: add assemblies and imports from global.asax.

	Now we properly create accessors for session and application objects in
	the application itself, pages and controls. First step for fixing
	bug #53387.

2004-01-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControl.cs: small speedup for WireUpautomaticEvents. Thanks
	to Eric Lindvall for pointing this out.

2004-01-15  Jackson Harper <jackson@ximian.com>

	* TemplateParser.cs: Detect if we are parsing a control or page
	properly.
	* Page.cs: vary by params and vary by headers can be null now.
	
2004-01-15  Martin Willemoes Hansen  <mwh@sysrq.dk>

	* HtmlTextWriter.cs: Fixed OutputTab routine to generate correct
	indention.

2004-01-14  Jackson Harper <jackson@ximian.com>

	* Page.cs: If we have a postback that wasn't sent through a
	postback script (ie user hit submit on a input type=submit) call
	Validate so page validation occurs. This fixes bug #52770.
	
2004-01-14  Jackson Harper <jackson@ximian.com>

	* Page.cs: Don't tell the response to cache anymore. This is done
	when the cacheability is modified by a callback. Set the cache's
	duration.
	
2004-01-14  Jackson Harper <jackson@ximian.com>

	* TemplateParser.cs: If varybyparam is set to "none" make it null
	so we dont get a param named null in the outputcache key.
	
2004-01-14  Jackson Harper <jackson@ximian.com>

	* BasePartialCachingControl.cs: Use varyby attributes in key
	generation.
	
2004-01-14  Jackson Harper <jackson@ximian.com>

	* TemplateParser.cs: Add all the outputcache attribute error
	messages.
	
2004-01-13  Jackson Harper <jackson@ximian.com>

	* TemplateParser.cs: Add VaryByControls and Shared output cache
	properties. These are not assigned yet.
	* TemplateControlParser.cs: Do not ignore the OutputCache
	attribute.
	* BasePartialCachingControl.cs: Initial implementation. Keys are
	still not created properly.
	* StaticPartialCachingControl.cs: Assign properties in base class,
	implement CreateControl.
	
2004-01-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ApplicationFileParser.cs: adde DefaultBaseTypeName property.

	* PageParser.cs: support validateRequest.

	* TemplateControlParser.cs: get default values from system.web/pages
	section.

	* TemplateParser.cs: added separate method for changing base type
	(Inherits or system.web/pages).
	
	* UserControlParser.cs: support system.web/pages defined base type.

2004-01-11  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* UserControl.cs: Added missing attribute, implemented method
	* Page.cs: Added missing attribute, implemented method

2004-01-10  Jackson Harper <jackson@ximian.com>

	* Page.cs: Handle trace being enabled in the config file.
	
2004-01-10  Jackson Harper <jackson@ximian.com>

	* Page.cs: Save trace data before rendering it.
	* System.Web.dll.sources: Add TraceData.cs
	
2004-01-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: removed a couple of MonoTODO on methods we're not gonna
	implement. Applied patch from Jan Jaros (mono-bug@jerryweb.info) to
	ensure that Unload event is raised. Fixes bug #52555.

2004-01-02  Zoltan Varga  <vargaz@freemail.hu>

	* KeyedList.cs: 'private' is not allowed on explicit interface 
	implementations. Fixes 1.2 build.

2003-12-31  Jackson Harper <jackson@ximian.com>

	* TemplateControlParser.cs: When registering tag prefixs make sure
	the file exists and throw the correct error if it does not.
	
2003-12-25  Jackson Harper <jackson@ximian.com>

	* Page.cs: Throw error if the session is accessed when sessions
	are disabled.
	
2003-12-18  Jackson Harper <jackson@ximian.com>

	* Page.cs: Write Trace info.
	
2003-12-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* LosFormatter.cs: new ctor for 1.1. The default ctor is public.
	* Page.cs: added ViewStateUserKey and made RegisterclientScriptFile
	internal.
	* PageParser.cs: the ctor is public.
	* PartialCachingAttribute.cs: added new ctor and Shared property.

2003-12-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: assign the ErrorPage to the context if we get an exception
	when processing the page which only calls Unload.

	* PageParser.cs: handle ErrorPage.

2003-12-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ObjectStateFormatter.cs: added formatters for Unit and FontUnit, which
	are not [Serializable]. Fixes bug #52244.

2003-12-16  Jackson Harper <jackson@ximian.com>

	* Page.cs: Render trace data when tracing is enabled.
	
2003-12-15  Jackson Harper <jackson@ximian.com>

	* PageParser.cs: Add Trace and Trace mode attributes.
	
2003-12-15  Jackson Harper <jackson@ximian.com>

	* Page.cs: Use the context trace object.
	
2003-12-14  Alon Gazit <along@mainsoft.com>
	* AttributeCollection.cs: Changed AttributeCollection.Render().
	After the change attributes ,that their value is null, aren't 
	rendered.

2003-12-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: remove a few dangling ^M, don't set values for fields
	that has the default value. If Visible is modified and we're tracking
	viewstate, save and restore it. Fixes bug #48689.

2003-12-11  Jackson Harper <jackson@ximian.com>

	* Control.cs: Give null for the ID if it hasn't been explicitly
	set. This fixes bug #51520.
	
2003-12-08  Jackson Harper <jackson@ximian.com>

	* PageParser.cs: Ignore the SmartNavigation attribute for now.
	
2003-12-05  Jackson Harper <jackson@ximian.com>

	* DataBinder.cs (GetIndexedPropertyValue): Check if container is
	an IList and use a cast instead of reflection to retrieve the item
	if it is. Fixes bug #51759.
	
2003-12-04  Alon Gazit <along@mainsoft.com>
	* Page.cs: Changed Page.ID so it will call Control.ID.
	Fixed Bug 51682.	  

2003-12-02  Jackson Harper <jackson@ximian.com>

	* Page.cs: Implemented registered array declarations. Patch by
	Benjamin Jemlich <pcgod@gmx.net>
	
2003-12-02  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateParser.cs: basic check for 'classname' attribute and added
	patch by pcgod@gmx.net for bug #51568, which fixes automatic class
	names for pages starting with a number.

2003-11-30 Ben Maurer  <bmaurer@users.sourceforge.net>

	* LosFormatter.cs: Use ObjectStateFormatter. Pretty big size
	reduction.

	* ObjectStateFormatter.cs: Comment out tracing.

2003-11-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: fixed UICulture, LCID and Culture. Set the thread
	[UI]Culture before processing the request.

	* PageParser.cs: read Culture, UICulture and LCID attributes. Added
	properties for these. Partially contributed by Mohammad Damt.

	Fixes bug #51511.

2003-11-27  Jackson Harper <jackson@ximian.com>

	* TemplateParser.cs: Ignore aspCompat attribute. This fixes bug
	51434.
	
2003-11-22 Ben Maurer  <bmaurer@users.sourceforge.net>

	* ObjectStateFormatter.cs: Fix bug when reading small ints.
	Add some tracing so we can see what is going on.

2003-11-21  Jackson Harper <jackson@ximian.com>

	* Page.cs: Set vary by params when cache location is Server.
	
2003-11-21 Ben Maurer  <bmaurer@users.sourceforge.net>

	* ObjectStateFormatter.cs: v2 file. In v1.x this will be
	internal as LosFormatter will eventually use it to save
	the view state.

2003-11-21  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PersistChildrenAttribute.cs:
	* PersistenceModeAttribute.cs: implemented.

	* TODO: Removed file.
	* OutputCacheLocation.cs:
	* TemplateControlParser.cs:
	* HtmlInputFile.cs: class status based fixes.

2003-11-19  Jackson Harper <jackson@ximian.com>

	* Page.cs: Always set the cache expire time. Tell the response to
	cache itself for server side cached pages.
	
2003-11-19  Jackson Harper <jackson@ximian.com>

	* Control.cs: Remove ResolveBaseUrl. ResolveUrl does the same
	thing, some corner cases still need work though. Was this the
	shortest lived method in the history of mono?
	
2003-11-19  Jackson Harper <jackson@ximian.com>

	* Control.cs: New method for resolving urls that use ~/ to denote
	the applications base directory.
	
2003-11-19  Jackson Harper <jackson@ximian.com>

	* TemplateParser.cs: Fix typo in error message.
		
2003-11-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlParser.cs: support @Reference. Fixes bug #49572. Thanks
	to Sanjay Gupta.

2003-11-19  Todd Berman  <tberman@gentoo.org>

	* KeyedList.cs:
	* KeyedListEnumerator.cs: New v2 implementations.

2003-11-17 Ben Maurer  <bmaurer@users.sourceforge.net>

	* StateManagedCollection.cs: Implement.

2003-11-13  Jackson Harper  <jackson@ximian.com>

	* Page.cs: Initial implementation of InitOutputCache.
	* TemplateParser.cs: Page OutputCache options
	
2003-11-09 Ben Maurer  <bmaurer@users.sourceforge.net>

	* HierarchicalDataSourceControl.cs: Implement.

2003-11-09 Ben Maurer  <bmaurer@users.sourceforge.net>

	* XPathBinder.cs: Implemented.

2003-11-08 Ben Maurer  <bmaurer@users.sourceforge.net>

	* DataSourceView.cs:
	* IDataSource.cs:
	* ListSourceHelper.cs:
	* DataSourceControl.cs:
	* HierarchicalDataSourceView.cs:
	* IHierarchicalDataSource.cs: Move v2 stuff.

2003-11-07 Jackson Harper <jackson@ximian.com>

	* Control.cs (ResolveUrl): Special case for urls that consist of
	only a page anchor. ie <a href="#top">. This fixes bug #50165.
	
2003-11-07 Ben Maurer  <bmaurer@users.sourceforge.net>

	* IHierarchicalEnumerable.cs:
	* IHierarchyData.cs:
	* INavigateUIData.cs: New v2 interfaces.
	
2003-11-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: patch by Alon Gazit <along@mainsoft.com> to remove extra
	space in generated javascript.

2003-11-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* LosFormatter.cs: encoding updates. 
	* Page.cs: implemented CodePage and ContentType.
	* PageParser.cs: handle CodePage, ContentEncoding and ResponseEncoding
	attributes.

2003-11-04 Ben Maurer  <bmaurer@users.sourceforge.net>

	* Control.cs (GetWebResourceUrl): new v2 function
	* Page.cs (GetWebResourceUrl): ditto.
	make the JS we generate work with moz if the form is not a child
	of document.
	* WebResourceAttribute.cs: Added, new v2 attribute.

2003-10-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DesignTimeTemplateParser.cs: added FIXME related to PageParser.

	* PageParser.cs: initialize the parser in the constructor, not just
	before compiling and reference the application assembly.

	* SimpleWebHandlerParser.cs: reference the assembly that contains the
	application Type.

	* TemplateControl.cs:
	* TemplateControlParser.cs: fix BenM #1 bug. Now we pass correct virtual
	path and physical path when compiling a user control.
	
	* TemplateParser.cs: new AddApplicationAssembly ().
	* UserControlParser.cs: now we get valid values in the ctor.

	Referencing the application assembly fixes bug #49652.
	

2003-10-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControl.cs: moved NoParamsInvoker class to its own file.

2003-10-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseParser.cs: added CompilationConfig property.

	* TemplateParser.cs:
	* SimpleWebHandlerParser.cs: added CompilationConfig property.
	Don't hardcode assembly names any more, assemblies in bin are added
	depending on the configuration. The default language is also taken
	from the configuration.

2003-10-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* LosFormatter.cs: fixed bug #49604. Patch by yaronsh@mainsoft.com.

2003-10-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: removed some debug lines.
	* Page.cs: implemented RegisterOnSubmitStatement
	* TemplateControl.cs: fixed wire up for methods with no parameters.

2003-10-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageParser.cs: ignore ValidateRequest by now.

2003-10-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/TemplateControl.cs: support for wiring up events without
	parameters.

2003-10-08  Pedro Martínez Juliá  <yoros@wanadoo.es>

	* PageParser.cs: drop some useless code.

2002-10-29  Gaurav Vaish <gvaish_mono AT lycos.com>

	* Utils.cs   : GetScriptLocation(HttpContext) - Partial Implementation.

2003-10-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/PageParser.cs:
	* System.Web.UI/TemplateControlParser.cs: honour the input file given
	as argument.

2003-09-29  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(ClearChildViewState): doh! Don't clear control viewstate but the
	viewstate of possible children.
	(LoadViewStateRecursive): load viewstate even when control is not
	visible.
	Fixes bug #49024.
	The rest are just dangling ^M removed.

	* DataBoundLiteralControl.cs:
	(LoadViewState): we get an object [], not a string [].

2003-09-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: implemented ClearChildViewState ().

2003-09-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: store unique IDs for controls requiring postback. Fixes bug
	#47985.

2003-09-21  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SimpleWebHandlerParser.cs: add the ashx/asmx file itself to the
	dependencies so that it's recompiled when changed.

2003-09-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* LosFormatter.cs: fixed Deserialize for empty viewstate.

2003-08-26  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: check if controls that require postback have
	been changed by an event and register them to be notified of data
	changed event.

2003-08-26  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: patch by yaronshkop@hotmail.com (Yaron Shkop) that fixes
	bug #47866.

2003-08-21  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* LosFormatter.cs: handle Unit and FonrUnit as special cases as they
	are not serializable. Fixes bug #47784.

2003-08-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: index the viewstates saved by the control position, not
	the control name. Fixes bug #47697.

2003-08-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ControlCollection.cs:
	* EmptyControlCollection.cs: create a minimum ArrayList for this.

	* BaseParser.cs: added setter for BaseVirtualDir.

	* Page.cs: fixed message when restoring view state fails.
	* UserControlParser.cs: set the BaseVirtualDirectory to handle the case
	when a relative path to the control is given. Fixes bug #47685.

2003-08-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: when we load the viewstate for a control that has children
	viewstates and the child is not found, keep its viewstate around and
	wait until the child is added to load the viewstate. Fixes bug #47697.

2003-08-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControl.cs: more Delegate.CreateDelegate fixes.

2003-08-01  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* PartialCachingControl.cs: is not abstract

2003-08-01  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SimpleHandlerFactory.cs: implemented GetHandler.
	* WebHandlerParser.cs: new file that parses .ashx files.

2003-07-30  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* PersistenceModeAttribute.cs: Fixed wrong AttributeUsage

2003-07-30  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* UserControl.cs: Added attribute
	* BasePartialCachingControl.cs: New class and paritally implemented
	* DesignerDataBoundLiteralControl.cs: New class and implemented
	* DesignTimeTemplateParser.cs:
	* PartialCachingControl.cs:
	* StaticPartialCachingControl.cs: New class and paritally implemented

2003-07-27  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* ApplicationFileParser.cs: Fixed signature
	* DesignTimeParseData.cs: Added missing properties, implemented
	* Page.cs: Added attributes
	* PageParser.cs:
	* TemplateControlParser.cs:
	* TemplateParser.cs:
	* UserControlParser.cs: Fixed signature

2003-07-17  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* HtmlControlPersistableAttribute.cs: Added
	* IgnoreUnknownContentAttribute.cs: Added

2003-07-17  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* IUserControlDesignerAccessor.cs: Added and implemented
	* Control.cs: Missing member added, added all attributes
	* Page.cs: Added attributes, fixed signature
	* TemplateControl.cs: Fixed signature, added all attributes
	* UserControl.cs: Added all attributes, added and implemented missing interface
	
2003-07-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ControlCollection.cs: fixed bug #46472.

2003-07-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SimpleWebHandlerParser.cs: implemented GetTypeFromBin.

2003-07-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SimpleWebHandlerParser.cs: updated to new compilation interface.

	* TemplateParser.cs: use the new parameter when compiling.  

2003-07-01  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: also keep the value for the second try on handling postback
	events.

2003-05-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseParser.cs: fixed MapPath for non-rooted files.
	* PageParser.cs: don't pass a non-virtual file around.
	* TemplateControlParser.cs: InputFile uses MapPath now.  Take care of
	the exception teh may be throw by MapPath on an invalid path.

	* TemplateParser.cs: removed unused method.
	* UserControlParser.cs: modified inputfile. The result is the same, but 
	this one is better.

2003-05-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* RootBuilder.cs: throw exception when the tagprefix is not valid or
	not found.

2003-05-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlParser.cs: return after processing @Register.

2003-05-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateParser.cs: Added support for server side includes.

2003-05-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControl.cs: fixed the flags used to find the methods that
	are automatically hooked up on events.

	* TemplateParser.cs: don't compile a source file directly.  Use the
	cache instead.

2003-05-01  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseParser.cs: Location property is now here. Added a couple of
	convenience methods to throw a ParseException.

	* TemplateParser.cs:
	* TemplateControlParser.cs:
	* PageParser.cs: throw ParseException where appropiate.

2003-05-01  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ApplicationFileParser.cs: use the generator to actually parse the
	file.

	* ControlBuilder.cs: small fix in NamingContainerType because
	TemplateBuilders have a null ControlType. When a control is appended
	to a parent, assign the child's parent.

	* UserControlParser.cs: fixed the value of InputFile.

2003-04-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ApplicationFileParser.cs: store the Context and override
	BaseVirtualDir so that it's the application path.

	* BaseParser.cs: removed CurrentVirtualPath property.

	* TemplateControlParser.cs: use BaseVirtualDir.

	* UserControlParser.cs: removed CurrentVirtualPath.

2003-04-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateParser.cs: always reference all the assemblies in bin
	directory.

2003-04-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ApplicationFileParser.cs: it works now. Prior to these changes, we
	were using the compiler directly.

	* BaseParser.cs: added some useful properties and methods.

	* CodeBuilder.cs: use ILocation.
	* CodeRenderBuilder.cs: use ILocation.
	* CollectionBuilder.cs: use the RootBuilder to map tag names into Types.

	* ControlBuilder.cs: made it useful.

	* DataBindingBuilder.cs: the control type for data bound text is
	DataBoundLiteralControl now.

	* ObjectTagBuilder.cs: store some object tag attributes.

	* PageParser.cs: handle page-only directives.

	* RootBuilder.cs: bah.
	* SimpleWebHandlerParser.cs: made it dummy.
	* TemplateControl.cs: Modified file.

	* TemplateControlParser.cs: handle directives that are common to pages
	and user controls.

	* TemplateParser.cs: utility methods and handling of directives that
	are common to app, page and user controls.

	* UserControl.cs: added ControlBuilderAttribute.

	* UserControlControlBuilder.cs: builder for user controls.
	* UserControlParser.cs: use the new interfaces.

2003-04-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ControlBuilder.cs: line and fileName are protected now.

	* CodeBuilder.cs: base class for the next 2 files.
	* CodeRenderBuilder.cs: builder for code render.
	* DataBindingBuilder.cs: builder for data binding.

2003-04-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ITagNameToTypeMapper.cs: made it internal.

	* ObjectTagBuilder.cs: builder for <object runat="server"> tag.
	* ObjectTag.cs:
	* RootBuilder.cs: initial builder.

2003-04-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CollectionBuilder.cs:
	* TemplateBuilder.cs: new classes derived from ControlBuilder that
	represent a property or a ITemplate.
	
	* ControlBuilder.cs: implemented all the missing bits.
	* TemplateParser.cs: added mapping from tag name to Type feature.

2003-02-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: have i definitely fixed naming container stuff this time?

	* LosFormatter.cs: activated binary serialization code.

2003-02-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(AddedControl): fixed default id assignation when the sequence of
	AddedControl until it's included in the page or one of its controls
	does not pass through a naming container.

2003-02-09  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: give different default names depending on the place where
	it is assigned. Implemented ResolveURl (no more ~ rendered in
	attributes!).

2003-02-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: when adding a control, assign default names to th
	children that don't have one.

2003-02-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SimpleWebHandlerParser.cs: modified to use the new parser interface.

2003-01-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: some more tweaks to naming containers stuff.
	* DataBinder.cs: don't throw exception if the container is null.

	* Page.cs: now we can render client scripts, startup scripts and hidden
	fields. Only render __VIEWSTATE if there is someone that will take care
	of it.
	(RaisePostBackEvents): first try the last one that required raise event,
	then try __EVENTTARGET.

2003-01-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: fixes in UniqueID, FindControl, AddedControl,
	UnloadRecursive, InitRecursive. Reduced the size of __VIEWSTATE. Made
	FindControl work with NamingContainers.
	
	* ControlCollection.cs: notify the parent when clearing the collection.

	* LosFormatter.cs: Added debugging output and generate a valid
	viewstate even for unknown types.

	* Page.cs: GetPostBackEventReference now uses UniqueID. Reduced
	viewstate.

2003-01-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: make it fire the LoadData related events also for controls
	such as ImageButton, whose variable(s) in the query string are of the
	form ctrl_name.x and only fire them once per control.

2003-01-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DataBinder.cs:
	(GetPropertyValue): don't try to get the property as indexed

2003-01-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DataBinder.cs: use TypeDescriptor to get the properties and their
	values.

2003-01-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(AddedControl): take the children to the same state of the parent.
	(InitRecursive): set the page of the children.

	* Page.cs: removed one line (it's done a few lines above).

	* UserControl.cs:
	(OnInit): always call InitializeAsUserControl
	(InitializeAsUserControl): sets the page for the control.

2003-01-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: fixed bug #36037.

2002-12-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseParser.cs: a couple of path fixes to make it work
	when the page is not in the root directory.

2002-12-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: fixed PreRenderRecursiveInternal. Thanks to kojoadams for
	reporting the bug.

2002-12-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseParser.cs: use MapPath and context to locate files.
	* Control.cs: implemented MapPathSecure.
	* TemplateControl.cs: use UrlUtils to generate the path.
	* TemplateControlParser.cs: use the context and MapPath.
	* UserControl.cs: implemented MapPath.
	* UserControlParser.cs: added context parameter to constructor.

2002-12-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: implemented MapPathSecure.
	* Page.cs: fixed Server property.

2002-12-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DataBinder.cs: try the indexer if the property is not found in
	GetPropertyValue ().

2002-12-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: added AutoEventWireup internal property.

	* Page.cs: removed page events wire up from here.

	* TemplateControl.cs: new method WireupAutomaticEvents to hook up page
	and user controls events.

	* TemplateControlParser.cs: process the options that are applicable
	once we have the instance of the control.

	* TemplateParser.cs: also stores the options.

	* UserControl.cs: hook up events before initializing the control.


2002-12-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: new method to set bindingContainer value.
	* TemplateControl.cs: added controls are not binding containers.

2002-12-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: implemented TemplateSourceDirectory.
	* TemplateControl.cs: implemented LoadControl and LoadTemplate.

2002-11-27  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* UserControl.cs: fixed SetAttribute.
	* UserControlParser.cs: set the correct base type.

2002-11-26  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateParser.cs: fixed BaseType.
	* UserControlParser.cs: helper class to compile user controls.

2002-11-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* LosFormatter.cs: added DateTime to special types.

2002-11-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* LosFormatter.cs: added array serialization support. Disabled binary
	serialization and add some debugging code.

	* StateBag.cs: the length of the list of value can be less than the
	length if the list of keys when remaining values are null.

2002-11-07  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: return something useful in GetPostBackClientEvent.

2002-11-02  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: implemented FileDependecies and made it protected.

2002-10-31  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: save control names instead of the controls
	themselves to the ViewState.

	* LosFormatter.cs: added support for serializing unknown
	types. BinaryFormatter does not work so you better don't store anything
	of unknown Type in ViewState.

	* Page.cs: GetViewStateString works now using LosFormatter.
	Complete "Control execution lifecycle" by unloading all the child
	controls. Check for null in RaisePostBackEvents.
	LoadPageViewStateFromPersistenceMedium uses LosFormatter too.

2002-10-29  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* DataBinder.cs: implemented Eval and GetIndexedPropertyValue methods.

2002-10-27  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* LosFormatter.cs: Use WebEncoding.Encoding.

	* Control.cs:
	* Page.cs: fixed namespace.

2002-10-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: set the context in ProcessRequest. Added a few trace calls.
	* Control.cs: added some trace information.

2002-10-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SimpleHandlerFactory.cs: new handler for .ashx files.

2002-09-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/PageHandlerFactory.cs: new file.
	* System.Web.UI/PageParser.cs:
	* System.Web.UI/TemplateControlParser.cs: we are now able to compile
	pages and use HttpApplication, HttpRuntime and SimpleWorkerRequest.

2002-09-25  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: implemented ObBubbleEvent.
	* Page.cs: temporary workaround to make POST work with xsp server.

2002-09-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: fixed InvokeEventMethod now that Type.GetMethod does not
	return pvt methods.

2002-09-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SimpleWebHandlerParser.cs: New file.
	* WebServiceParser.cs: New file.

2002-08-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* LosFormatter.cs: almost fully implemented.

2002-08-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CompiledTemplateBuilder.cs: InstantiateIn is virtual.
	* EmptyControlCollection.cs: throw correct exception.
	* LosFormatter.cs: stubbed out.
	* OutputCacheLocation.cs: little fix.

2002-08-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/ApplicationFileParser.cs:
	* System.Web.UI/BaseParser.cs:
	* System.Web.UI/PageParser.cs:
	* System.Web.UI/TemplateControl.cs:
	* System.Web.UI/TemplateControlParser.cs:
	* System.Web.UI/TemplateParser.cs: first steps to move xsp into
	System.Web.

2002-07-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: request to render postback script can be after form started
	rendering.

2002-07-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: added more page events to invoke automagically if some
	methods are defined.

2002-07-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(SaveViewState): save state even when control is not visible.
	(SaveViewStateRecursive):
	(LoadViewStateRecursive): made internal.

2002-07-21  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: improved event raising to allow client postback for a wider
	variety of actions (clicking an hyperlink, ...).

2002-07-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* UserControl.cs: implemented Load/SaveViewState.

2002-07-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AttributeCollection.cs:
	(Add): handle 'style' through styleCollection.

	* CssStyleCollection.cs:
	(fillStyle): renamed to FillStyle and made it internal.

	* Page.cs:
	(GetViewStateString): fixed, broken after other recent changes.
	(ProcessPostData): allow a second try for postback data after OnLoad.
	(ProcessRequest): clear controls collection, removed call to 
	UnloadRecursive.

2002-07-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: uncommented Dispose.

	* Page.cs:
	(DeterminePostBackMode): more checkings.
	(GetPostBackClientHyperLink): implemented.
	(GetPostBackEventReference): added some comments with the HTML that MS
	generates for that.
	(ProcessRequest): fixed processing order. The page is unloaded after
	a request and regenerated from view state on subsequents posts.

2002-07-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: fixed related to ViewState. Added RemovedControl.

	* ControlCollection.cs: notify owner of control removal.
	
	* CssStyleCollection.cs: almost rewritten to make it render the style
	attribute after changes to it.

	* Page.cs: follow the guidelines in 'Control execution lifecycle'.
	Removed Xml code.

	* StateBag.cs: don't use IDictionary.GetEnumerator on the
	HybridDictionary: it makes the program give an InvalidCastException at
	runtime. Why?

2002-07-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: fire Init and Load events for all children.

2002-07-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* UserControl.cs: New file.

2002-07-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ControlBuilderAttribute.cs: finished implementation.

2002-07-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ConstructorNeedsTagAttribute.cs: the default constructor sets the
	property to false.

2002-07-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/AttributeCollection.cs: added CssStyleCollection.

	* System.Web.UI/CssStyleCollection.cs: use a StateBag instead of a
	Hashtable. Added internal .ctor.

	* System.Web.UI/DataBinding.cs: propertyType is a Type. Implemented
	Equals and GetHashCode.

	* System.Web.UI/DataBoundLiteralControl.cs:
	(LoadViewState):
	(SaveViewState): implemented.

	* System.Web.UI/Page.cs: FileDependencies is not public.

	* System.Web.UI/ParseChildrenAttribute.cs: give a value to Default.
	(GetHashCode):
	(Equals):
	(IsDefaultAttribute): implemented.

2002-07-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: fixed Visible property.
	* Page.cs: fixed GetViewStateString.

2002-07-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/Page.cs:
	(GetViewStateString): new function to give the server access to the
	generated view state string.
	(Validate): d'oh!

2002-07-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(SaveViewstateRecursive): implemented.
	(SaveViewState): fixed.
	(IParserAccessor.AddParsedSubObject): don't use 'this'.

	* Page.cs: added code to save view state to an xml file.  It's not
	being used right now.

2002-06-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/LiteralControl.cs: 
	Fixes based on class status page:
	
		- Add attributes (DefaultEvent, ParseChildren).
		- Fix declarations.
		- Explicitly implement some interfaces (IPostBackDataHandler
		and IPostBackEventHandler).
		- Implemented some missing methods.

2002-06-29  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: reimplemented FindControls.

	* Page.cs:
	(.ctor): set the page for this control.
	(IsPostBack): return valid value.
	(DeterminePostBackMode): finished.
	(OnFormRender): render __VIEWSTATE (uses GetTypeHashCode()).
	(ProcessPostData): implemented. Raises change and postback events.
	(ProcessRequest): changed to support reuse of the instance.
	(RegisterRequiresPostBack): implemented.

	* ValidatorCollection.cs: implemented all methods.

2002-06-25  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	* Page.cs: first attemp to save view state.

	* HtmlForm.cs: don't render Action.

2002-06-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: implemented more properties using information we already
	have in Context.
	(OnFormRender):
	(OnFormPostRender):
	(VerifyRenderingInServerForm): implemented.

2002-06-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: changed InvokeEventMethod to use a GetMethod that works with
	out runtime. Renamed Page_Init and Page_Load.

	After this, we can load a dll and render HTML in linux.

2002-06-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(AddedControl): new function that is called whenever a control is
	added to a collection of controls in a container. It sets the defaults
	except for Page.
	
	* ControlCollection.cs: call AddedControl in Add/AddAt.

	* DataBoundLiteralControl.cs: implemented constructor, Text, Render,
	SetStaticString and SetDataBoundString.

	* Page.cs: removed SetDefaults.

2002-06-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CompiledTemplateBuilder.cs: new file. Used in the code generated
	by xsp.

	* Control.cs:
	(BindingContainer): implemented.
	(EnsureChildControls): avoid stack overflow.

	* DataBinder.cs: implemented Eval and PropertyValue.

2002-06-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* HtmlTextWriter.cs: fixed style attributes rendering (almost the same
	bug as in regular attributes).

2002-06-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: implemented PreventAutoID.

	* Page.cs:
	(SetDefaults): don't set ID automatically if Control.PreventAutoID has
	been called.

2002-06-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs:
	(Validators): if the collection is null, create one.
	(GetPostBackEventReference 2): don't throw exception.
	(GetPostBackClientEvent): return a string with containing the method
	name, the control name and the argument.

2002-06-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: SetPage is now called SetDefaults and also sets a default 
	ID for controls that don't have one yet.

2002-06-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs:
	(GetPostBackClient):
	(RegisterRequiresPostBack): don't throw NotImplementedException to
	keep going.
	(ProcessRequest): set the current page as the Page property for *all*
	the controls, not just the direct children of the page.

2002-06-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs:
	(MapPathSecure): until security is implemented, return the same path
	received as argument.
	(RenderControl): call OnPreRender before rendering the control. So
	AdRotator can read its configuration file.Is there any other place
	where this should be done?

	* HtmlTextWriter.cs:
	(AddAttribute): fixed. Now it really stores attributes.
	(RenderBeginTag): fixed a couple of bugs (little ones but hard to find).

2002-06-09  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ControlCollection.cs:
	(AddAt): if index is -1 behave as a plain Add.

2002-06-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: for each child control to render, assign Control.Page.
	Probably also needed in HtmlContainerControl derived classes.
	
2002-06-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AttributeCollection.cs: don't need a Hastable. StateBag now works 
	fine and takes care of the details.

	* Control.cs: added HasChildren property.

	* StateBag.cs: fixed a couple of nasty bugs.

2002-06-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs: run OnInit, OnLoad y PreRender before rendering the page.
	Invoke Page_Init and/or Page_Load if the user supplied them (though 
	this should depend on AutoEventWireUp attribute of Page directive).

2002-06-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Control.cs: don't throw exception in ControlID. By now, it returns ID.

	* Page.cs: 
	(ProcessRequest): implemented.

2002-06-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.UI/Page.cs: finished stubbing out. Implemented some
	methods.

2002-06-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Page.cs:
	(FileDependencies): now is public public.
	(EnableViewStateMAC): uncommented and made protected. 
	(GetTypeHashCode): added method.
	
2002-05-24  Duncan Mak  <duncan@ximian.com>

	* TemplateControl.cs (SetStringResourcePointer): Fixed typo.

	* StateBag.cs (Item): Changed the visibility level of the this
	[object] indexer.

	Misc. formatting edits, fixing some bugs introduced by the indentation.

	* DataBinder.cs (Eval)
	(GetIndexedPropertyValue)
	(GetPropertyValue): Fixed return types.

2002-05-21  Miguel de Icaza  <miguel@ximian.com>

	* HtmlTextWriter.cs: Use this to change the member instances.

2002-05-17  Duncan Mak  <duncan@ximian.com>

	* AttributeCollection.cs: 
	* ControlCollection.cs: 
	* CssStyleCollection.cs: 
	* DataBindingCollection.cs: 
	* EmptyControlCollection.cs: Added missing Collection classes.

2002-05-17  Duncan Mak  <duncan@ximian.com>

	* BaseParser.cs:
	* TemplateParser.cs:  Implemented. BaseParser is weird because
	there is no documentation on what it does.

	* ControlBuilder.cs:
	
	* DataBinder.cs: 
	* DataBinding.cs: Added. 

	* DataBoundLiteralControl.cs: 
	* Triplet.cs: Added.

	* RenderMethod.cs: Added this delegate for Control.cs

2002-05-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ValidationPropertyAttribute.cs: a couple of fixes to make it compile.

2002-05-14  Duncan Mak  <duncan@ximian.com>

	* ValidationPropertyAttribute.cs: Added to CVS.

2002-05-10  Duncan Mak  <duncan@ximian.com>

	* ConstructorNeedsTagAttribute.cs: 
	* ControlBuilderAttribute.cs: 
	* ImageClickEventArgs.cs: 
	* ParseChildrenAttribute.cs: 
	* PartialCachingAttribute.cs: 
	* PersistChildrenAttribute.cs: 
	* PersistenceModeAttribute.cs: 
	* TemplateContainerAttribute.cs: Added to CVS.

	* PersistanceMode.cs: Removed, fixed typo.
	* PersistenceMode.cs: Replacing above.

	* StateBag.cs (this): Fixed indexer, it takes a string as the
	index, not an object.

	* ValidatorCollection.cs: Fixed typo, ValidatedCollection to ValidatorCollection. 

	* Page.cs (Validators): return type should be ValidatorCollection,
	not ValidatedCollection.

	* TagPrefixAttribute.cs: Added to CVS.

2002-05-07  Duncan Mak  <duncan@ximian.com>

	* Utils.cs (GetClientValidatedEvent): Uncommented the 'Page' argument.

2002-03-26   Gaurav Vaish <gvaish@iitk.ac.in>

        * DataBindingHandlerAttribute.cs
                                   - Completed
        * ToolboxDataAttribute.cs  - Completed

2002-01-03  Nick Drochak  <ndrochak@gol.com>

	* DesignTimeParseData.cs: initialze static member to avoid compile
	error
	* PropertyConverter.cs: remove uneeded exception variables from
	catch blocks.

2002-01-02  Nick Drochak  <ndrochak@gol.com>

	* DesignTimeParseData.cs: fix header to show correct class name

2001-12-21   Gaurav Vaish <gvaish@iitk.ac.in>

        * StateBag.cs             - Completed

2001-12-19   Gaurav Vaish <gvaish@iitk.ac.in>

        * Pair.cs                 - Small undocumented class. Completed.

2001-12-18   Gaurav Vaish <gvaish@iitk.ac.in>

        * DesignTimeParseData.cs  - Initial implementation
        * StateBag.cs             - Initial implementation

2001-12-17   Gaurav Vaish <gvaish@iitk.ac.in>

        * PropertyConverter.cs    - Undocumented class. Completed.
        * Utils.cs                - Undocumented, private class.
				    Initial implementation

2001-08-28  Bob Smith  <bob@thestuff.net>
        * Control.cs: Figured out some undocumented API.
        * Added TODO.
        * BuildMethod.cs: Initial implementation.
        * BuildTemplateMethod.cs: Initial implementation.
        * HtmlTextWriterAttribute.cs: Initial implementation.
        * HtmlTextWriterStyle.cs: Initial implementation.
        * HtmlTextWriterTag.cs: Initial implementation.
        * IAttributeAccessor.cs: Initial implementation.
        * IDataBindingsAccessor.cs: Initial implementation.
        * ImageClickEventHandler.cs: Initial implementation.
        * INamingContainer.cs: Initial implementation.
        * IParserAccessor.cs: Initial implementation.
        * IPostBackDataHandler.cs: Initial implementation.
        * IPostBackEventHandler.cs: Initial implementation.
        * IStateManager.cs: Initial implementation.
        * ITagNameToTypeMapper.cs: Initial implementation.
        * ITemplate.cs: Initial implementation.
        * IValidator.cs: Initial implementation.
        * OutputCacheLocation.cs: Initial implementation.
        * PersistanceMode.cs: Initial implementation.
        * StateItem.cs: Initial implementation.

2001-08-27  Bob Smith  <bob@thestuff.net>

        * Control.cs: Bug fixes and implementations.

2001-08-24  Bob Smith  <bob@thestuff.net>

        * Control.cs: Bug fixes.

2001-08-23  Bob Smith  <bob@thestuff.net>

        * Control.cs: More implementation. Events reworked for performance.

2001-08-22  Bob Smith  <bob@thestuff.net>

        * LiteralControl.cs: Implemented.
        * Control.cs: Even more implementation (Events). What a beast.

2001-08-20  Bob Smith  <bob@thestuff.net>

        * Control.cs: More implementation. Not done yet. Shutter.

2001-08-17  Bob Smith  <bob@thestuff.net>

        * Control.cs: Partial implementation.
