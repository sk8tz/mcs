2006-10-18  Marek Habersack  <grendello@gmail.com>

	* TemplateControlCompiler.cs: add support for resource
	expressions in tag attributes.

	* ResourceExpressionBuilder.cs: add support for resource
	expressions in tag attributes.

	* BaseCompiler.cs: add global/local resource assemblies to
	compilation references, if present.

	* AppResourcesCompiler.cs: global/local resources compiler.

	* AppResourceFilesCompiler.cs: compiler of resource files.

2006-10-03 Igor Zelmanovich <igorz@mainsoft.com>

	* TemplateControlCompiler.cs: fixed: Bind functions (Data-Binding Syntax).
	At run time, the Bind method calls the Eval method, if there is DataItem
	!= null to bind to.
	If there is DataItem == null (like InsertItemTemplate in FormView) Bind
	method don't raise exception and works properly to extract data from
	bounded controls on postback.
		
2006-09-20 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: if we are tracking non-server tags for
	well-formedness, handle tags that do not need to be closed (br, img,...)
	Fixes bug #79437.

2006-09-18 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageCompiler.cs: support the EnableEventValidation attribute.

2006-09-08 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: after parsing an include file, don't error out if we
	still have opened tags unless this was the last file to parse. Fixes
	bug #79318.

2006-09-05  Konstantin Triger <kostat@mainsoft.com>

	* ParseException.cs: Ensure the source file stream is closed.

2006-08-25  Kornél Pál  <kornelpal@gmail.com>

	* AppSettingsExpressionBuilder.cs: Use assembly name constants.
	* ConnectionStringsExpressionBuilder.cs: Use name reference
	  constants.
	* ResourceExpressionBuilder.cs: Use assembly name constants.

2006-08-20  Vladimir Krasnov  <vladimirk@mainsoft.com>

	* ThemeDirectoryCompiler.jvm.cs: implemented GetCompiledInstance

2006-08-10 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ClientBuildManager.cs: handle domain shutdown and unload.
	Implemented some properties. Commented.

2006-08-10  Andrew Skiba  <andrews@mainsoft.com>

	* ThemeDirectoryCompiler.cs: render css path as a virtual path.

2006-08-08  Vladimir Krasnov  <vladimirk@mainsoft.com>

	* added ThemeDirectoryCompiler.jvm.cs

2006-07-28 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageThemeCompiler.cs: Don't generate a 'Items.Clear ()' call if
	the property Items does not exist. Patch by Marek Habersack that fixes
	bug #78971.

2006-07-28 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: support assigning nullable types.
	Patch by Marek Habersack that fixes bug #78970.

2006-07-13 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: make password work again.

2006-06-21 Juraj Skripsky <js@hotfeet.ch>

	* AspTokenizer.cs (ReadAttValue), AspParser.cs (GetAttributes):
	MS.NET handles nested quotes differently for server controls and
	for "normal" controls. Add a property "AlternatingQuotes" to the
	tokenizer and let the parser decide whether it is well-formed or not.

2006-06-20 Andrew Skiba <andrews@mainsoft.com>

	* PageThemeCompiler.cs, TemplateControlCompiler.cs: take care of
	UrlPropertyAttribute.

2006-06-18 Andrew Skiba <andrews@mainsoft.com>

	* TemplateControlCompiler.cs: check IsWritablePropertyOrField before
	generating code for assignment statement and DataBind event.
	
2006-06-15 Juraj Skripsky <js@hotfeet.ch>

	* AspTokenizer.cs (ReadAttValue), AspParser.cs (GetAttributes):
	Don't allow an attribute value to contain the same quote characters
	as the ones used for delimiting the value itself. Add a token
	NOTWELLFORMED to signal that case to AspParser. Fixes bug #78643.

2006-06-08	Konstantin Triger <kostat@mainsoft.com>

	* ThemeDirectoryCompiler.cs: use physical path instead of virtual path.

2006-04-24  Andrew Skiba  <andrews@mainsoft.com>

	* ThemeDirectoryCompiler.cs: use UrlUtils.Combine to combine pathes

2006-04-23  Andrew Skiba  <andrews@mainsoft.com>

	* PageThemeCompiler.cs: initialize __linkedStyleSheets field with the
	array of style sheets from the parser
	* ThemeDirectoryCompiler.cs: scan *.css files in theme directory and
	put them in LinkedStyleSheets of PageThemeParser

2006-04-20  Chris Toshok  <toshok@ximian.com>

	* BaseCompiler.cs: for 2.0, emit the correct namespace and class
	names in the case where you use "NS.ClassName" in the Inherits
	attribute.  Fixes bug #78135.

2006-04-20 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CachingCompiler.cs: no need to play the Wait/PulseAll game, as we
	already acquired the lock even when we might have not created the 'key'
	to the compilation ticket.

2006-04-16  Andrew Skiba <andrews@mainsoft.com>

	* ThemeDirectoryCompiler.cs: add to the directory parser all the
	assemblies found by PageThemeFileParsers

2006-04-12  Lluis Sanchez Gual <lluis@novell.com>

	* TemplateControlCompiler.cs: Properly read all content of
	string properties.

2006-04-11  Andrew Skiba <andrews@mainsoft.com>

	* TemplateControlCompiler.cs : fix for partial parsers

2006-04-11  Andrew Skiba <andrews@mainsoft.com>

	* ThemeDirectoryCompiler.cs : map the virtual path to the physical
	path

2006-04-08  Miguel de Icaza  <miguel@novell.com>

	* TemplateControlCompiler.cs: An attempt to fix the regression
	introduced in r58505 (a bug fix for 77762).   This was reported in
	the mailing list with a batch of new 2.0 failures.

	We really need a test suite in NUnit to check on ASP.NET aspx
	changes.

2006-03-27  Robert Jordan  <robertj@gmx.net>

	* CachingCompiler.cs:  change the compilation locking scheme
	from "one mcs per process" to "one mcs per file".

2006-03-24 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.Compilation/TemplateControlCompiler.cs: handle the new
	StringPropertyBuilder.

2006-03-24  Chris Toshok  <toshok@ximian.com>

	* BaseCompiler.cs (GetCompiledType): fall back to CodeDomProvider
	if system.web/compilation doesn't list a compiler for our
	language.

2006-03-13  Chris Toshok  <toshok@ximian.com>

	* TemplateControlCompiler.cs (InitMethod): when generating the
	call to ApplyStyleSheetSkin, don't just blindly pass "this" as the
	argument to it.  Only do that if the class we're compiling is
	actually a subclass of Page.  If it's not, pass this.Page.

2006-03-07  Chris Toshok  <toshok@ximian.com>

	* AspGenerator.cs: refactor the parsing code so that we can
	initiate parsing from outside this class.

	* PageCompiler.cs (PrependStatementsToFrameworkInitialize): new
	method, add our StyleSheetTheme assignment here.
	(AppendStatementsToFrameworkInitialize): rename AddStatements* to
	this.

	* TemplateControlCompiler.cs (EnsureID): make protected.
	(CreateAssignStatementsFromAttributes): same
	(AddChildCall): same.
	(CreateControlTree): same.
	(CreateFrameworkInitializeMethod): change
	"AddStatementsToFrameworkInitialize" to
	"AppendStatementsToFrameworkInitialize", and add call to
	"PrependStatementsToFrameworkInitialize" before the generation of
	"base.FrameworkInitialize()."

	* PageThemeCompiler.cs (CreateControlSkinMethod): remove spew.

2006-03-07  Chris Toshok  <toshok@ximian.com>

	* ThemeDirectoryCompiler.cs: new file.

	* PageThemeCompiler.cs: new file.

2006-03-07  Chris Toshok  <toshok@ximian.com>

	* BaseCompiler.cs: fix typo in "initialize" in multiple places.
	(Init): move the CreateMethods call here.

2006-03-02  Chris Toshok  <toshok@ximian.com>

	* TemplateControlCompiler.cs (InitMethod): emit an assignment for
	SkinID just after the creation of our object, and right after that
	call "_ctrl.ApplyStyleSheetSkin (page)".
	(CreateAssignStatementsFromAttributes): split out the majority of
	this code to CreateAssignStatementFromAttribute, and change this
	method to simply a loop over the attribute keys.  In the 2.0 case,
	skip the SkinID property, since that's handled explicitly in
	InitMethod.

	* PageCompiler.cs (AddStatementsToInitMethod): emit assignments
	for Theme and StyleSheetTheme.

2006-02-23  Chris Toshok  <toshok@ximian.com>

	* TemplateControlCompiler.cs (AddContentTemplateInvocation): track
	change from ContentControlBuilderInternal to
	ContentBuilderInternal.
	(AddCodeRender): same.

2006-02-16 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AssemblyBuilder.cs:
	* BuildManager.cs: compile the assembly from AssemblyBuilder and use
	GetGeneratedType() on the BuildProvider instead of loading the assembly
	and trying a wild guess at the type name.

2006-02-14 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* GlobalAsaxCompiler.cs:
	* PageCompiler.cs:
	* TemplateControlCompiler.cs: CreateMethods is now internal.

	* WebServiceBuildProvider.cs:
	* PageBuildProvider.cs:
	* UserControlBuildProvider.cs:
	* WebHandlerBuildProvider.cs: new build providers.

	* BuildProvider.cs: add assemblies.

	* BaseCompiler.cs: expose the provider and the compile unit through
	properties.

2006-02-10 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CompilerType.cs: implemented.

	* AssemblyBuilder.cs: implemented most of it.

	* WebServiceCompiler.cs:
	* CachingCompiler.cs: update 2.0 compiler instance creation code.

	* ClientBuildManager.cs: implemented some of its methods. Not yet
	ready.

	* BuildManager.cs: the more interesting methods are implemented now.

	* BaseCompiler.cs: delete the temporary files in case of error.

	* BuildProvider.cs: implemented the Get*Compiler* protected methods.

2006-02-07  Chris Toshok  <toshok@ximian.com>

	* TemplateControlCompiler.cs (AddParsedSubObjectStmt): append the
	calls to AddParsedSubObject to a special statement collection --
	builder.flushOutputStatements -- not to builder.method.Statements.
	(InitMethod): initially, set flushOutputStatements to
	method.Statements.  If we're dealing with a ContentPlaceHolder,
	set flushOutputStatements to be the else block of a conditional we
	create.  This causes the compiled control to fall back to the
	ContentPlaceHolder's child controls in case there's no
	corresponding Content template.
	(AddChildCall): use methodStatements instead of method.Statements.
	(CreateControlTree): same.

	* PageCompiler.cs (CreatePropertyAssign): factor out the
	string,string implementation and add one that also takes a
	CodeExpression; make the string,string implementation call the
	three arg one with thisRef.
	(AddStatementsToInitMethod): make use of the 3-arg form of
	CreatePropertyAssign to reduce code.  Also, add support for
	setting the page's Title from the parser's Title.

2006-02-07  Chris Toshok  <toshok@ximian.com>

	* UserControlCompiler.cs (AddStatementsToInitMethod): emit code to
	assign __ctrl.MasterPageFile to our master page, if we have one.

	* PageCompiler.cs (CreateContructor): remove the MasterPageFile
	assignment from here.
	(AddStatementsToInitMethod): and move it here.
	
	* TemplateControlCompiler.cs (InitMethod): in the case where
	builder is a RootBuilder (we're building the __BuildControlTree
	method), call a virtual method so that subclasses can add their
	own statements to the method (used by both Page and MasterPage);
	Also, in the RootBuilder case, the argument should be the
	parser.ClassName type (the class we're building); lastly, expand
	the ContentPlaceHolder logic to include all the
	ContentTemplates/InstantiateIn magic.
	(AddStatementsToInitMethod): empty virtual method.
	(AddContentTemplateInvocation): ContentControlBuilder ->
	ContentControlBuilderInternal.
	(CreateControlTree): same.
	(CallBaseFrameworkInitialize): new function, create call to
	base.FrameworkInitialize.
	(CreateFrameworkInitializeMethod): call CallBaseFrameworkIniitialize.

2006-02-06 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* IgnoreFileBuildProvider.cs: it's not public.
	* BuildProvider.cs: mostly implemented.

2006-02-01  Chris Toshok  <toshok@ximian.com>

	* WebServiceCompiler.cs: CONFIGURATION_2_0 => NET_2_0, and use
	GetSection instead of GetWebApplicationSection.

	* CachingCompiler.cs: same.

	* AspGenerator.cs: same.

	* BaseCompiler.cs: same.
	
2006-01-23 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: ignore 'thead'. Fixes bug #77326.

2006-01-22  Chris Toshok  <toshok@ximian.com>

	* IgnoreFileBuildProvider.cs: build provider which does nothing.

2006-01-22  Chris Toshok  <toshok@ximian.com>

	* AspComponentFoundry.cs (.ctor): use a 2.0 friendly form of the
	Hashtable ctor to silence a couple of warning.
	(CompoundFoundry.ctor): same

	* Directive.cs (InitHash): use a 2.0 friendly form of the
	Hashtable ctor to silence a couple of warning.

	* TagAttributes.cs (MakeHash): use a 2.0 friendly form of the
	Hashtable ctor to silence a warning.
	(GetDictionary): same.

2006-01-22  Chris Toshok  <toshok@ximian.com>

	* AppSettingsExpressionBuilder.cs: implement this, patterning it
	after an example on msdn.  Also, enable the ExpressionEditor
	attribute, but use the string rather than the Type overload so we
	won't have yet another circular dep.

	* ConnectionStringsExpressionBuilder.cs: partial implementation.
	Same deal with the ExpressionEditor attribute.

	* ResourceExpressionBuilder.cs: same deal with the
	ExpressionEditor attribute.
	
2006-01-20  Chris Toshok  <toshok@ximian.com>

	* ResourceExpressionBuilder.cs (ParseExpression): implement.

	* ResourceExpressionFields.cs: implement.

2006-01-20  Chris Toshok  <toshok@ximian.com>

	* ClientBuildManagerParameter.cs: implement.

	* ClientBuildManagerCallback.cs: this class contains an empty
	default implementation.

2006-01-10 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: add support for 'src' in <script runat="server">.
	Fixes bug #77150.

2006-01-04  Chris Toshok  <toshok@ximian.com>

	* WebServiceCompiler.cs (GetCompiledType): add CONFIGURATION_2_0
	code.

	* AspGenerator.cs (CheckLanguage): add CONFIGURATION_2_0 code.

2005-12-06 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: fix yesterday's fix.

2005-12-06 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: only do special processing for <script> if it has
	the runat="server" attribute. Fixes bug #76918.

2005-12-01 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: treat LightGrey as a synonym of LightGray.
	Fixes bug #76677.

2005-11-30 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: handle data bound attributes for html
	controls. Fixes bug #76785.

2005-11-28  Chris Toshok  <toshok@ximian.com>

	* CachingCompiler.cs (Compile): CONFIGURATION_2_0 work.

	* BaseCompiler.cs (GetCompiledType): CONFIGURATION_2_0 work.

2005-11-22 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* WebServiceCompiler.cs: fixed caching for web handlers.

2005-11-21 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: don't change case for verbatim IDs.
	Fixes bug #76657.

2005-09-23 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: when processing verbatim input, throw if we reach EOF
	before the expected end of the data.

2005-09-22 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CachingCompiler.cs: 
	* WebServiceCompiler.cs: when caching a type loaded from an assembly
	that we didn't compile, make it depend on the file itself, not on a
	non-existing cache key. This problem affected performance of web
	services and .ashx, making unnecessary extra calls to LoadFrom every
	time the cache was cleared.

2005-09-10 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: set the domain's DynamicBase property instead of
	guessing it in BaseCompiler.

2005-08-18 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* WebServiceCompiler.cs: apply the same fix as in r45440 that fixed bug
	75146 for pages/controls.

2005-08-09  Miguel de Icaza  <miguel@novell.com>

	* WebServiceCompiler.cs: Use the new DynamicDir method.

	* BaseCompiler.cs: Use the DynamicBase property as a hint, but
	since this value is null most of the time, compute the real value.

	Added Bonus: if the directory has some kind of permission problem,
	try a different directory name.

2005-07-13  Miguel de Icaza  <miguel@novell.com>

	* AspGenerator.cs (AspGenerator.CheckLanguage): Use
	BaseParser.Context for the context. 

2005-06-26 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TagAttributes.cs:
	* AspParser.cs:
	* TemplateControlCompiler.cs: use invariant culture versions of starts/
	endswith.

2005-06-25 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: comparison between member name and the
	first part of the id provided by the user should also be
	case-insensitive. Fixes bug #75379.

2005-06-25 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CachingCompiler.cs: use cache.InsertPrivate.
	* AspGenerator.cs: use cache.InsertPrivate. Removed extra call to
	AddDependency.

2005-06-24 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CachingCompiler.cs: create the assemly in the DynamicBase directory,
	as all the others, when compiling an assembly from a Src file. Fixes
	bug #75371.

2005-06-15 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: if the property is not found, don't forget
	about trying the field.

2005-06-13  Lluis Sanchez Gual <lluis@novell.com>

	* Directive.cs: Register the MasterType directive.
	* PageCompiler.cs: If a MasterType is specified, add a type specific
	Master property. All this fixes bug #75192.

2005-06-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: when mapping an attribute name to a field
	or property name, there's no need to try with every property and field,
	but just the one found when searching by name (no case). There was one
	call to ProcessPropertiesAndFields per property or field until found,
	now only one if the property/field is found, none otherwise.

2005-06-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: allow more than 2 levels when looking for
	properties of fields for an attribute like "Prop1-Prop2-Prop3". Fixes
	bug #75234.

2005-06-05 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: when the OutputAssembly is null, we can still have
	the assembly file there and be able to load it. Thanks to Rogerio and
	Mark.

2005-06-04 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: InvariantCulture love.

2005-06-04 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: use the Page AddContentTemplate method,
	as the one in Master is protected. Fixes bug #75157.

2005-05-06 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspComponentFoundry.cs: tagnames have precedence over types in
	assemblies when they use the same prefix. Fixes bug #71855.

2005-05-03  Lluis Sanchez Gual <lluis@novell.com>

	* WebServiceCompiler.cs: Create the temp directory before
	creating the web service source code file.

2005-04-25 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: when checking languages, try to match other aliases
	too (ie, 'cs' == 'c#').

2005-04-22 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: check that DynamicBase directory exists before
	creating the TempFileCollection.

2005-04-22 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: use a stack for non-server tags even before getting
	to a form. Fixes bug #70274.

2005-04-22 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: don't error out on ill formed tags if it's not a server
	tag (ie, allow something like '<table align="left cellpadding="0">' to
	work, as MS does. Fixes bug #67909.

2005-04-20 Rafael Teixeira <rafaelteixeirabr@hotmail.com>
	* BaseCompiler.cs: do the bridge of Explicit/Strict attributes from
	@Page/@Control directives to CodeDOM (VB.NET support)

2005-04-19  Lluis Sanchez Gual <lluis@novell.com>

	* AspParser.cs: Fixed parsing of data binding tags in server
	tag attributes. Allow <%...%> blocks not assigned to
	attributes in client tags.
	* TagAttributes.cs: Make sure that data binding blocks in server
	tags are always assigned to attributes.

2005-04-15  Lluis Sanchez Gual <lluis@novell.com>

	* TemplateControlCompiler.cs: Implemented support for two-way
	binding.

2005-04-14  Lluis Sanchez Gual <lluis@novell.com>

	* TemplateControlCompiler.cs: Use the new BindingContainerType
	property to find the type of the binding container. 
	
2005-04-07  Lluis Sanchez Gual <lluis@novell.com>

	* TemplateControlCompiler.cs: Avoid using the GetConverter() trick
	for primitive types. Parse an empty color string as Color.Empty.
	Get the converter for a property using its PropertyDescriptor.
	
2005-04-05  Lluis Sanchez Gual <lluis@novell.com>

	* TemplateControlCompiler.cs: Don't autogenerate IDs for
	controls inside Content template.

2005-03-18 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: make typedesc.aspx work again.

2005-02-17 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ExpressionBuilderContext.cs:
	* ExpressionBuilder.cs: implemented.

2005-02-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: don't fail on <tbody runat=server>. Fixes bug #71856.

2005-01-28  Lluis Sanchez Gual <lluis@novell.com>

	* TemplateControlCompiler.cs: When generating a property value,
	check for TypeConverterAttribute in the PropertyInfo, not only in the
	property type.
	Implemented code generation using InstanceDescriptor, when the type
	converter supports conversion to that type.

2005-01-21  Lluis Sanchez Gual <lluis@novell.com>

	* Directive.cs: Added MASTER directive.
	* AspGenerator.cs: Use UserControlCompiler for compiling master pages.
	* PageCompiler.cs: Set the master file name when generating the page.
	* TemplateControlCompiler.cs: When generating the method for a
	content holder, register the content holder in the base MasterPage.
	Added method for registering a Content control for a MasterPage.
	Generate code for Content controls.

2005-01-10  Lluis Sanchez Gual <lluis@novell.com>

	* TemplateControlCompiler.cs: Get the container type from the
	template (if it was defined using TemplateContainerAttribute.

2004-10-29 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: correctly process script tags that self-closing.
	Fixes bug #69657.

2004-10-27 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CachingCompiler.cs: when compiling a single .cs file, add the file
	itself to dependencies. Fixes bug #68788.

2004-09-30 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* ControlBuilder.cs: don't close server tags when we get to a closing
	tag that is not applied to a server control. Fixes bug #60323.

2004-09-08 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* WebServiceCompiler.cs: fix buglet in my last commit.

2004-09-05 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs:
	* CachingCompiler.cs:
	* WebServiceCompiler.cs: correctly cache Type instead of the assembly
	for ashx/asmx. Otherwise we need to open the file and check for the
	class name in there. Thanks to Ben for pointing this out.

2004-09-05 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs:
	* AspTokenizer.cs: prevent quotes from being swallowed when we're 
	inside a server tag and they are the next non-whitespace character.
	Fixes bug #63451.

2004-09-01 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CachingCompiler.cs: don't try to watch for changes in system
	assemblies. Fixes bug #64871.

2004-09-01 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: handle builders that need to process inner text
	with tags.

	* Location.cs: added setters for the properties.

2004-08-02  Duncan Mak  <duncan@ximian.com>

	* BuildProviderResultFlags.cs: 	
	* IImplicitResourceProvider.cs: 
	* ImplicitResourceKey.cs:
	* IResourceReader.cs: Added.

2004-07-21 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: the path for file was treated as virtual, but it's
	physical. Fixes bug #61524.

2004-07-16 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: fixed case-sensitivity issues with #include and its
	attributes. Closes #61429.

2004-07-07 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs:
	* WebServiceCompiler.cs: really create the dlls under DynamicBase

2004-06-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: for system colors, use SystemColors class
	instead of Color. Fixes bug #60249.

2004-06-16 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: try getting the Type from the cache before doing the 
	real work. Remove temporary files right after successful compilation.

	* CachingCompiler.cs: added GetTypeFromCache.

	* UserControlCompiler.cs: nothing interesting.

	* WebServiceCompiler.cs: try getting the Type from the cache before
	doing anything else. Remove temp files on sucessful compilation.

2004-06-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs:
	* CachingCompiler.cs: use a different prefix when caching compiler
	results or Types.

2004-06-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: dynamicBase is now protected. Check
	MONO_ASPNET_NODELETE here.

	* TemplateControlCompiler.cs: if the type is not known but has a 
	TypeConverter, invoke ConvertFromString in the generated code.

	* WebServiceCompiler.cs: it used a hardcoded C# compiler, now it gets
	the compiler from the configuration. Also handle MONO_ASPNET_NODELETE.

	* CachingCompiler.cs: updated compilation of web services and simple
	web handlers.

2004-06-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CSCompiler.cs: removed.

	* CachingCompiler.cs: language independent compilation for single files.

2004-06-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs:
	* WebServiceCompiler.cs: adapted to the 'new' CachingCompiler.
	* CachingCompiler.cs: use HttpRuntime.Cache.

2004-06-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageCompiler.cs: fixed Trace and add support for Buffer.

2004-06-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageCompiler.cs: override CreateConstructor to add assignment for
	ClientTarget.
	
2004-06-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: use CodeDelegateCreateExpression instead
	of CodeObjectCreateExpression for the render method delegate. Thanks
	to Jochen Wezel.

2004-05-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: use DynamicBase for the output assemblies.

2004-05-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: ObjectTagBuilder do not override HasBody now.

2004-05-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: indent a few lines.
	* AspTokenizer.cs: added ungetc() used when we read a '/' in an unquoted
	attribute value. This way we can simulate reading 2 characters ahead
	(one in ungetc and the other in Peek) and work with values like
	text/javascript. Fixes bug #57302.

2004-05-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: ignore whitespace after directives. Fixes bug #58057.

2004-04-02  Lluis Sanchez Gual  <lluis@ximian.com>

	* TemplateControlCompiler.cs: Fixed build for net_1_0 profile.

2004-03-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* GlobalAsaxCompiler.cs: removed Imports and Assemblies properties.

2004-02-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: error out when <object> server tag is not closed.
	Ignore any content inside it.

2004-02-10  Jackson Harper <jackson@ximian.com>

	* AspTokenizer.cs: Collect discarded characters that might be used
	in client side scripts. Patch by Liyu Liu.
	* AspParser.cs: Add discarded characters. Patch by Liyu Liu.
	
2004-02-10  Jackson Harper <jackson@ximian.com>

	* BaseCompiler.cs: Use the TempDirectory for compilation. Fixes
	bug #54117.
	
2004-01-30  Jackson Harper <jackson@ximian.com>

	* TemplateControlCompiler.cs: Call ToString on the types hashcode,
	the build method takes strings not ints.
	
2004-01-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: handle more possible errors in global.asax file.

	* BaseCompiler.cs: added utility methods for creating <object> related
	properties and fields.

	* GlobalAsaxCompiler.cs: keep around applications and session scope
	objects builders. Also a list of imports and assemblies added in
	global.asax.

	* TemplateControlCompiler.cs: use base class methods for <object> stuff.

2004-01-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: use the Cache to store compiled Types. Don't parse
	pages more than once. Thanks to Eric Lindvall for pointing this out.

2004-01-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: allow handling subproperties for other
	types than Style and Font. Fixes bug #53217.

2004-01-16  Jackson Harper <jackson@ximian.com>

	* TagAttribute.cs: attributes can be stored as encoded html so we
	decode them here.
	
2004-01-14  Jackson Harper <jackson@ximian.com>

	* TemplateControlCompiler.cs: Is a user control is cached and
	shared use the controls type hashcode for the GUID so it will be
	the same across instances.
	
2004-01-13  Jackson Harper <jackson@ximian.com>
	
	* TemplateControlCompiler.cs: If an item has the partial caching
	attribute build a PartialCachingControl in the parents __Build method.
	* BaseCompiler.cs: Add a method for adding class attributes to the
	class.
	* UserControlCompiler.cs: If caching is enabled on a user control
	add the PartialCachingAttribute to it.
	
2004-01-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageCompiler.cs: invoke Request.ValidateInput if required.

2004-01-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: don't rely on GC to close the files parsed. Fixes bug
	#52521. Patch by liyul@hotmail.com.

2003-12-25  Jackson Harper <jackson@ximian.com>

	* AspGenerator.cs: Allow scriptlets in javascript. This fixes bug
	#52522.
	
2003-12-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageCompiler.cs: assign the ErrorPage property if provided.

2003-12-15  Jackson Harper <jackson@ximian.com>

	* PageCompiler.cs: Add Trace and TraceMode to framework initialize
	method if they are set.
	
2003-12-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: ignore <tbody> when we're inside a server table and
	fail when runat="server" is applied to <tbody> with a parse error
	instead of waiting for a compilation error. Fixes bug #52157.

2003-12-02  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: basic checking of ID validity.  Throw a
	ParseException when mixing languages.

2003-11-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageCompiler.cs: assign LCID, Culture and/or UICulture in
	FrameworInitialize() if provided in @Page.

	Fixes bug #51511.

2003-11-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: support for expressions of
	System.Drawing.Size type. Allow getting Color from comma separated
	numbers, which is not allowed by ColorConverter.

	This makes http://www.codeproject.com/aspnet/asppopup.asp work.

2003-11-13  Jackson Harper <jackson@ximian.com>

	* PageCompiler.cs: Call InitOutputCache when the OutputCache
	directive is set.
	
2003-11-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: use fileEncoding from configuration files.

	* PageCompiler.cs: add assign statements for ContentType,
	ResponseEncoding and CodePage if supplied.

2003-10-21  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: fix bug #42994. Now we don't generate
	a return statement for user controls with 'void' return type.

2003-10-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: fixed bug #49627.

2003-10-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: now gets the CodeCompiler from configuration files.

2003-10-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Directive.cs: new attribute for @Page directive in 1.1.

2003-10-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs:
	* TagAttributes.cs: allow duplicated runat=server attributes and display
	error page when duplicated attributes and runat is specified.

2003-10-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspTokenizer.cs: moved token numbers above unicode.

2003-09-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: don't process code render tags inside scripts. Check
	the language of the script and treat javascript as verbatim input.
	Fixes bug #48592.

2003-09-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: fixed bug #48212.

2003-09-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* WebServiceCompiler.cs: remove the temporary files here too.

2003-08-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: fixed bug #46429.

2003-08-01  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Directive.cs: support @WebHandler.
	
2003-07-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: support string []. Fixes bug #46415.

2003-07-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: first look for cached items, then generate the tree.
	This should speed things up.

	* CachingCompiler.cs: when compiling web services, use the full path of
	the .asmx file as key when caching.

	* WebServiceCompiler.cs: first look for cached items, then generate
	the source file.

2003-07-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: more useful error information,

	* BaseCompiler.cs:
	* CachingCompiler.cs: honor the debug="true" option.

	* TemplateControlCompiler.cs: small fixes for templates.

2003-07-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: made Compiler property virtual.

	* CachingCompiler.cs: added support for compiling web services.

	* WebServiceCompiler.cs: implemented.

2003-05-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CachingCompiler.cs: fixed bug #43477.

2003-05-22  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs:
	* AspTokenizer.cs: fixed bugs #43206 and #43371.

2003-05-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: duh! Generate SupportAutoEvents instead
	of AutoEventWireup (which is internal). Thanks to Stuart Ballard for
	reporting.

2003-05-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CompilationException.cs: don't add duplicated lines in the case that
	mcs reports several errors for the same one.

2003-05-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: fully support including files, ie., treat them just
	as C treats #includes.

2003-05-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs:
	* AspParser.cs:
	* TagType.cs: Added support for server side includes.

2003-05-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CSCompiler.cs: actually add the list of referenced assemblies to the
	compiler options. Throw a CompilationException if there's an error.

	* CachingCompiler.cs: added a method to compile directly from a source
	file.
	
2003-05-01  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: copy the location before setting the value for the
	control builders.

	* BaseCompiler.cs: changed parameters for CompilationException.

	* CompilationException.cs: it takes now line numbers and error
	descriptions from the CompilerErrorCollection.

	* Location.cs: used when a copy of an ILocation is needed.

	* ParseException.cs: implemented new methods to provide line numbers
	and souce file.

	* TemplateControlCompiler.cs: throw a ParseException where appropiate.

2003-05-01  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: also support data bind syntax inside tags not
	processed as controls. Added debugging method.

	* TemplateControlCompiler.cs: reset the number of data binding handlers 
	in the proper place. Small fix when getting the container type.

2003-04-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: correctly set the TemplateSourceDirectory 
	value.

2003-04-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: handle code render syntax in tag attributes.

	* AspParser.cs: the constructor now takes a TextReader.

	* TemplateControlCompiler.cs: removed comment.

2003-04-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TemplateControlCompiler.cs: added support for data bound properties.

2003-04-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspComponentFoundry.cs: simplified it a lot by using Type and Assembly
	instead of their names.

	* AspElements.cs: removed. No longer needed.

	* AspGenerator.cs: this file is now in charge of interfacing between
	the parser and the compiler. It manages the creation of the
	ControlBuilder tree and the compilation of the CodeDOM tree.

	* AspParser.cs: tag handling is simpler now.  Instead of a whole bunch
	of different Types, tags are just and id and a set of attributes.
	Implement ILocation interface.
	
	* AspTokenizer.cs: added a few methods to help the parser implementing
	ILocation.

	* BaseCompiler.cs: handles the portions of the CodeDOM tree that are
	common to appliaction, page and user control, including the actual
	compilation and error handling.

	* CSCompiler.cs: compiles C# files using CodeDOM interfaces.

	* CachingCompiler.cs: simplified to use the new interfaces.

	* CompilationException.cs: it's now using CompilationResult to report
	errors.

	* CompilationResult.cs: Removed file.

	* Directive.cs: to check for the validity of a directive.

	* GlobalAsaxCompiler.cs: simplified a lot, as most of the work is done
	in BaseCompiler.

	* ILocation.cs: interface used to now the exact place where a parse
	error happens.

	* PageCompiler.cs: generates a couple of methods that are only used in
	pages.

	* ParseException.cs: use the ILocation interface.

	* TagAttributes.cs: handles the attributes of the tags parsed.

	* TagType.cs: an enum for the different kinds of tags.

	* TemplateControlCompiler.cs: this is the one that does most of the
	conversion from teh ControlBuilder tree into a CodeDOM tree.

	* UserControlCompiler.cs: simplified as most of the work is done in
	its base classes.

	* WebServiceCompiler.cs: dummy.

2003-04-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspComponentFoundry.cs: added GetComponentType method.

2003-03-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspTokenizer.cs: allow quotes inside server tags that are part of
	attribute values.
	
	* CachingCompiler.cs: no more 'FileNotFound' exceptions when the
	compilation fails.

2003-03-27  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: generate correct appbase path. It was working with
	mcs but not with csc.

	* BaseCompiler.cs: quote arguments and removed GetRandomFileName.

	* CachingCompiler.cs: quote source file.

2003-03-26  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: now the Inherits attribute works as expected for
	global.asax file.

2003-03-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CompilationException.cs:
	* ParseException.cs: display the correct line number in error messages.

	* AspElements.cs: added TargetSchema attribute for control. It's
	ignored.

2003-03-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: fixed the hack to work under windows.
	* CachingCompiler.cs: under windows, try 'mcs.bat' and then 'mcs'.

2003-03-17  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* BaseCompiler.cs: hacks to work-around our buggy System.Uri.

2003-03-17 George Kodinov <gkodinov@openlinksw.co.uk>

        * BaseCompiler.cs: Removed a FIXME: and added a correct calculation of
	app's private bin path

2003-03-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs:
	* BaseCompiler.cs:
	* CachingCompiler.cs:
	* CompilationResult.cs:
	* GlobalAsaxCompiler.cs:
	* PageCompiler.cs:
	* UserControlCompiler.cs: recompile the page if dependencies change.

2003-02-15  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: corrected typo and wrong fix.

2003-02-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: fixed code generation for Table/TableRow/TableCell
	when used explicitly.

2003-02-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspElements.cs: get the property Type for controls that use
	ParseChildren with a property name.

	* AspGenerator.cs: generate correct signature for the method that
	adds controls to the default property in ParseChildren.

2003-02-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: rethrow exceptions that may come from parsing or 
	compilation if a user control.

2003-02-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: throw ParseException on parse
	error.

	* AspParser.cs: added Line and Column props.

	* CompilationException.cs: derives now from HtmlizedException.

	* CompilationResult.cs: added fileName field.  Fixed set_ExitCode.

	* GlobalAsaxCompiler.cs:
	* PageCompiler.cs:
	* UserControlCompiler.cs: pass the file name in the CompilationResult.

	* ParseException.cs: new exception.


2003-02-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: remove "file://" from the private bin path. Fixes
	bug #37628.

2003-02-03  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: the parser fires events when it parses an element.

	* GlobalAsaxCompiler.cs:
	* PageCompiler.cs:
	* UserControlCompiler.cs:
	* AspElements.cs: modified to use the new parser interface.

	* AspGenerator.cs: modified to use the new parser. Merge multiple text
	strings into one single LiteralControl.

	* AspTokenizer.cs: added Line and Column properties.

2003-01-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspParser.cs: fixed bug #36929.

2003-01-21  Tim Haynes <thaynes@openlinksw.com>

	* AspGenerator.cs:
	* BaseCompiler.cs:
	* CachingCompiler.cs: changes to work around spaces and
        directory-separators in the local filesystem.

2003-01-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: make the generated file compile with csc after last
	change.

2003-01-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: removed unused variable. Added support for
	properties/fields of type string [].

2003-01-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: modified loading of the parent type now that
	Type.GetType is fixed.

2003-01-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: cast to Control if the container does not implement
	INamingContainer.

2003-01-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: fixed a couple of thinkos related to IsSubclassOf.

2003-01-08  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspElements.cs: attributes without value lacked a space afterwards.

2003-01-07  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: functions for columns don't return anything. Fixed
	typo.

2003-01-07  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: add data bound controls to code render function.

2003-01-07  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspComponentFoundry.cs: reworked to allow same prefix for multiple
	controls. You can register 1 assembly plus any number of user controls
	under the same prefix.

	* AspGenerator.cs: don't add duplicate 'using' for the same namespace.
	Hack to allow @Register access to assemblies in other places than bin
	directory.

2003-01-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspElements.cs: added 'codebehind' attribute for page, control and
	application. It's ignored by MS, but allowed. Fixed typo.

2003-01-06  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: fixed EnableSesssionState handling.

2003-01-05  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: don't generate instance fields for pages/controls
	when the base class specified in the Inherits attribute already has
	them. Closes bug #36262.

2002-12-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: generate code like 'control.XXX = value' also for
	public fields (properties were being handled in that way too).

2002-12-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: now it uses the current HttpContext when creating
	user controls. TemplateSourceDirectory is no longer a dummy value.

	* GlobalAsaxCompiler.cs:
	* PageCompiler.cs:
	* UserControlCompiler.cs: set the context which will be used to locate
	the files.
	
2002-12-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: added support for AutoEventWireup attribute in
	@Page and @Control.

	* CompilationResult.cs:
	* GlobalAsaxCompiler.cs:
	* PageCompiler.cs:
	* UserControlCompiler.cs: store the options.

2002-12-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspElements.cs: new method Tag.GetElements
	used to parse the inner contents of a tag looking for data binding or 
	code render tags.
	
	New property HtmlControlTag.ParseChildren allows
	differentiation of a couple of HtmlControls that has children as
	properties (namely HtmlTable and HtmlTableRow).

	* AspGenerator.cs: fixed container semantics to
	match BindingContainer one. Implemented Inherits attribute for page and
	control.

	Support HtmlControls that has ChildrenAsProperties.
	
	Generate code for data binding functions that matches the semantic of
	Container.

	Handle data bound and code render attribute values.

	Set proper value return for TemplateSourceDirectory. Should be relative
	to appPath.
	
	* BaseCompiler.cs: moved CompilerOptions and
	References handling here.

	* CachingCompiler.cs: copy result of compilation.

	* CompilationException.cs: simple ToString () implementation.

	* CompilationResult.cs: implemented CopyFrom and ToString.

	* GlobalAsaxCompiler.cs:
	* PageCompiler.cs:
	* UserControlCompiler.cs: removed CompilerOptions as it's now handled
	in the base class. Get all the types in the generated assembly and
	look for one that derives from the correct Type.
	
2002-11-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspElements.cs: added @Application directive.

	* AspGenerator.cs: make it work also with application files. We
	currently generate an extra private function.

2002-11-29  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* GlobalAsaxCompiler.cs: compiler for global.asax file. If the file
	exists, it will be compiled into an HttpApplication derived class
	(directly or through a user-provided class).

2002-11-27  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: fixed target file name and generated class name.
	* BaseCompiler.cs: reference assemblies in PrivateBinPath.

2002-11-26  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: reworked user control
	compilation. Provide the options as a Hashtable for use in compilation.
	Create the user controls in the private bin path of the domain.

	* BaseCompiler.cs: base class for the various compiler types.

	* CachingCompiler.cs: actually executes mcs and do some poor caching
	(it will use Cache when finished).

	* CompilationException.cs: this exception has enough information to
	generate a nice error page.
	* CompilationResult.cs: used in caching.

	* PageCompiler.cs: now derives from BaseCompiler

	* TemplateFactory.cs: no longer needed.

	* UserControlCompiler.cs: new class used when compiling user controls.
	* WebServiceCompiler.cs: derives from BaseCompiler.

2002-11-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspElements.cs: added ServerComment class.
	* AspParser.cs: ignore ServerComments tags. Remove server comments when 
	in verbatim mode.

	Fixes #33482.

	* PageCompiler.cs: check if the type is already cached before generating
	the C# file.
	* TemplateFactory.cs: if csFile parameter is null, only checks if we
	already have the page compiled.

2002-11-02  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: undo one-liner change.

2002-10-31  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspGenerator.cs: removed a few hacks no longer needed.

2002-10-27  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageCompiler.cs: tracing.
	* TemplateFactory.cs: cache compiled types and tracing.
	* WebServiceCompiler.cs: new parameter in GetTypeFromsource,

2002-10-23  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspComponentFoundry.cs: fixed typo.
	* TemplateFactory.cs: use csc style options.
	* AspGenerator.cs: don't use FileDependencies property of base class.

2002-09-28  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* System.Web.Compilation/AspElements.cs:
	* System.Web.Compilation/AspGenerator.cs:
	* System.Web.Compilation/AspParser.cs:
	* System.Web.Compilation/PageCompiler.cs:
	* System.Web.Compilation/TemplateFactory.cs: we are now able to compile
	pages and use HttpApplication, HttpRuntime and SimpleWorkerRequest.

2002-09-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspElements.cs: added WebService directive.
	* WebServiceCompiler.cs: New file.

2002-08-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageCompiler.cs: fixed compilation.

2002-08-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* PageCompiler.cs: generate C# file using AspGenerator.

2002-08-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspComponentFoundry.cs: LookupFoundry now returns bool.
	* AspGenerator.cs: New file.

2002-08-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspComponentFoundry.cs: New file.
	* AspElements.cs: renamed Component to Aspcomponent.

2002-08-16  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AspElements.cs:
	* AspParser.cs:
	* AspTokenizer.cs:
	* ChangeLog:
	* PageCompiler.cs:
	* TemplateFactory.cs: first steps to move xsp into System.Web.

