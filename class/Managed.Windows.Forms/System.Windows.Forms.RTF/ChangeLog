2006-10-27  Jackson Harper  <jackson@ximian.com>

	* TextMap.cs: Since we map udieresis as a standard char we need to
	have a text mapping for it.  At some point I should go through all
	the standard chars and make sure we have mappings for them.

2006-10-25  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: Kick out of the text swallowing loop if we begin a new
	group, this happens when there is an alternate font name.  TODO:
	We should probably handle alternate font names somehow.
	- Skip over all OptDest tags, these are 'new' RTF features that we
	don't need to handle
	* KeysInit.cs: Make OptDest a destination, since that's what it
	is.

2006-10-20  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: Need to cast this to a char now.

2006-10-11  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: When reading in chars use an int so that we can
	correctly detect EOF.

2006-07-11  Peter Dennis Bartok  <pbartok@novell.com>

	* Font.cs: Set a default emtpy name so we don't crash if an RTF 
	  document defines a font but no name for it

2006-04-26  Peter Dennis Bartok  <pbartok@novell.com>

	* RTF.cs: Skip \r and \n characters instead of passing them back up
	  to the parser. It will confuse the parser. (Fixes #77914)

2005-12-22  Peter Dennis Bartok  <pbartok@novell.com>

	* RTF.cs: Added method to allow setting the default font for the RTF
	  document. This font will be used if the document does not contain
	  a font table.
	* Font.cs: Added method to delete font with a given number; 
	  changed set_Num to call this method (to allow replacing fonts
	  with the same number, particulary the default font)

2005-09-04  Peter Dennis Bartok  <pbartok@novell.com>

	* Charcode.cs: Created; provides StandardCharCode <-> character 
	  translation
	* Charset.cs: Created; provides two standard charsets, AnsiGeneral 
	  and AnsiSymbol
	* CharsetFlags.cs: Created
	* CharsetType.cs: Created
	* ClassDelegate.cs: Created; allows consumer to register a callback
	  for RTF command classes
	* Color.cs: Created; provides access to RTF-defined RGB color sets
	* DestinationDelegate.cs: Created; allows consumer to register a
	  callback for Destination class types
	* Font.cs: Created; provides access to RTF-defined font descriptions
	* KeysInit.cs: Created; provides translation table from RTF keyword
	  to Major/Minor classes
	* KeyStruct.cs: Created
	* Major.cs: Created; describes available RTF command groups
	* Minor.cs: Created; describes available 'arguments' for command groups
	* README: Created
	* RTF.cs: Created; contains main RTF parser code
	* rtf.csproj: Created; provides Visual Studio project that allows to
	  use test this assembly via the included test.cs
	  to provide 
	* RTFException.cs: Created; provides custom RTF exception class
	* StandardCharCode.cs: Created
	* StandardCharName.cs: Created
	* Style.cs: Created; provides access to RTF-define styles
	* StyleElement.cs: Created; provides support class to allow parsing
	  recursive styles
	* StyleType.cs: Created
	* test.cs: Test code showing use of RTF class (also acts as Main for
	  the included Visual Studio project)
	* TextMap.cs: Created; allows to create simple translation table for
	  converting parsed RTF document to text; table-based
	* TokenClass.cs: Created; describes all available RTF command classes
