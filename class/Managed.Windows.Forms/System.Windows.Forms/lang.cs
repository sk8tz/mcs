using System;
using System.Globalization;
using System.Windows.Forms;

namespace SWFTestClass {
	public class SWFTestClass {
                public static void Main() {
			int[]	culture = { 
				0x007f,
				0x0036,
				0x0436,
				0x001C,
				0x041C,
				0x0001,
				0x1401,
				0x3C01,
				0x0C01,
				0x0801,
				0x2C01,
				0x3401,
				0x3001,
				0x1001,
				0x1801,
				0x2001,
				0x4001,
				0x0401,
				0x2801,
				0x1C01,
				0x3801,
				0x2401,
				0x002B,
				0x042B,
				0x002C,
				0x082C,
				0x042C,
				0x002D,
				0x042D,
				0x0023,
				0x0423,
				0x0002,
				0x0402,
				0x0003,
				0x0403,
				0x0C04,
				0x1404,
				0x0804,
				0x0004,
				0x1004,
				0x0404,
				0x7C04,
				0x001A,
				0x041A,
				0x0005,
				0x0405,
				0x0006,
				0x0406,
				0x0065,
				0x0465,
				0x0013,
				0x0813,
				0x0413,
				0x0009,
				0x0C09,
				0x2809,
				0x1009,
				0x2409,
				0x1809,
				0x2009,
				0x1409,
				0x3409,
				0x1C09,
				0x2C09,
				0x0809,
				0x0409,
				0x3009,
				0x0025,
				0x0425,
				0x0038,
				0x0438,
				0x0029,
				0x0429,
				0x000B,
				0x040B,
				0x000C,
				0x080C,
				0x0C0C,
				0x040C,
				0x140C,
				0x180C,
				0x100C,
				0x0056,
				0x0456,
				0x0037,
				0x0437,
				0x0007,
				0x0C07,
				0x0407,
				0x1407,
				0x1007,
				0x0807,
				0x0008,
				0x0408,
				0x0047,
				0x0447,
				0x000D,
				0x040D,
				0x0039,
				0x0439,
				0x000E,
				0x040E,
				0x000F,
				0x040F,
				0x0021,
				0x0421,
				0x0010,
				0x0410,
				0x0810,
				0x0011,
				0x0411,
				0x004B,
				0x044B,
				0x003F,
				0x043F,
				0x0057,
				0x0457,
				0x0012,
				0x0412,
				0x0040,
				0x0440,
				0x0026,
				0x0426,
				0x0027,
				0x0427,
				0x002F,
				0x042F,
				0x003E,
				0x083E,
				0x043E,
				0x004E,
				0x044E,
				0x0050,
				0x0450,
				0x0014,
				0x0414,
				0x0814,
				0x0015,
				0x0415,
				0x0016,
				0x0416,
				0x0816,
				0x0046,
				0x0446,
				0x0018,
				0x0418,
				0x0019,
				0x0419,
				0x004F,
				0x044F,
				0x0C1A,
				0x081A,
				0x001B,
				0x041B,
				0x0024,
				0x0424,
				0x000A,
				0x2C0A,
				0x400A,
				0x340A,
				0x240A,
				0x140A,
				0x1C0A,
				0x300A,
				0x440A,
				0x100A,
				0x480A,
				0x080A,
				0x4C0A,
				0x180A,
				0x3C0A,
				0x280A,
				0x500A,
				0x0C0A,
				0x380A,
				0x200A,
				0x0041,
				0x0441,
				0x001D,
				0x081D,
				0x041D,
				0x005A,
				0x045A,
				0x0049,
				0x0449,
				0x0044,
				0x0444,
				0x004A,
				0x044A,
				0x001E,
				0x041E,
				0x001F,
				0x041F,
				0x0022,
				0x0422,
				0x0020,
				0x0420,
				0x0043,
				0x0843,
				0x0443,
				0x002A,
				0x042A
			};
			InputLanguage	l;
			CultureInfo	cultinfo;

			foreach (int c in culture) {
				cultinfo=new CultureInfo(c);
				l=InputLanguage.FromCulture(cultinfo);
				Console.WriteLine("Culture:{0}, layout:{1}", cultinfo, l);
			}

			l=InputLanguage.CurrentInputLanguage;
			Console.WriteLine("default layout:{0}", l.LayoutName);
                }
 
	}
}
