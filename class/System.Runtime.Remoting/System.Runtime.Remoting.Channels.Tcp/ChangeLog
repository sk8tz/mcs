2005-01-25  Lluis Sanchez Gual  <lluis@novell.com>

	* TcpServerTransportSink.cs: Set IPAddress and ConnectionId
	transport headers. This fixes bug #71423.
	* TcpServerChannel.cs: Use Socket instead of TcpClient, so we can
	easily get the IP address of the client. Added properties in
	ClientConnection to get the IP address and the connection id.

2005-01-21  Lluis Sanchez Gual  <lluis@novell.com>

	* TcpMessageIO.cs: Added a buffer parameter to ReceiveMessageStatus,
	to avoid creating unneded buffers.
	* TcpServerChannel.cs, TcpClientTransportSink.cs: Use new buffer
	parameter in ReceiveMessageStatus.

2005-01-14  Lluis Sanchez Gual  <lluis@novell.com>

	* TcpConnectionPool.cs: Don't limit client connections.
	This fixes bug #70700. Create connections from outside the pool lock.
	* TcpMessageIO.cs: Throw real exceptions when errors occur.
	* TcpServerChannel.cs: Use the new RemotingThreadPool to manage threads.
	This also fixes bug #70700.

2004-12-17  Lluis Sanchez Gual <lluis@novell.com>

	* TcpMessageIO.cs: Removed some more WriteByte calls.
	* TcpClientTransportSink.cs: Flush the net stream after writing
	a message.

2004-12-10  Lluis Sanchez Gual <lluis@novell.com>

	* TcpChannel.cs: Don't use regular expressions to parse the url, it's
	too slow.
	* TcpMessageIO.cs: Read byte chunks using the new StreamRead method,
	which won't block if the connection is closed.
	* TcpServerChannel.cs: Flush the stream after writing the response.
	Wrap the close call in a try/catch (some bytes can be left in the
	buffered stream if a connection is suddently closed, and it will fail
	when trying to flush them).

2004-12-09  Lluis Sanchez Gual <lluis@novell.com>

	* TcpConnectionPool.cs: Access the socket stream through a
	BufferedStream.
	* TcpMessageIO.cs: Avoid ReadByte().
	* TcpServerChannel.cs: Access the socket stream through a
	BufferedStream. Abort the connection if an unknown message is received.
	All this fixes performance bug #70337.

2004-10-22  Lluis Sanchez Gual <lluis@ximian.com>

	* TcpClientChannel.cs: In CreateMessageSink, process the remote channel
	  data if the provided url does not have the expected format. This fixes
	  a regression from the fix for bug #66768 and fixes #68669.

2004-07-15  Lluis Sanchez Gual <lluis@novell.com>

	* TcpServerChannel.cs: Set channel name from the provided properties.
	  This fixes bug #61592.

2004-05-13  Lluis Sanchez Gual <lluis@ximian.com>

	* TcpChannel.cs: Made Init private.
	* TcpClientTransportSink.cs, TcpClientTransportSinkProvider.cs,
	  TcpServerTransportSink.cs: Made internal.

﻿2004-04-16  Lluis Sanchez Gual  <lluis@ximian.com>

	* TcpClientChannel.cs: Initialize the sink provider in the default
	  constructor.

﻿2004-03-04  Lluis Sanchez Gual  <lluis@ximian.com>

	* TcpServerChannel.cs: In the ProcessMessages() loop, moved the closing of
	  the stream to the finally block, so it is called if the thread is aborted.

﻿2004-02-27  Lluis Sanchez Gual  <lluis@ximian.com>

	* TcpClientTransportSink.cs: Set the RequestUri transport header before 
	  sending the request.

﻿2004-02-23  Lluis Sanchez Gual <lluis@ximian.com>

	* TcpClientTransportSink.cs: Release the connection after sending an
	  OneWay call. This fixes bug #54671.

2003-12-23  Lluis Sanchez Gual <lluis@ximian.com>

	* TcpServerChannel.cs: If useIpAddress and bindAddress are both specified,
	  set bindAddress as the host address for the client.

2003-12-19  Lluis Sanchez Gual <lluis@ximian.com>

	* TcpServerChannel.cs: Fixes in channel initialization.

2003-12-12  Lluis Sanchez Gual  <lluis@ximian.com>

	* TcpChannel.cs: Added null check.

2003-11-16  Lluis Sanchez Gual  <lluis@ximian.com>

	* TcpClientChannel.cs: Added support for name and priority properties.
	* TcpServerChannel.cs: Added support for priority, bindTo, useIpAddress,
	  machineName and supressChannelData properties.
	* TcpChannel.cs, TcpServerTransportSink.cs: Formatting change.
		  
2003-11-13  Lluis Sanchez Gual <lluis@ximian.com>

	* TcpChannel.cs: take into account name and priority properties.
	
2003-11-12  Lluis Sanchez Gual <lluis@ximian.com>

	* TcpServerChannel.cs: Remove listener initialization and StartListening
	  call from constructor. It is called now by the remoting framework.
	* TcpConnectionPool.cs: Removed fixme.
	
	Older log entries can be found in the System.Runtime.Remoting ChangeLog.

