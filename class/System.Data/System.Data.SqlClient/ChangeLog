2005-09-21 Senganal T <tsenganal@novell.com>

	* SqlTransaction.cs : Modifed the Rollback() method, so that
	connection can be used for another transaction after the previous
	transaction is rolled back. fixes bug 75904

2005-09-02 Umadevi S <sumadevi@novell.com>
	
	* Removed SqlResultSet.cs file

2005-08-26  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlConnection.cs (Open): enable sp_reset_connection.

2005-08-25  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlCommandBuilder.cs: BuildInformation (): continue on columns
	who don't have basetablename.

2005-08-12  Daniel Morgan <danielmorgan@verizon.net>

	* SqlCommandBuilder.cs: update command builder based on
	OdbcCommandBuilder latest changes to fix regression 
	of bug 75552
	
2005-08-05  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlCommandBuilder.cs: Set SourceVersion property to the created
	parameters as it is used by the Adapter's Update method.

2005-07-22  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlCommandBuilder.cs, SqlParameterCollection.cs,
	SqlConnection.cs, SqlParameter.cs:
	- updated attributes & attribute descriptions to match with
	masterinfos.

2005-07-16  Daniel Morgan <danielmorgan@verizon.net>

	* SqlCommandBuilder.cs: CreateUpdateCommand should get the current value, not
	the orginal value when setting one of the SET variables

2005-07-15  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlCommandBuilder.cs:
	- set_DataAdapter: unsubscribe event if DataAdapter is reset.
	- CreateInsertCommand, CreateUpdateCommand, CreateDeleteCommand:
	if column mapping is missing, use the source column name. use
	proper version to get the data. 
	- RowUpdatingHandler: set status to continue to actually process
	the query.

2005-07-04  Ben Maurer  <bmaurer@ximian.com>

	* SqlError.cs: Patch from dezelin@gmail.com to fix serialization.

2005-06-29  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlConnection.cs: Open (): catch TdsInternalException and throw
	SqlException.
	* SqlException.cs: code re-organised to pass message as well with
	the exception.

2005-06-23  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlConnectionStringBuilder.cs: simplified multiple keyword
	mappings and allowed-key checking. fixed Item, Remove,
	ContainsKey, ShoudSerialize, TryGetValue implementations.

2005-06-21  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlConnectionStringBuilder.cs: Connection String Builder class
	for SqlClient Data Provider.

2005-06-01 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SqlParameter.cs: moved the 'using S.D.SqlTypes' out of NET_2_0. Fixes
	the build.

2005-06-01  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlParameter.cs: Parameter's value can be SqlTypes. Convert to
	framework type to pass to TDS layer. Fixes bug #75044.

2005-05-24 Umadevi S <sumadevi@novell.com>
	* fixed some 2.0 and 1.0 specific fields/attributes for various classes.
	* Added SqlClientMetaDataCollectionNames.cs, Implemented some 2.0
	properties for SqlParameterCollection for the bulkcopy feature.
	

2005-05-20 Kornél Pál <http://www.kornelpal.hu/>
	
	* Fixed Bug #53169 - SqlDataReader incorrectly returns bigint as decimal
		Note: The fix works around the limitations of TDS 7.0 to avoid this
		difference between Mono and .NET Framework TDS 8.0 should be used instead.

2005-05-20 Umadevi S <sumadevi@novell.com>
	
	* Fixed Bug 74948 - SqlParameter also takes DBNull Value.
		Correct some attributes stuff of 1.1 and 2.0 for SqlParameter.cs

2005-05-20 Umadevi S <sumadevi@novell.com>

	* Continuing on implementation for bulkcopy and notification
		Added files SqlNotificationEventArgs.cs, OnChangeEventHandler.cs
		Modified SqlRowUpdatingEventArgs.cs

2005-05-19 Umadevi S <sumadevi@novell.com>
	
	* For implementation of bulkcopy and notifications added files
		SqlBulkCopyOptions.cs,SqlBulkCopyColumnMapping.cs,SqlNotificationAuthType.cs
		SqlNotificationTransports.cs,SqlRowsCopiedEventArgs.cs, SqlRowsCopiedEventHandler.cs

2005-05-19  Umadevi S <sumadevi@novell.com>

	*  Corrected types,enum values of SqlNotificationType,SqlNotificationSource,
		SqlNotificationInfo and added new method in SqlRowUpdatingEventArgs.cs
	(For implementation of bulkcopy/notifications)

2005-04-19  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlDataReader.cs: NextResult (): Re-create schema table for each
	result set. don't re-use, as it may be referenced from somewhere.

2005-04-07  Sureshkumar T  <tsureshkumar@novell.com>
	    Ankit Jain     <radical@corewars.org>

	* SqlConnection.cs: Implemented additional connection string
	property "Asynchronous Processing".

	* SqlCommand.cs: Implemented Asynchronous command execution API.

	* SqlAsyncState.cs: A internal state object for asynchronous
	operations.

	* SqlAsyncResult.cs: Added. Class to hold result for asynchronous
	queries.

2005-03-28  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlCommand.cs: Execute: Add a semicolon at the end of
	CommandText. Multiple semicolon's are not being complained.

	fixes bug #74134.

2005-03-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SqlConnection.cs: added a finalizer for correct implementation of the
	IDisposable pattern.

2005-03-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SqlException.cs: make it serialization-compatible with MS. Patch by
	Aleksandar Dezelin. Closes bug #73596.

2005-03-08  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlDataReader.cs: Call base constructor with CommandBehavior
	parameter instead of passing DbCommand object. The internal base
	class with DbCommand Parameter is removed.

2005-03-07  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlCommand.cs : Set CommandBehavior on
	ExecuteReader,ExecuteScalar,ExecuteNonQuery. This is used in
	CloseDataReader.

	This fixes bug #73252.

2005-03-03  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlClientFactory.cs: While creating command, create using
	DbConnectionFactory as DbConnectionBase.CreateDbCommand needs to
	have a connection factory.

	* SqlConnection.cs: Added an internal constructor which takes
	DbConnectionFactory.

	* SqlConnectionFactory.cs: Added. Concrete class for abstract
	factory DbConnectionFactory.

2005-02-22  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlDataReader.cs: GetBytes: return the length of the data if
        output buffer is null. if not, copy the values to buffer and
        return the bytes actually read.

2005-02-02  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlConnection.cs: 
	- Database: return db name from database if connection open,
	otherwise take from connection string.
	- Set default values for parameters in the constructor itself.
	- Dangling else problem with Close method.
	- reset values of parms (TdsConnectionParameters) rather setting
	to null.
	- set disposed to false in Open method
	- finally call base.Dispose in Dispose (bool)

	Fixes nunit regressions SqlConnectionTest:DefaultConnectionValues
	and SqlConnectionTest:DatabaseSynonyms.	

2005-01-27  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlCommand.cs (DeriveParameters): Change parameter name to
	"procedure_name".
	* SqlParameter.cs (SqlParameter (object [])) : call default
	constructor to create Tds.Metaparameter.

	fixes bug #63122.

2005-01-03  Sureshkumar T  <tsureshkumar@novell.com>

	* SqlCommand.cs: Fixed bug #68973. Reset Tds.RecordsAffected to 0
	for each execute statement.
	
2004-11-25  Sureshkumar T  <tsureshkumar@novell.com>

	These changes are for 2.0 profile only. These changes implement
	the generic data base access technique using Provider Factory
	Implementation. These classes need to be dervided from abstract
	base classes so that the corresponding factory classes are
	created when calling CreateCommand, CreateParameter, etc.
	
	* SqlClientFactory.cs: Provider Factory class  Implementaion for SqlServer
	* SqlParameter.cs: Change base classes and override methods.
	* SqlParameterCollection.cs:  Change base classes and override methods.
	* SqlTransaction.cs:  Change base classes and override methods.
	* SqlDataSourceEnumerator.cs: DataSource Enumerator stubs.
	* SqlDataReader.cs: Change base classes and override methods.
	* SqlConnection.cs: Change base classes and override methods.
	* SqlCommandBuilder.cs: Change base classes and override methods.
	* SqlCommand.cs: Change base classes and override necessary methods.

2004-10-14 Umadevi S <sumadevi@novell.com>
	* SqlCommand.cs - Implemented the clone method correctly.
	 (fixed bug 67301)

2004-10-06 Umadevi S <sumadevi@novell.com>
	* ISqlNoticationReceiver.cs - changed namespace
	* Added files SqlNotificationType.cs, SqlNotificationInfo.cs, SqlNotificationSource.cs

2004-09-24  Umadevi S <sumadevi@novell.com>
	* SqlTransaction.cs - Dispose will not call rollback incase the transaction is not open.

2004-09-14  Sebastien Pouliot  <sebastien@ximian.com>

	* SqlClientPermission.cs: Added internal constructor accepting an Sql
	ClientPermissionAttribute parameter (using base class protected ctor).
	* SqlClientPermissionAttribute.cs: Copy now use the new SqlClient
	Permission constructor.

2004-09-13  Sebastien Pouliot  <sebastien@ximian.com>

	* SqlClientPermission.cs: Mostly completed (needs tests).
	* SqlClientPermissionAttribute.cs: Completed.

2004-09-02 Umadevi S <sumadevi@novell.com>
	* SqlCommand.cs - ExecuteNonQuery to return -1 incase of executing a storedprocedure

2004-08-16  Gert Driesen <drieseng@users.sourceforge.net>

	* SqlConnection.cs: added TODO on ConnectionString for keywords
	that are not yet implemented. check value of Integrated Security
	keyword, check value of bool keywords, improve error reporting
	for int keywords, added support for the following keyword 
	synonyms : APP, TIMEOUT, NETWORK, PERSISTSECURITYINFO, WSID,
	LANGUAGE, USER. Throw NotImplementedException when encrypt keyword
	is set to true, enlist keyword is set to false or attachdbfilename
	keyword (or one of its synonyms) is set. Added FIXME for PERSIST
	SECURITY INFO keyword, throwing a NotImplementedException here
	would break lots of apps

2004-08-16  Gert Driesen <drieseng@users.sourceforge.net>

	* SqlConnection.cs - spaces to tabs

2004-08-12  Sureshkumar T <tsureshkumar@novell.com>
	* SqlDataReader.cs - In Close method, the remaining resultsets are drained
			     out, to read output parameters & to avoid stream overlap

2004-06-30 Umadevi S <sumadevi@novell.com>
        * SqlCommand.cs : In the Execute Method the commandbehavior parameters were ignored correct
these

2004-06-22  Atsushi Enomoto <atsushi@ximian.com>

	* SqlCommandBuilder.cs : Avoid cast exception caused by DbNull.

2004-06-18 Umadevi S <sumadevi@novell.com>
	* SqlCommand.cs - ExecuteNonQuery returns -1 in all cases except
		insert,update or delete.

2004-06-18 Umadevi S <sumadevi@novell.com>
	* SqlConnection.cs - handled null being passed as a connectionstring
	  - checked for minimal set of parameters in connectionstring.
	  - handled unrecogonized keywords similar to MS.NET

2004-06-17 Umadevi S <sumadevi@novell.com>
	* SqlTransaction.cs - fixed  multiple rollbacks being called causes invalidoperationexception

2004-06-04  Gert Driesen <drieseng@users.sourceforge.net>

	* SqlClientPermission.cs: removed extra CreateInstance
	method

2004-06-02  Gert Driesen <drieseng@users.sourceforge.net>

        * SQLDebugging.cs: added missing attributes, marked ctor
        public to match MS.NET

2004-05-22  Atsushi Enomoto <atsushi@ximian.com>

	* SqlClientPermission.cs : don't use chained obsolete .ctor.

2004-05-20  Gert Driesen (drieseng@users.sourceforge.net)

	*  SqlClientPermissionAttribute.cs: change AllowMultiple and
	Inherited to match .NET

2004-05-20 Umadevi S <sumadevi@novell.com>

        * Fixed bug 58406- implemented the hasrow method, test program used
        to test with the bug report                                                        

2004-05-13  Umadevi S  <sumadevi@novell.com>
	
	*  SqlClientPermission.cs, SqlDataReader.cs - added missing methods with TODO tags
	*  SqlCommand.cs, SqlDataAdapter.cs - implemented ToolboxItemAttribute
	*  SQLDebugging.cs - Added new file with a TODO tag	
	
2004-04-05  Lluis Sanchez Gual  <lluis@ximian.com>

	* SqlConnection.cs: Use connection pool implemented in Mono.Data.Tds.

2004-04-01  Lluis Sanchez Gual  <lluis@ximian.com>

	* SqlDataReader.cs: Null values are now represented with DBNull instances.
	  Deal with this.

2004-03-14  Tim Coleman <tim@timcoleman.com>
	* SqlCommand.cs SqlConnection.cs:
		Changes from two patches by Andres Taylor
		<andres@rotselleri.com>

2004-03-12  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* SqlParameter.cs: DO NOT USE the consts scheme if types can be referenced directly!

2004-01-10  Atsushi Enomoto <atsushi@ximian.com>

	* SqlClientPermission.cs : Fixed NET_2_0 build related to 
	  obsolete attribute problem (see DbDataPermission.cs)

2003-12-28  Tim Coleman <tim@timcoleman.com>
	* SqlResultSet.cs:
		Stubbed out this class.

2003-12-23  Tim Coleman <tim@timcoleman.com>
	* SqlConnection.cs:
		Improved connection string parsing.  See
		System.Data.Common.DbConnectionString for source.

2003-12-21  Tim Coleman <tim@timcoleman.com>
	* SqlConnection.cs:
		Enable Integrated Security

2003-12-19  Tim Coleman <tim@timcoleman.com>
	* ISqlNotificationReceiver.cs SqlResultSet.cs:
		New stubs added
	* SqlClientPermission.cs:
		Fix constructor for 1.2

2003-12-04  John Luke  <jluke@cfl.rr.com>

	* SqlXmlTextReader.cs: applied patch from Chris Masters <neeeeeep@bigpond.com>
	fix peek so it checks if it is at the end and also to make sure that if Read()
	advances the position past the end of the localBuffer array, it makes
	a call to GetNextBuffer(). fixes bug #40253 System.IndexOutOfRangeException when
	using SqlCommand.ExecuteXmlReader()

2003-11-20  Joerg Rosenkranz  <JoergR@voelcker.com>

	* SqlConnection (SetDefaultConnectionParameters):
	Changed default value of WORKSTATION ID to reflect real
	host name instead of "localhost".

2003-11-16 Ben Maurer  <bmaurer@users.sourceforge.net>

	* SqlParameterCollection.cs (Clear): Clear needs to take
	the parameter out of the collection so that it can be used
	again.
	(Remove):
	(RemoveAt): Ditto.

2003-10-03  Diego Caravana  <diego@toth.it>

	* SqlCommand.cs: no change.

	* SqlConnection.cs (Close): Added checks for null instance
	variables.

	* SqlParameter.cs (Direction): Now handles parameters of type
	ReturnValue and InputOutput.

	* SqlParameterCollection.cs (IndexOf(string)): Search for
	SqlParameter object in list is done by obtaining ParameterName
	attribute, not directly through list.IndexOf().
	
2003-08-22  Duncan Mak  <duncan@ximian.com>

	* SqlCommand.cs (ExecuteNonQuery): Return
	Connection.Tds.RecordsAffected if it is successful.  Patch from
	Jörg Rosenkranz <joergr@voelcker.com>.

	This is part of a fix to bug #40315.

2003-08-20  Duncan Mak  <duncan@ximian.com>

	* SqlConnectionPool.cs (ReleaseConnection): A patch from Joerg
	Rosenkranz <JoergR@voelcker.com>. Currently, if a connection is
	closed by an external event (network problem, etc.) it is pushed
	back into the connection pool. The next Open call retrieves this
	invalid connection which leads to exceptions when executing
	statements.

	This patch fixes this problem. This closes bug #47429.

2003-07-04  Miguel de Icaza  <miguel@ximian.com>

	* SqlDataReader.cs: Added extra information to the exceptions
	thrown by all the GetXXXX methods.

2003-03-15  Daniel Morgan <danmorg@sc.rr.com>

	* SqlConnection.cs: if Server in the ConnectionString
	is set to "(local", use "localhost" as the hostname
	to connect

2003-03-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* SqlException.cs: implemented GetObjectData ().

2003-02-16  Daniel Morgan <danmorg@sc.rr.com>

	* ChangeLog: added this file

	* SqlConnection.cs: - parse data source for 3 possible uses:
	"Server=hostname", 
	"Server=hostname\\instancename", 
	"Server=hostname,port" and open the connection based on the
	resulting server name and port.  
	- Added support for named instances
	by discovery of the sql server tcp port via the sql monitor (udp port 1434)
	thanks to Phillip Jerkins (Phillip.Jerkins@morgankeegan.com) contribution.
	Also, thanks to Gonzalo and Tim for their help with timeouts.
	
