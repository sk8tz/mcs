10/3/2003
MySql - Added InternalConnection class, changes to pooling
Common - Implemented Persist Security Info

9/26/2003
Common - Added security.cs and version.cs to project

9/25/2003
MySql - Fixed DateTime handling in Parameter.cs (thanks Burkhard Perkens-Golomb)
MySql - Fixed parameter serialization where some types would throw a cast exception
MySql - Fixed DataReader to convert all returned values to prevent casting errors (thanks Keith Murray)
MySql - Added code to Command.ExecuteReader to return null if the initial SQL command throws an exception (thanks Burkhard Perkens-Golomb)

9/24/2003
MySql - Fixed ExecuteScalar bug introduced with restructure

9/23/2003
MySql - Restructure to allow for LOCAL DATA INFILE and better sequencing of packets
MySql - Fixed several bugs related to restructure.

9/10/2003
MySql - Early work done to support more secure passwords in Mysql 4.1.  Old passwords in 4.1 not supported yet

8/22/2003
MySql- Parameters appearing after system parameters are now handled correctly (Adam M. (adammil))
MySql - strings can now be assigned directly to blob fields (Adam M.)

8/20/2003
MySql - Fixed float parameters (thanks Pent)

8/7/2003
MySql - Improved Parameter ctor and ParameterCollection.Add methods to better match SqlClient (thx Joshua Mouch )
MySql - Corrected Connection.CreateCommand to return a MySqlCommand type
MySql - Fixed connection string designer dialog box problem (thanks Abraham Guyt)

7/24/2003
MySql - Fixed problem with sending commands not always reading the response packet (thanks Joshua Mouch )
MySql - Fixed parameter serialization where some blobs types were not being handled (thanks Sean McGinnis )

7/22/2003
MySql - Removed spurious MessageBox.show from DataReader code (thanks Joshua Mouch )

7/17/2003
MySql - Fixed a nasty bug in the split sql code (thanks everyone! :-) )

*************Released 0.71***********************
7/15/2003
MySql - Fixed bug in MySqlStream where too much data could attempt to be read (thanks Peter Belbin)

7/11/2003
MySql - Implemented HasRows (thanks Nash Pherson)
MySql - Fixed bug where tables with more than 252 columns cause an exception ( thanks Joshua Kessler )
MySql - Fixed bug where SQL statements ending in ; would cause a problem ( thanks Shane Krueger )
MySql - Fixed bug in driver where error messsages were getting truncated by 1 character (thanks Shane Krueger)

7/6/2003
========MySql===============
* Made MySqlException serializable (thanks Mathias Hasselmann)

========PgSql===============
* Made PgSqlException serializable (thanks Mathias Hasselmann)

***********Released 0.70*********************

6/25/2003
========MySql===============
* Updated some of the character code pages to be more accurate
* Fixed problem where readers could be opened on connections that had readers open
* Release of 0.70

6/20/2003
========MySql===============
* Moved test to separate assembly MySqlClientTests

6/19/2003
========MySql===============
* Fixed stupid problem in driver with sequence out of order (Thanks Peter Belbin)

6/18/2003
========MySql===============
* Added some pipe tests
* Increased default max pool size to 50
* Compiles with Mono 0-24

6/17/2003
========MySql===============
* Fixed connection and data reader dispose problems
* Added String datatype handling to parameter serialization

6/13/2003
========MySql===============
* Fixed sequence problem in driver that occured after thrown exception
  (thanks Burkhard Perkens-Golomb)

6/10/2003
========MySql===============
* Added support for CommandBehavior.SingleRow to DataReader
* Fixed command sql processing so quotes are better handled (thanks Theo Spears)

6/9/2003
========MySQL===============
* Fixed parsing of double, single, and decimal values to account for non-English separators.
  You still have to use the right syntax if you using hard coded sql, but if you use parameters
  the code will convert floating point types to use '.' appropriately internal both into the server
  and out.
  [ Thanks anonymous ]
* Added MySqlStream class to simplify timeOuts and driver coding.
* Fixed DataReader so that it is closed properly when the associated connection is closed.  
  [thanks smishra]
* Made client more SqlClient compliant so that DataReaders have to be closed before the connection
  can be used to run another command
* Improved DBNull.Value handling in the fields
* Added several unit tests
* Fixed MySqlException so that the base class is actually called  :-o
* Improved driver coding

=============PgSql=================
* Too many changes to document. Still basic structuring of driver.  Driver not really usable yet.



5/28/2003
* Fixed bug where NextResult was returning false on the last resultset
* Added more tests for MySQL
* Improved casting problems by equating unsigned 32bit values to Int64 and usigned 16bit values to Int32, etc

5/6/2003
* Added new ctor for MySqlParameter for (name, type, size, srccol)
* Fixed bug in MySqlDataReader where it didn't check for null fieldlist before returning field count

4/23/2003
* Started adding MySqlClient unit tests (added MySqlClient/Tests folder and some test cases)
* Fixed some things in Connection String handling

4/7/2003
* Moved INIT_DB to MySqlPool.  I may move it again, this is in preparation of the conference.

4/6/2003
* Fixed bug inside CommandBuilder that prevented inserts from happening properly
* Reworked some of the internals so that all three execute methods of Command worked properly
* FIxed many small bugs found during benchmarking

4/5/2003
* The first cut of CoonectionPooling is working. "min pool size" and "max pool size" are respected.

4/3/2003
* Work to enable multiple resultsets to be returned
* Character sets are handled much more intelligently now.  The driver queries MySQL at startup for the default character set.
  That character set is then used for conversions if that code page can be loaded.  If not, then the default code
  page for the current OS is used.  

3/31/2003
* Added code to save the inferred type in the name,value ctor of Parameter
* Also, inferred type if value of null parameter is changed using Value property
* Converted all files to use proper Camel case.  MySQL is now MySql in all files.  PgSQL is now PgSql
* Added attribute to PgSql code to prevent designer from trying to show

3/17/2003
* Added MySQLDbType property to Parameter object and added proper conversion code to convert from DbType to MySQLDbType)
* Removed unused ObjectToString method from MySQLParameter.cs
* Fixed Add(..) method in ParameterCollection so that it doesn't use Add(name, value) instead.
* Fixed IndexOf and Contains in ParameterCollection to be aware that parameter names are now stored without @ 
* Fixed Command.ConvertSQLToBytes so it only allows characters that can be in MySQL variable names
* Fixed DataReader and Field so that blob fields read their data from Field.cs and GetBytes works right
* Added simple query builder editor to CommandText property of MySQLCommand
* Fixed CommandBuilder and Parameter serialization to account for Parameters not storing @ in their names
* Removed MySQLFieldType enum from Field.cs.  Now using MySQLDbType enum

3/15/2003
* Added Designer attribute to several classes to prevent designer view when using VS.Net

3/13/2003
* Fixed Initial catalog typo in ConnectionString designer
* Removed 3 parameter ctor for MySQLParameter that conflicted with (name, type, value)
* changed MySQLParameter so paramName is now stored without leading @ (this fixed null inserts when using designer)
* Changed TypeConverter for MySQLParameter to use the ctor with all properties

0.68
========================================================================
Note that this build has not been checked out with Mono.  

3/10/2003
* Fixed sequence issue in driver

3/9/2003
* Added DbParametersEditor to make parameter editing more like SqlClient
* Fixed Command class so that parameters can be edited using the designer

3/7/2003
* Update connection string designer to support Use Compression flag

2/15/2003
* Fixed string encoding so that European characters like ä will work correctly

2/9/2003
* Creating base classes to aid in building new data providers
* Added support for UID key in connection string

2/10/2003
* Field, parameter, command now using DBNull.Value instead of null
* CommandBuilder using DBNull.Value
* CommandBuilder now builds insert command correctly when an auto_insert field is not present
* Field now uses typeof keyword to return System.Types (performance)

0.65
====================
* MySQLCommandBuilder now implemented
* Transaction support now implemented (not all table types support this)
* GetSchemaTable fixed to not use xsd (for Mono)
* Driver is now Mono-compatible!!
* TIME data type now supported
* More work to improve Timestamp data type handling
* Changed signatures of all classes to match corresponding SqlClient classes

0.60
======================
* Protocol compression  using SharpZipLib (www.icsharpcode.net)
* Named pipes on Windows now working properly
* Work done to improve Timestamp data type handling
* Implemented IEnumerable on DataReader so DataGrid would work
 
0.50
======================
* Speed increased dramatically by removing bugging network sync code
* Driver no longer buffers rows of data (more ADO.Net compliant)
* Conversion bugs related to TIMESTAMP and DATETIME fields fixed
