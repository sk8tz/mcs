2004-05-31  Atsushi Enomoto <atsushi@ximian.com>

	* SignedXml.cs : partial fix for bug #59165 that does not output
	  namespace that conflicts with element's namespace.

2004-05-13  Sebastien Pouliot  <sebastien@ximian.com>

	* SignedXml.cs: Update TODO informations.

2004-05-13  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDsigBase64Transform.cs :
	  LoadInput() should retrieve all the descendants.
	  GetOutput() should handle nodes without digging into child nodes.

2004-05-05  Atsushi Enomoto <atsushi@ximian.com>

	* SignedXml.cs,
	  Transform.cs : code cleanup. #if !NET_1_0 -> #if NET_1_1.
	* XmlDsigBase64Transform.cs : Should not output the content of the
	  selected element nodes. Put text content only those text nodes are
	  in the node list.
	* XmlDsigEnvelopedSignatureTransform.cs : removed MonoTODO.
	* XmlDsigXsltTransform.cs : Use XmlResolver to load document and
	  to transform. Throw null reference exception explicitly when
	  the input was not loaded.

2004-04-02  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlDsigEnvelopedSignatureTransform.cs, XmlDsigXPathTransform.cs,
	XmlDsigXsltTransform.cs: Fixed build for net_1_0 profile.

2004-03-30  Sebastien Pouliot  <sebastien@ximian.com>

	* Reference.cs: Changed code to use CryptoConfig to create transforms.
	This is "the" way to do it (e.g. to allow new transforms to be added)
	but cause problems when using VS.NET for debugging. Old code is still
	present, but commented, for that cause.

2004-03-27  Atsushi Enomoto <atsushi@ximian.com>

	* SignedXml.cs : namespace nodes also should be supplied for enveloped
	  objects.
	* KeyInfoRetrievalMethod.cs : Keep input element as well as others.

2004-03-27  Atsushi Enomoto <atsushi@ximian.com>

	* SignedXml.cs : XPath transformation output is not type of Stream.
	  Fix to support them by canonicalizing it.

2004-03-27  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDsigXsltTransform.cs : GetOutput() now just returns
	  transformation output.

2004-03-27  Atsushi Enomoto <atsushi@ximian.com>

	* SignedXml.cs : Added xmlns support for Manifest.

2004-03-26  Sebastien Pouliot  <sebastien@ximian.com>

	* Manifest.cs: New. Support for <Manifest> in Xml Digital Signature.
	This should help us to validate more tests from the Phaos suite.
	Note: Microsoft doesn't support this and we only support it for
	verification (not signature generation).
	* SignedXml.cs: Added support for Manifest, including recursive 
	manifests. Made some changes to reuse existing code as much as 
	possible. Better support for local/remote files - but requires
	catching an Uri exception for local files :-(.
	* XmlSignature.cs: Added constants for Manifest element and URI.

2004-03-26  Atsushi Enomoto <atsushi@ximian.com>

	* SignedXml.cs :
	  - Use specified (or default) XmlResolver to get external resource,
	    instead of using WebRequest directly. Also modified it easier.
	  - ApplyTransform() : Clone only when it is required. Handle 
	    transformation output other than Stream.
	  - Even if applicable key was not found in GetHash(), don't throw
	    crypto exception every time and just return false (MS does it).
	    Throw an exception only when no key was specified as KeyInfo.
	* XmlDsigEnvelopedSignatureTransform.cs : Fixed get_OutputTypes which
	  incorrectly set InputTypes internally.
	* XmlDsigXPathTransform.cs : Context namespace nodes in loaded 
	  transform parameter (i.e. <XPath>..</XPath>) should be registered
	  to XsltContext. Otherwise prefix binding error occurs.
	  Just filter attribute node, instead of filtering attribute children.

2004-03-25  Sebastien Pouliot  <sebastien@ximian.com>

	* SignedXml.cs: Added try/catch in CheckSignatureWithKey to return 
	false on exceptions. Fix signature-rsa-detached-xslt-transform-bad
	-retrieval-method.xml in the Phaos test suite.

2004-03-24  Atsushi Enomoto <atsushi@ximian.com>

	* Reference.cs, Signature.cs : They should keep input element and hence
	  keep namespace context nodes on LoadXml() as same as SignedInfo.
	* SignedXml.cs : Fixed SignedInfoTransformed() to fill context 
	  namespace nodes into the input document (unlike other classes, there
	  seems no other way to keep ns-nodes here).
	  Now some of W3C phaos xmldsig test passes.

2004-03-23  Atsushi Enomoto <atsushi@ximian.com>

	* SignedInfo.cs : It holds input element and directly returns it
	  unless the properties are not set.
	  Throw CryptographicException when Reference is empty *and* GetXml()
	  is *created*. (when just returning input element, no exception is
	  thrown).

2004-03-23  Atsushi Enomoto <atsushi@ximian.com>

	* DataObject.cs : It now holds element instead of each parameters.
	  Avoid loading element content to different document unless its
	  properties were modified (to keep namespace node context).

2004-03-20 Sebastien Pouliot  <sebastien@ximian.com>

	* SignedXml.cs: Removed unused (and commented) ComputeHash method.

2004-03-19  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDsigXPathTransform.cs : just found stupid bug.

2004-03-19  Sebastien Pouliot  <sebastien@ximian.com>

	* SignedXml.cs: Lot of small changes to complete TODOs and to match 
	the new unit tests.

2004-03-17  Sebastien Pouliot  <sebastien@ximian.com>

	* SignedXml.cs: The old method was working for creating signature -
	so it was reintroduced for (only) this case.

2004-03-17  Atsushi Enomoto <atsushi@ximian.com>

	* SignedXml.cs : the result from enveloped signature transform should
	  be canonicalized before getting its hash.
	* XmlDsigEnvelopedSignatureTransform.cs : in XPath selection,
	  if the node is Signature itself it is not allowed.
	  PreserveWhitespace is required.

2004-03-16  Sebastien Pouliot  <sebastien@ximian.com>

	* SignedXml.cs: Changed (again). This time we use the Stream when 
	loading the document. We now pass 14 out of 15 of the Merlin's
	tests (including one that MS fails). The only failing test is the
	one that use the EnvelopedTransform (unfinished).

2004-03-16  Sebastien Pouliot  <sebastien@ximian.com>

	* SignedXml.cs: Commented my last changes to SignedXml as it made other
	unis tests fail (in the c14n-izer).

2004-03-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDsigNodeList.cs : removed BOM from code file.

2004-03-16  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDsigNodeList.cs : added.
	* XmlDsigXPathTransform.cs : removed XmlDsigNodeList class.
	* XmlDsigEnvelopedSignatureTransform.cs :
	  Implemented GetOutput(). However, it is totally MS behavior
	  dependent and not based on the spec (we can reimplement it based on
	  improved XmlDsigXPathTransform).
	* SignedXml.cs : in GetOutput(), accept XmlNodeList input too.

2004-03-15  Sebastien Pouliot  <sebastien@ximian.com>

	* SignedXml.cs: Now use the original Signature element before applying
	the C14N transformation. Added a check for null in LoadXml.

2004-03-14  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDsigXPathTransform.cs : implemented GetOutput() (with some 
	  internal XPath context classes).

2004-03-13  Atsushi Enomoto <atsushi@ximian.com>

	* XmlDsigXsltTransform.cs : LoadInnerXml() should just load stylesheet
	  and LoadInput() should just load transformed document.
	  Transformation should be done in GetOutput() because either of the
	  stylesheet or input can be loaded in prior. Adjusted code format.

2004-03-12  Sebastien Pouliot  <sebastien@ximian.com>

	* Signature.cs: KeyInfo isn't required in schema.
	* SignedInfo.cs: Added support for missing HMACOutputLength.
	* SignedXml.cs: Added support to download a reference (experimental).
	Now throw exception for unknown hash algorithm or canonicalization 
	methods. Changed GetPublicKey to iterate all available keys (not just
	the first one).

2004-03-09  Atsushi Enomoto <atsushi@ximian.com>

	* KeyInfo.cs : Attribute Id was not handlded.
	* KeyInfoX509Data.cs : all array members return null when there are
	  no such contents. Just find child elements, not descendants.
	* SignedXml.cs : key is not always required when CheckSignature() is
	  called.
	* XmlDsigXsltTransform.cs : LoadInput should allow node list.
	* XmlSignature.cs : added GetChildElements().

2004-03-09  Atsushi Enomoto <atsushi@ximian.com>

	* KeyInfoX509Data.cs : trivial local var name fix.

2004-03-09  Atsushi Enomoto <atsushi@ximian.com>

	* KeyInfoX509Data.cs,
	  Reference.cs,
	  SignedInfo.cs,
	  XmlSignature.cs : GetElementsByTagName() should be eliminated or
	  at least should use namespace URI.

2004-03-04  Atsushi Enomoto <atsushi@ximian.com>

	* KeyInfo.cs :
	  Fixed LoadXml() to skip text nodes as MS.NET does.
	  Uncommented out RSAKeyValue.
	* Signature.cs : Fixed LoadXml(). Don't use GetElementsByTagName()
	  that incorrectly acquires descendants. Throw CryptographicException
	  if required elements were not found.
	* Transform.cs : added internal GetResolver().
	* XmlDsigXPathTransform.cs,
	  XmlDsigXsltTransform.cs : use XmlResolver.

2004-02-19  Tim Coleman <tim@timcoleman.com>
	* SymmetricKeyWrap.cs:
		Add AES Key Wrap
	* EncryptedXml.cs:
		Add calls to SymmetricKeyWrap

2004-02-11  Sebastien Pouliot  <sebastien@ximian.com>

	* Reference.cs: Added LoadInnerXml to transforms. Removed unused 
	variable.
	* Transform.cs: Import GetInnerXml in GetXml.
	* XmlDsigBase64Transform.cs: Now use a StreamWriter to avoid multiple
	allocations.
	* XmlDsigC14NTransform.cs: Added Stream support to LoadInput
	* XmlDsigXPathTransform.cs: Fixed GetInnerXml to include xpath 
	expression and LoadInput. It nows match MS implementation but doesn't
	work like I think it should (but neither is MS implementation).

2004-02-10  Tim Coleman <tim@timcoleman.com>
	* DataReference.cs EncryptedKey.cs EncryptedXml.cs
	* KeyInfoEncryptedKey.cs KeyReference.cs ReferenceList.cs
	* X509IssuerSerial.cs XmlDecryptionTransform.cs:
		Add new classes for Xml Encryption in 1.2
	* CipherData.cs CipherReference.cs EncryptedData.cs
	* EncryptedReference.cs EncryptionMethod.cs EncryptionProperty.cs :
		Change NamespaceURI reference to EncryptedXml class.
		Make compliant with 1.2
	* XmlEncryption.cs:
		Add new entity names.


2004-02-07  Tim Coleman <tim@timcoleman.com>
	* CipherData.cs CipherReference.cs EncryptedData.cs
	* EncryptedReference.cs EncryptedType.cs EncryptionMethod.cs
	* EncryptionProperties.cs EncryptionProperty.cs XmlEncryption.cs:
		New classes added for Xml Encryption in 1.2
	* KeyInfoRetrievalMethod.cs:
		Added Type attribute for 1.2
	* XmlSignature.cs:
		Added string constants for algorithm namespaces

2004-01-11  Sebastien Pouliot  <spouliot@videotron.ca>

	* SignedXml.cs: Fixed class signature (for 1.1+) by adding public to 
	Resolver property.
	* Transform.cs: Fixed class signature (for 1.1+) by adding public to 
	Resolver property.

2003-12-14  Sebastien Pouliot  <spouliot@videotron.ca>

	* SignedXml.cs: Now load the public key when verifying (bug #52084)
	and can find an element by it's Id when Id isn't defined in DTD or XSD.

2003-07-27  Sebastien Pouliot  <spouliot@videotron.ca>

	* XmlSignature.cs: Changed USE_VERSION_1_0 for NET_1_0.

2003-07-24  Sebastien Pouliot  <spouliot@videotron.ca>

	* XmlDsigC14NTransform.cs: Patch to use Mono.Xml.XmlCanonicalizer
	from Aleksey Sanin.

2003-06-19  Nick Drochak <ndrochak@gol.com>

	* DSAKeyValue.cs:
	* RSAKeyValue.cs: Work around for mcs? bug 45127.

2003-06-11  Sebastien Pouliot <spouliot@motus.com>

	* SignedXml.cs: Changed USE_VERSION_1_0 for NET_1_0.
	* Transform.cs: Changed USE_VERSION_1_0 for NET_1_0.

2003-05-25  Sebastien Pouliot  <spouliot@videotron.ca>

	* XmlSignature.cs: Changed string "RetrievalElement" to "RetrievalMethod"
	to match framework 1.1 (this was a bug in framework 1.0).

2003-05-10  Sebastien Pouliot  <spouliot@videotron.ca>

	* SignedXml.cs: Added property XmlResolver Resolver as per framework 1.1
	documentation (no public declaration).
	* Transform.cs: Added property XmlResolver Resolver as per framework 1.1
	documentation (no public declaration).

2003-03-03  Sebastien Pouliot  <spouliot@videotron.ca>

	* DSAKeyValue.cs: Added patch from Atsushi Eno (to remove string
	XML generation).
	* RSAKeyValue.cs: Added patch from Atsushi Eno (to remove string
	XML generation).
	* XmlDsigBase64Transform.cs: Fixed problem when using XPath.

2003-03-02  Sebastien Pouliot  <spouliot@videotron.ca>

	* DSAKeyValue.cs: New XML generation is commented. Old string technique
	did a better job to match MS implementation.
	* DataObject.cs: Replaced XML generation from StringBuilder to XmlElement.
	* KeyInfo.cs: Replaced XML generation from StringBuilder to XmlElement.
	* KeyInfoName.cs: Replaced XML generation from StringBuilder to XmlElement.
	* KeyInfoNode.cs: Replaced XML generation from StringBuilder to XmlElement.
	* KeyInfoRetrievalMethod.cs: Replaced XML generation from StringBuilder to XmlElement.
	* KeyInfoX509Data.cs: Replaced XML generation from StringBuilder to XmlElement.
	* RSAKeyValue.cs: New XML generation is commented. Old string technique
	did a better job to match MS implementation.
	* Reference.cs: Replaced XML generation from StringBuilder to XmlElement.
	* Signature.cs: Replaced XML generation from StringBuilder to XmlElement.
	* SignedInfo.cs: Replaced XML generation from StringBuilder to XmlElement.
	* SignedXml.cs: Replaced XML generation from StringBuilder to XmlElement.
	* Transform.cs: Replaced XML generation from StringBuilder to XmlElement.
	* XmlDsigEnvelopedSignatureTransform.cs: Added missing Algorithm URL.
	* XmlDsigXPathTransform.cs: Added missing Algorithm URL.
	* XmlSignature.cs: New. Private contants (construct similar to WSE).

2003-02-19  Sebastien Pouliot  <spouliot@videotron.ca>

	* All: Corrected class indentation, minor fixes, added many MonoTODO (so class status
	will reflect reality).

2003-01-17  Sebastien Pouliot  <spouliot@videotron.ca>

	* KeyInfo.cs: Changed some protected declaration to private.
	* KeyInfoName.cs: Changed some protected declaration to private.
	* KeyInfoNode.cs: Changed some protected declaration to private.
	* KeyInfoRetrievalMethod.cs: Changed some protected declaration to private.
	* KeyInfoX509Data.cs: Changed some protected declaration to private.
	* Transform.cs: Changed some protected declaration to private.
	* XmlDsigBase64Transform.cs: Changed some protected declaration to private.
	* XmlDsigC14NTransform.cs: Changed some protected declaration to private.
	* XmlDsigC14NWithCommentsTransform.cs: Changed some protected declaration to private.
	* XmlDsigEnvelopedSignatureTransform.cs: Changed some protected declaration to private.
	* XmlDsigXPathTransform.cs: Changed some protected declaration to private.
	* XmlDsigXsltTransform.cs: Changed some protected declaration to private.

2002-11-28  Sebastien Pouliot  <spouliot@videotron.ca>

	* TODOAttribute.cs: New. Still much to do ;-)
	* XmlDsigXPathTransform.cs: Corrected to compile. Transform is non-
	functionnal.
	* XmlDsigXsltTransform.cs: Corrected to compile. Transform is non-
	functionnal.

2002-11-20  Sebastien Pouliot  <spouliot@videotron.ca>

	* DataObject.cs: New. Complete implementation.
	* DSAKeyValue.cs: New. Complete implementation.
	* KeyInfo.cs: New. Complete implementation.
	* KeyInfoClause.cs: New. Abstract class (complete).
	* KeyInfoName.cs: New. Complete implementation.
	* KeyInfoNode.cs: New. Complete implementation.
	* KeyInfoRetrievalMethod.cs: New. Complete implementation.
	* KeyInfoX509Data.cs: New. Complete implementation.
	* Reference.cs: New. Incomplete implementation.
	* RSAKeyValue.cs: New. Complete implementation.
	* Signature.cs: New. Almost complete implementation - returned
	XML isn't exactly like the MS implementation.
	* SignedInfo.cs: New. Complete except SignatureLength.
	* SignedXml.cs: New. Minimal implementation (only enveloped signatures).
	Still many TODO!
	* Transform.cs: New. Abstract class (complete).
	* TransformChain.cs: New. Complete implementation.
	* XmlDsigBase64Transform.cs: New. Stub + basic logic.
	* XmlDsigC14NTransform.cs: New. Stub + basic logic.
	* XmlDsigC14NWithCommentsTransform.cs: New. Stub + basic logic.
	* XmlDsigEnvelopedSignatureTransform.cs: New. Stub + basic logic.
	* XmlDsigXPathTransform.cs: New. Stub + basic logic.
	* XmlDsigXsltTransform.cs: New. Stub + basic logic.
