2004-10-30 Umadevi S <sumadevi@novell.com>
	* Tds.cs : GetColumnValue method: handling null guid values correctly.
		This fixes bug #68804. 
		Thanks for the patch /bug report by Aleksandar Dezelin

2004-10-14 Umadevi S <sumadevi@novell.com>
	* Tds.cs : GetTextValue method- handling zero length string correctly
		This fixes bug #67916

2004-08-14 Geoff Norton <gnorton@customerdna.com>

	* TdsComm.cs: 
          Tds70.cs: 
                Make Tds70 work on Big Endian machines.
		BitConverter uses unsafe and returns things in host order; we need to 
		swap some values to put them back into the approrpiate order for the wire.

2004-08-09 Sureshkumar T <tsureshkumar@novell.com>
	* Tds70.cs - Prepare Method stored procedure handle read problem fixed.

2004-06-30 Umadevi S <sumadevi@novell.com>
	* Tds.cs - In the NextResult method handling TdsPacketSubType. TableName. 


2004-04-22  Sebastien Pouliot <sebastien@ximian.com> 

	* Tds70.cs: Updated to match changes in Mono.Security.dll.

2004-04-05  Lluis Sanchez Gual  <lluis@ximian.com>

	* ITds.cs: Added method for reseting a connection.
	* Tds.cs: Added base implementation for ITds.Reset.
	* Tds70.cs: Implemented ITds.Reset().
	* TdsConnectionPool.cs: Implemented connection pool that can be reused by 
	  all Tds clients.

2004-04-01  Lluis Sanchez Gual  <lluis@ximian.com>

	* Tds.cs: All methods now return DBNull instead of null for null values.
	* Tds50.cs, Tds70.cs: Support parameters with DBNull value.

2003-12-21  Tim Coleman <tim@timcoleman.com>
	* Tds70.cs:
		Fix Integrated Security to work with Domain users.

2003-12-06  Sebastien Pouliot <spouliot@videotron.ca> 
	for Daniel Morgan <danielmorgan@verizon.net>

	Sebastien Pouliot (spouliot@motus.com) helped me greatly with his
	NTLM stuff.
	
	* Mono.Data.Tds.Protocol/Tds.cs
	* Mono.Data.Tds.Protocol/Tds70.cs
	* Mono.Data.Tds.Protocol/TdsConnectionParameters.cs
	* Mono.Data.Tds.Protocol/TdsPacketSubType.cs
	* Mono.Data.Tds.Protocol/TdsPacketType.cs: added NT Authentication aka
	Integrated Security aka Domain Login
	
2003-10-19  Joerg Rosenkranz <joergr@voelcker.com>

	* Tds.cs (GetStringValue): A string length of 0xFF (255) is not
	misinterpreted as special value anymore.
	
	This is a fix to bug #49835.

2003-10-03  Diego Caravana  <diego@toth.it>

	* Tds70.cs: Now handles parameters of type ReturnValue and
	InputOutput.
	(BuildParameters): skips the ReturnValue params and builds the
	set string considering the assigned value for InputOutput ones.
	(BuildProcedureCall): like the preceding one plus adds the return
	value to the final select.
	
2003-08-22  Duncan Mak  <duncan@ximian.com>

	* Tds.cs (ProcessEndToken): RecordsAffected was not filled
	correctly. I've found out that the record count was submitted for
	TdsPacketSubType.Done. So I changed the behaviour to include this
	(without deeper knowledge of the TDS protocol). Patch from Jörg
	Rosenkranz <joergr@voelcker.com>.

	This is part of a fix to bug #40315.
	
2003-05-07  Miguel de Icaza  <miguel@ximian.com>

	Patches from Igor Nosyryev <nosyryev@attbi.com>
	
	* TdsComm.cs: (GetString): GetString adds extra byte to a string
	at end. It suppose to be '\0', but '\0' is valid value in .NET
	string, so this byte must not be used.
 
	* Tds.cs (GetDecimalValue):Method reads extra byte if a DECIMAL
	field contains NULL. As a result server's response is parsed
	incorrectly and this method fires an exception.

2003-01-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Tds70.cs:
	(FormatParameter): send input/output parameter names. This way we don't
	depend on the parameter position being different of the index in the
	parameter collection.

2002-12-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Tds.cs:
	(Disconnect): close the stream and set connected to false.
	(NextResult): check if after DoneProc we have a ColumnMetadata + Row,
	which holds the values for the output parameters and read them.
	(LoadRow): add the values to outputParameters if DoneProc.
	When executing a stored procedure, we execute the procedure and then
	select the parameter values.

	* Tds70.cs:
	(BuildParameters): check Parameters.

	* TdsComm.cs: added Close () to close the stream.

	* TdsConnectionParameters.cs: initialize all the string to be empty.

2002-11-04  Tim Coleman (tim@timcoleman.com)
	* TdsBigDecimal.cs:
		New class added to handle (potentially) large
		decimal values
	* Tds.cs:
		Modified to use TdsBigDecimal instead of
		decimal for transit of (potentially) large
		decimal values

2002-11-03  Tim Coleman (tim@timcoleman.com)
	* TdsColumnStatus.cs:
		Newly added to handle column metadata
	* Tds.cs
		Handle table name and column detail results
	* Tds42.cs
	* Tds50.cs
	* Tds70.cs
		rename TableName BaseTableName for consistency
	* TdsPacketSubType.cs:
		We now know what subtype 0xa5 is
	* TdsPacketTableNameResult.cs:
		Add means to store table names
	* TdsSchemaInfo.cs:
		Add new schema information

2002-11-01  Tim Coleman (tim@timcoleman.com)
	* ITds.cs:
		Add DoneProc property
	* Tds.cs:
		*Lots*.  Some stuff to get binary types
		to work, other stuff to get new prepares
		working.
	* TdsPacketEndTokenResult.cs:
		Add Packetsubtype property
	* TdsPacketRowResult:
		Now implements ICollection and IList.

2002-10-31  Tim Coleman (tim@timcoleman.com)
	* TdsSchemaInfo.cs:
		Added because I can't really use SchemaInfo
	* ITds.cs:
	* Tds.cs :
	* TdsPacketColumnInfoResult.cs :
		ChangeDefinition of schema
	* Tds42.cs :
	* Tds50.cs :
	* Tds70.cs :
		Add new information to schema


2002-10-30  Tim Coleman (tim@timcoleman.com)
	* TdsColumnSchema.cs:
		Ditch this in favor of System.Data.Common.SchemaInfo
	* ITds.cs:
		Change ColumnInfo to Schema
	* Tds.cs:
		Uses new SchemaInfo object
		Supports TEXT now.	
	* Tds42.cs:
	* Tds50.cs:
	* Tds70.cs:
	* TdsPacketColumnInfoResult.cs:
	* TdsPacketRowResult.cs:
		Uses new SchemaInfo object
	

2002-10-29  Tim Coleman (tim@timcoleman.com)
	* ITds.cs:
		Add OutputParameters collection
	* Tds.cs:
		Much reformatting, added handling for dates,
		fixed handling of output parameters, and a
		whole lot more
	* TdsPacketEndTokenResult.cs:
		Remove incorrect exception
	* TdsPacketType.cs:
		Add Logoff packet type.

2002-10-28  Tim Coleman (tim@timcoleman.com)
	* Tds.cs:
		Add much handling to get the following types
		working in queries: string, int, decimal
		All sorts of other bug fixing and general
		purpose hackery.
	* Tds42.cs:
	* Tds50.cs:
	* Tds70.cs:
		ProcessColumnInfo was abstracted in Tds.cs
		and subclassed, because 7.0 provides the information
		in a different format.
	* TdsColumnSchema.cs:
		Added size, precision, scale
	* TdsComm.cs:
		Fixed GetString because it wasn't working properly
		with TDS 7.0.
	* TdsMessage.cs:
		Change state and severity to byte instead of int
		because that is more consitent.
		

2002-10-25  Tim Coleman (tim@timcoleman.com)
	* TdsPacketErrorResultCollection.cs:
		New class added for exporting errors
	* ITds.cs:
	* Tds.cs:
	* Tds70.cs:
	* TdsComm.cs:
	* TdsPacketEndTokenResult.cs:
	* TdsPacketRowResult.cs:
		Changes to make SqlClient build.

2002-10-24  Tim Coleman (tim@timcoleman.com)
	* ITds.cs:
		Added column info, and NextResult/NextRow
		to interface
	* TdsColumnSchema.cs:
		New class added to keep track of column info
	* Tds.cs:
		Many, many changes to get queries working
		for the most part.
	* TdsPacketColumnInfoResult.cs:
	* TdsPacketColumnNamesResult.cs:
		Doesn't use a DataColumnCollection anymore
		Also more complete.
	* TdsPacketRowResult.cs:
		Added Add() method.

2002-10-23  Tim Coleman (tim@timcoleman.com)
        * ITds.cs:
        * Tds42.cs:
        * Tds50.cs:
        * Tds70.cs:
        * Tds80.cs:
                New classes added.  Functionality
                is split up because different protocols
                have slight differences.
        * Tds.cs:
                Remove some unnecessary code after
                the above split, and add in a whole
                lot more stuff for completeness.
        * TdsColumnType.cs:
                Fix Int4.  Wrong enum value.
        * TdsComm.cs:
                Move the encoder out of constructor
                because we don't know the charset at
                that point
        * TdsConnectionParameters.cs:
                Small changes
        * TdsPacketEndTokenResult.cs:
                Implement ToString ()


2002-10-22  Tim Coleman (tim@timcoleman.com)
	* Tds.cs :
		More implementation.  Does some
		query stuff now.  Can also change
		database.
	* TdsConnectionParameters.cs:
		Rename Host to DataSource, and
		add Hostname for the local hostname.
	* TdsPacketEndTokenResult.cs:
		Change TODO attribute
	* TODOAttribute.cs:
		New class added
	

2002-10-21  Tim Coleman (tim@timcoleman.com)
	* Tds.cs
	* TdsComm.cs:
		A whole slew of changes to get logon
		to work (it now works in both TDS 7.0
		and TDS 4.2) ... danmorg can test with
		8.0 if he likes.
		TdsComm has some simplifications too,
		because C# has some features not present
		in the Java implementation.
	* TdsConnectionParameters.cs:
		Change a few default values.
	* TdsMessage.cs:
		Implement this class.

2002-10-20  Tim Coleman (tim@timcoleman.com)
	* TdsColumnType.cs:
	* TdsContext.cs:
	* TdsEnvPacketSubType.cs:
	* TdsMessage.cs:
	* TdsPacketColumnInfoResult.cs:
	* TdsPacketColumnNamesResult.cs:
	* TdsPacketColumnOrderResult.cs:
	* TdsPacketControlResult.cs:
	* TdsPacketEndTokenResult.cs:
	* TdsPacketErrorResult.cs:
	* TdsPacketMessageResult.cs:
	* TdsPacketOutputParam.cs:
	* TdsPacketResult.cs:
	* TdsPacketRetStatResult.cs:
	* TdsPacketRowResult.cs:
	* TdsPacketSubType.cs:
	* TdsPacketTableNameResult.cs:
	* TdsPacketUnknown.cs:
		New classes added as part of TDS internal implementation.
	* Tds.cs:
		Some work on receiving and interpreting packages received from
		SQL Server.  Still doesn't work completely.
	* TdsComm.cs:
		Add some methods as part of the ongoing work with Tds.cs
	* TdsConnectionParameters.cs:
		Add default values for Encoding ("iso-8859-1"), Port (1433), 
		TDS Version (4.2).

2002-10-18  Tim Coleman (tim@timcoleman.com)
	* TdsConnectionInternal:
		Add some implementation details
	* TdsCommInternal:
		New class, which will handle the low-level
		communication with the database
	* TdsPacketTypeInternal:
		Add new packet type, TdsPacketTypeInternal.None
		which is used when no packet is being constructed.
		The value is 0.

2002-10-17  Tim Coleman (tim@timcoleman.com)
	* ChangeLog:
		New changelog added
	* TdsCommandInternal.cs:
	* TdsConnectionInternal.cs:
	* TdsPacketTypeInternal.cs:
	* TdsServerTypeInternal.cs:
	* TdsTransactionInternal.cs:
	* TdsVersionInternal.cs:
		New classes added.  These are the
		internal implementations, meant for
		"wrapping" from other locations.
