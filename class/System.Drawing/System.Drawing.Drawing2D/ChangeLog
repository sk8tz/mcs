2004-07-16  Ravindra  <rkumar@novell.com>

	* GraphicsPathIterator.cs: New implementation using GDI+ APIs.
	This change makes this class fit into the rest of the design well
	and also it takes care of a scenario when path gets modified. Old
	implementation was not taking care of this.

2004-07-15  Ravindra  <rkumar@novell.com>

	* GraphicsPath.cs: Implemented PathData property and some formatting.

2004-07-15  Ravindra  <rkumar@novell.com>

	* CombineMode.cs, CompositingMode.cs, CompositingQuality.cs,
	GraphicsPath.cs, CoordinateSpace.cs, DashCap.cs, DashStyle.cs,
	FillMode.cs, FlushIntention.cs, GraphicsPath.cs, GraphicsState.cs,
	InterpolationMode.cs, LineCap.cs, LineJoin.cs, LinearGradientMode.cs,
	Matrix.cs, MatrixOrder.cs, PathPointType.cs, PenAlignment.cs,
	PenType.cs, PixelOffsetMode.cs, QualityMode.cs, SmoothingMode.cs,
	WarpMode.cs, WrapMode.cs: Changed format dos2unix.

	* GraphicsContainer.cs, GraphicsPathIterator.cs, PathData.cs,
	RegionData.cs:  Changed format dos2unix and changed instance variables'
	access default/internal to private.

2004-07-13  Ravindra  <rkumar@novell.com>

	* PathGradientBrush.cs: Removed all the private variables.
	Now, we get/set everything from libgdiplus. This is cleaner.

2004-05-18  Ravindra  <rkumar@novell.com>

	* LinearGradientBrush.cs: Added checks for the values of
	focus and scale parameters in SetBlendTriangularShape and
	SetSigmaBellShape methods.
	* PathGradientBrush.cs: Same as above.

2004-06-13  Gert Driesen <drieseng@users.sourceforge.net>

	* DashCap.cs: fixed mismatches in enum field values
	* HatchStyle.cs: fixes mismatches in enum field values

2004-05-18  Ravindra  <rkumar@novell.com>

	* CustomLineCap.cs: Added null checks and corrected Dispose method.

2004-05-17  Duncan Mak  <duncan@ximian.com>

	* GraphicsPathIterator.cs: Untabify and fixed coding style.
	(GraphicsPathIterator): Store the path count, path points and path
	type arrays instead of calling unmanaged functions in GDI+ each
	time to get to get the path data.
	(CopyData, Enumerate, HasCurve, Rewind, SubpathCount):
	Implemented.

2004-05-16  Gert Driesen <drieseng@users.sourceforge.net>

	* GraphicsPath.cs: renamed SetMarker to SetMarkers, to fix
	public API to match MS.NET

2004-05-15  Duncan Mak  <duncan@ximian.com>

	* GraphicsPath.cs: Instead of casting null to an IntPtr, use
	IntPtr.Zero instead. Thanks to Nick Drochak for spotting this.

2004-05-14  Nick Drochak <ndrochak@gol.com>

	* GraphicsPath.cs: fix build with csc.  No implicit conversion from
	null to IntPtr.  Bug in mcs?

2004-05-14  Duncan Mak  <duncan@ximian.com>

	* GraphicsPath.cs (ConvertPoints): Removed, we'll do the
	conversion in C.
	(GraphicsPath): Use GdipCreatePath2I instead.
	(SetMarker, ClearMarkers):
	(Flatten, GetBounds, IsOutlineVisible, IsVisible):
	(StartFigure, CloseFigure, CloseFigures):
	(Warp, Widen): Implemented. I left the MonoTODO attribute on for
	the methods where the equivalent C function has not yet been
	implemented.

	* GraphicsPathIterator.cs (Count): Implemented.

2004-05-13  Sanjay Gupta <gsanjay@novell.com>

	* GraphicsState.cs: Added internal constructor.

2004-05-13  Sanjay Gupta <gsanjay@novell.com>

	* GraphicsPath.cs: Added stub for missing method CloseFigure().

2004-05-11  Ravindra  <rkumar@novell.com>

	* AdjustableArrowCap.cs: Implemented.
	* CustomLineCap.cs: Implemented.

2004-05-04  Ravindra  <rkumar@novell.com>

	* LinearGradientBrush.cs: Fixed Transform property.

2004-04-30  Ravindra  <rkumar@novell.com>

	* LinearGradientBrush.cs: Fixed some errors.

2004-04-06  Duncan Mak  <duncan@ximian.com>

	* GraphicsPath.cs (GraphicsPath): Filled out the missing
	constructors.
	(ConvertPoints): New helper function. Converts a Point array to a
	PointF array.
	
2004-04-05  Jordi Mas i Hernandez <jordi@ximian.com>
	* GraphicsPath.cs: added missing methods
	
2004-04-01  Duncan Mak  <duncan@ximian.com>
	* GraphicsPath.cs (AddCurve, AddClosedCurve): Added all overloads.

2004-03-26  Ravindra  <rkumar@novell.com>
	* WrapMode.cs: Corrected the TileFlipXY and TileFlipY values.

2004-03-23  Ravindra  <rkumar@novell.com>
	* LinearGradientBrush.cs: Implemented public methods.

2004-03-22  Ravindra  <rkumar@novell.com>
	* LinearGradientBrush.cs: Implemented constructors and properties.
	* PathGradientBrush.cs: Fixed a constructor and few coding
	style fixes. 

2004-03-18  Ravindra  <rkumar@novell.com>
	* HatchBrush.cs: Fixed Clone method.
	* PathGradientBrush.cs: Fixed Clone method and few minor
	fixes.

2004-03-17  Ravindra  <rkumar@novell.com>
	* Blend.cs: Fixed.
	* ColorBlend.cs: Fixed.

2004-03-06  Ravindra  <rkumar@novell.com>
	* PathGradientBrush.cs: Implemented methods.

2004-03-06  Ravindra  <rkumar@novell.com>
	* PathGradientBrush.cs: Implemented constructors and properties.

2004-03-04  Duncan Mak  <duncan@ximian.com>

	* GraphicsPath.cs (PathCount): Corrected. The name should be PointCount.
	(AddPath): Implemented.

2004-02-27  Ravindra <rkumar@novell.com>

	* WrapMode.cs: Corrected enum values. Tile should be zero
	and Clamp should be four.

2004-02-11  Ravindra <rkumar@novell.com>

	* Matrix.cs: Added status checks using 
	GDIPlus.CheckStatus(Status) method.

2004-02-07  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* GraphicsPathIterator.cs: Fixed signature, added TODOs
	* Matrix.cs: Removed additional method

2004-02-06  Ravindra <rkumar@novell.com>

	* HatchBrush.cs: Using CheckStatus method instead of
	GetException.

2004-02-05  Ravindra <rkumar@novell.com>

	* HatchBrush.cs: Implemented.
	* HatchStyle.cs: Corrected enum values. Changed file format
	from DOS to UNIX.

2004-01-30  Duncan Mak  <duncan@ximian.com>

	* GraphicsPath.cs (AddPie): Corrected arguments sent to
	P/Invoke. This fixes the strange NaNs we were getting when we
	tried to draw Paths with a Pie figure.

2004-01-24  Duncan Mak  <duncan@ximian.com>

	* GraphicsPath.cs (AddEllipse): Added.

2004-01-19  Duncan Mak  <duncan@ximian.com>

	* GraphicsPath.cs: Implemented. Still needs testing, though.
	Particular the PathPoints property, I ran into a P/Invoke problem,
	I need to first fix that before I can go on with the rest of the testing.

2004-01-13  Ravindra  <rkumar@novell.com>

	* Matrix.cs: Made the Matrix(IntPtr) constructor internal.
	Because default access is private, that makes it unusable
	by other classes.

2004-01-11  Duncan Mak  <duncan@ximian.com>

	* Matrix.cs (Matrix): Removed reference to GpRect/GpRectF.

2004-01-10  Ravindra  <rkumar@novell.com>

	* All Enums: Made serializable.

	* GraphicsPathIterator.cs: Implements IDisposable.

	* GraphicsState.cs: Inherits MarshalByRefObject.

2003-12-25  Duncan Mak  <duncan@ximian.com>

	* Matrix.cs (ToString): Cache the elements inside a local variable
	to avoid calling the Elements property repeatedly.

2003-12-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Blend.cs: fix array sizes in the constructors. Closes bug #51564.
	System.Web moves in mysterious ways.

2003-11-22  Duncan Mak  <duncan@ximian.com>

	* Matrix.cs: Rewrote to use GDI+ implementation, doing all the
	math in unmanaged code instead of doing it in C#.

2003-11-04  Miguel de Icaza  <miguel@ximian.com>

	* GraphicsPathIterator.cs: Do not make this protected.

2003-11-13  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* QualityMode.cs: Fixed typo
	* InterpolationMode.cs: Fixed typo
	* RegionData.cs: Fixed signatures, partially implemented
	* PathGradientBrush.cs: Fixed signatures
	* PathData.cs: Fixed signature, implemented
	* LinearGradientBrush.cs: Added missing MonoTODOs, fixed typo
	* GraphicsContainer.cs: Added private constructor
	* CustomLineCap.cs: Fixed typos, fixed inheritance, removed unneeded member

2003-11-11 Ben Maurer  <bmaurer@users.sourceforge.net>

	* ColorBlend.cs (Positions): another one.

2003-11-11 Ben Maurer  <bmaurer@users.sourceforge.net>

	* Blend.cs (Positions): recursion in prop.

2003-10-24  Miguel de Icaza  <miguel@ximian.com>

	* GraphicsPath.cs: Stub some more.

2003-10-12 Alexandre Pigolkine <pigolkine@gmx.de>
	* GraphicsState.cs		internal member added

2003-06-26 Alexandre Pigolkine <pigolkine@gmx.de>
	* GraphicsState.cs		internal member added
	
2003-04-26 Alexandre Pigolkine <pigolkine@gmx.de>
	* LinearGradientBrush.cs  some implementation added

2003-3-15 DennisHayes <dennish@raytek.com>
	* Stubbed and somewhat implmented

	* CustomLineCap.cs
	* GraphicsContainer.cs
	* GraphicsPath.cs
	* GraphicsPathIterator.cs
	* GraphicsState.cs
	* HatchBrush.cs
	* LinearGradientBrush.cs

2003-3-5 DennisHayes <dennish@raytek.com>
	* Added values for enums
	* Stubbed and somewhat implmented Blend, ColorBlend, CustomLineCap


2003-3-2  DennisHayes <dennish@raytek.com>

	* Created changelog
	* updated copyrights to 2002/3
	* changed namespace from System.Drawing, System.Drawing.Drawing2d to System.Drawing.Drawing2D
	* cosmetic improvments

2002-10-13  DennisHayes <dennish@raytek.com>
	* Changed namespace from *2d to *2D
	* Changed comment header from system.Drawing to System.Drawing.Drawing2D

2002-9-2  DennisHayes <dennish@raytek.com>
	
	* AdjustableArrowCap.cs
	* Blend.cs
	* ColorBlend.cs
	* CombineMode.cs
	* CompostingMode.cs
	* CompostingQuality.cs
	* CoordinateSpace.cs
	* CustomLineCap.cs
	* DashCap.cs
	* DashStyle.cs
	* FillMode.cs
	* FlushIntention.cs
	* GraphicsContainer.cs
	* GraphicsPathIterator.cs
	* GraphicsState.cs
	* HatchBrush.cs
	* HatchStyle.cs
	* InterpolationMode.cs
	* LinearGradientBrush.cs
	* LinearGradientMode.cs
	* LineCap.cs
	* LineJoin.cs
	* MatrixOrder.cs
	* PathData.cs
	* PathGradientBrush.cs
	* PathPointType.cs
	* PenAligment.cs
	* PenType.cs
	* PixelOffsetMode.cs
	* QualityMode.cs
	* RegionData.cs
	* SmoothingMode.cs
	* WarpMode.cs
	* WrapMode.cs
	* Added null classes for most/all classes, Many stubs, and some implmentation

2002-9-2  DennisHayes <dennish@raytek.com>

	* Matrix.cs
	* Added stubs, implmentation

2002-9-2  DennisHayes <dennish@raytek.com>

	* GraphicsPath.cs
	* added stub needed for system.windows.forms

2002-01-06  Ravi Pratap  <ravi@ximian.com>

	* ChangeLog : Add.

	* Matrix.cs : MonoTODO everywhere.

	* TODOAttribute.cs : Add here too.
