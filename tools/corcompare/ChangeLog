2004-06-02  Gert Driesen <drieseng@users.sourceforge.net>

	* mono-api-diff.cs: also report mismatches in protected members
	* mono-api-info.cs: fixed issue where counters were not output
	for missing attributes if there were no other mismatches

2003-11-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* mono-api.xsl: handle <interface>, which is different from
	<class name="x" type="interface"...>.

2003-11-14  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* mono-api-diff.cs: added a couple of missing attributes for extra
	classes.

2003-11-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* mono-api-diff.cs: ensure no nested type gets in as non-nested.
	(May be a bug in MS?). Added ptype and params attributes for properties.

	* mono-api-info.cs: fixed some cases where there's a name duplication
	(multiple attributes, properties). Fixed completion counters.

2003-11-12  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* mono-api-diff.cs: fixed attribute handling for members. Fixed counts
	for properties.
	* mono-api-info.cs: don't output .cctor information.

2003-11-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* mono-api-diff.cs: fixed nullref and add warning when class type do not
	match.

	* mono-api-info.cs: ignore private classes.

2003-11-11  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CorCompare.exe.sources: not needed now.
	 
	* Makefile: updated to build the 3 exes we have now.

	* mono-api-info.cs: new program. Given an assembly name, it generates
	an xml file with its public data.

	* mono-api-diff.cs: compares 2 xml files generated with mono-api-info
	and outputs an xml file suitable for building class status pages with
	mono-api.xsl.

	* mono-api.xsl: small modifications to corcompare.xsl to match the new
	file format.

2003-07-12  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* cormissing.xsl: Change percentage to display percentage for all
	sub-members, not just direct members

2003-07-12  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* MissingNameSpace.cs: Fixed the case where a private/ internal class
	that per chance has a class with the same name in the compared
	assembly gets compared -> now only public classes are compared.
	* MissingType: Internal nested types were always compared -> internal
	nested types are never compared

2002-02-25  Nick Drochak  <ndrochak@gol.com>

	* ToDoAssembly.cs: remove unused code 
	* ToDoNamespace.cs: using BindingFlags for GetMembers
	* ToDoType.cs: throw exception if we encounter a member type
	that we didn't expect. Also remove unused property.

