This is my xaml compiler, being written as part of Google's summer of code
program.

Xaml is a language for concisely describing how to connect up a bunch of 
objects. As an example, in the avalon world:
<Window Title="Hi!">
  <Button>Click</Button>
</Window>

Would produce a child of Window where the constructor does this:
this.Title = "Hi!";
Button button = new Button();
window.AddChild(button);
button.AddText("Click");

Except of course it can handle trees of arbitrary depth, so descriptions of
complicated GUIs are not a problem and potentially much more readable than 
the code version.

To use this thing:
cd ../../class/WindowsBase
make install
cd ../PresentationFramework
make install
cd ../../tools/xamlc
make install

That will get everything compiled. There's a demo in the mcs/tools/xamlc/demo
directory; to run it, cd into that directory and do "make run". Stuff should 
happen, along the lines of a program test.exe being generated and run to 
produce this output:

Hello World
IT BEGINS!
Hello World
YYYI'm surrounded!ZZZ
What should I say?

I say I say: INPUTINPUT
I say.


Goodbye.
Goodbye.
Goodbye.
Bye
Bye


Hopefully you can work out how that is produced from the test.xaml file.

In the same directory, "make run2" should demonstrate the runtime creation of
objects from xaml files.
