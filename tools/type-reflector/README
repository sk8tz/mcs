Overview
========
``type-reflector'' is a program similar in spirit to the .NET ``TypeFinder'' 
SDK Sample.  As is often the case with Unix-style programs, it has more
program options and more flexibility.

It allows a regular expression (as understood by 
System.Text.RegularExpressions) to be used for finding types.

It allows a specific list of assemblies to be searched to be specified,
narrowing down the list of assemblies searched for a matching type.

It also allows the types to be viewed according to two different policies.
The "finder" policy dictates how members are found.  There are currently two
such policies:
  explicit - Searches for members by name
  reflection - uses System.Reflection for member lookup

The finder policies often display different results, as "explicit" has had
more work done on it, and "reflection" is dependant upon System.Reflection,
which may or may not be complete, depending on the platform.

The other policy is the "formatter" policy, which dictates how a member is
displayed.  There are currently two such policies:
  default - typically the result of .ToString() on the member reflection object
  csharp - attempts to display the member as if it were from C# source code.
  vb - attempts to display the member as if it were from VB.NET source code.

Finally, it shows (virtually) everything about a type that is available
through the System.Reflection facility.  Everthing from the actual Attributes
specified for a member, to custom attributes, the reflected type, GUID, where
it was declared...  This constitutes a great deal of information that isn't
normally present without writing test programs to view the available
information.

GUI Support
===========
type-reflector has a prototype GUI using Gtk#.  To compile it, run:

  make -f makefile.gnu gui

To run it, pass ``--displayer=gtk'' on the command line:

  type-reflector.exe --displayer-gtk .

