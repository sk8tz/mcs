# [SecuritySafeCritical] needed inside mscorlib to call all [SecurityCritical] methods
# 129 methods

+SSC-M: System.Void Microsoft.Win32.KeyHandler::.ctor(Microsoft.Win32.RegistryKey,System.String)
+SSC-M: System.Void Microsoft.Win32.KeyHandler::Load()
+SSC-M: Microsoft.Win32.RegistryKey Microsoft.Win32.KeyHandler::Probe(Microsoft.Win32.RegistryKey,System.String,System.Boolean)
+SSC-M: System.Void Microsoft.Win32.KeyHandler::Save()
+SSC-M: System.String Microsoft.Win32.KeyHandler::get_UserStore()
+SSC-M: System.Int32 Microsoft.Win32.UnixRegistryApi::SubKeyCount(Microsoft.Win32.RegistryKey)
+SSC-M: System.Void Microsoft.Win32.UnixRegistryApi::DeleteKey(Microsoft.Win32.RegistryKey,System.String,System.Boolean)
+SSC-M: System.String[] Microsoft.Win32.UnixRegistryApi::GetSubKeyNames(Microsoft.Win32.RegistryKey)
+SSC-M: System.Void Mono.Globalization.Unicode.MSCompatUnicodeTable::BuildTailoringTables(System.Globalization.CultureInfo,Mono.Globalization.Unicode.TailoringInfo,Mono.Globalization.Unicode.Contraction[]&,Mono.Globalization.Unicode.Level2Map[]&)
+SSC-M: Mono.Interop.ComInteropProxy Mono.Interop.ComInteropProxy::GetProxy(System.IntPtr,System.Type)
+SSC-M: System.Void Mono.Security.Authenticode.AuthenticodeBase::Open(System.String)
+SSC-M: System.Boolean Mono.Security.Cryptography.KeyPairPersistence::Load()
+SSC-M: System.Void Mono.Security.Cryptography.KeyPairPersistence::Save()
+SSC-M: System.Void Mono.Security.Cryptography.KeyPairPersistence::Remove()
+SSC-M: System.String Mono.Security.Cryptography.KeyPairPersistence::get_UserPath()
+SSC-M: System.String Mono.Security.Cryptography.KeyPairPersistence::get_MachinePath()
+SSC-M: System.Boolean Mono.Security.StrongName::Sign(System.String)
+SSC-M: System.Byte[] Mono.Security.X509.X509Store::Load(System.String)
+SSC-M: System.Boolean Mono.Security.X509.X509Store::CheckStore(System.String,System.Boolean)
+SSC-M: Mono.Security.X509.X509CertificateCollection Mono.Security.X509.X509Store::BuildCertificatesCollection(System.String)
+SSC-M: Mono.Security.X509.X509Stores Mono.Security.X509.X509StoreManager::get_CurrentUser()
+SSC-M: Mono.Security.X509.X509Stores Mono.Security.X509.X509StoreManager::get_LocalMachine()
+SSC-M: System.Void System.__ComObject::.ctor()
+SSC-M: System.Void System.__ComObject::.ctor(System.Type)
+SSC-M: System.Void System.__ComObject::.ctor(System.IntPtr)
+SSC-M: System.Runtime.Remoting.ObjectHandle System.Activator::CreateInstance(System.String,System.String)
+SSC-M: System.Runtime.Remoting.ObjectHandle System.Activator::CreateInstance(System.String,System.String,System.Object[])
+SSC-M: System.String System.AppDomain::get_BaseDirectory()
+SSC-M: System.Reflection.Assembly System.AppDomain::Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
+SSC-M: System.AppDomain System.AppDomain::CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)
+SSC-M: System.AppDomainSetup System.AppDomain::CreateDomainSetup(System.String,System.String,System.Boolean)
+SSC-M: System.Reflection.Assembly System.AppDomain::DoAssemblyResolve(System.String,System.Boolean)
+SSC-M: System.Reflection.Assembly System.AppDomain::DoTypeResolve(System.Object)
+SSC-M: System.Void System.AppDomain/Loader::Load()
+SSC-M: System.String System.AppDomainSetup::GetAppBase(System.String)
+SSC-M: System.String System.AppDomainSetup::get_ConfigurationFile()
+SSC-M: System.String System.AppDomainSetup::get_DynamicBase()
+SSC-M: System.Void System.DateTimeUtils::ZeroPad(System.Text.StringBuilder,System.Int32,System.Int32)
+SSC-M: System.String System.Diagnostics.StackFrame::ToString()
+SSC-M: System.Void System.Diagnostics.StackTrace::.ctor(System.Exception)
+SSC-M: System.Void System.Diagnostics.StackTrace::init_frames(System.Int32,System.Boolean)
+SSC-M: System.String System.Diagnostics.StackTrace::ToString()
+SSC-M: System.String System.Environment::get_StackTrace()
+SSC-M: System.String System.Environment::get_SystemDirectory()
+SSC-M: System.String System.Environment::ReadXdgUserDir(System.String,System.String,System.String,System.String)
+SSC-M: System.String System.Environment::get_GacPath()
+SSC-M: System.String System.Exception::get_Source()
+SSC-M: System.String System.Exception::get_StackTrace()
+SSC-M: System.Reflection.MethodBase System.Exception::get_TargetSite()
+SSC-M: System.IO.DirectoryInfo System.IO.Directory::CreateDirectoriesInternal(System.String)
+SSC-M: System.Void System.IO.Directory::RecursiveDelete(System.String)
+SSC-M: System.Void System.IO.DirectoryInfo::.ctor(System.String,System.Boolean)
+SSC-M: System.Void System.IO.FileInfo::InternalRefresh()
+SSC-M: System.IO.StreamReader System.IO.FileInfo::OpenText()
+SSC-M: System.IO.FileStream System.IO.FileInfo::OpenRead()
+SSC-M: System.Void System.IO.FileStream::.ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean,System.IO.FileOptions)
+SSC-M: System.Void System.IO.FileSystemInfo::Refresh(System.Boolean)
+SSC-M: System.Int32 System.IO.IntPtrStream::Read(System.Byte[],System.Int32,System.Int32)
+SSC-M: System.Void System.IO.IsolatedStorage.IsolatedStorageFile::.ctor(System.String,System.String)
+SSC-M: System.Void System.IO.IsolatedStorage.IsolatedStorageFile::.cctor()
+SSC-M: System.String System.IO.IsolatedStorage.IsolatedStorageFile::TryDirectory(System.String)
+SSC-M: System.IO.IsolatedStorage.IsolatedStorageFile System.IO.IsolatedStorage.IsolatedStorageFile::GetUserStoreForApplication()
+SSC-M: System.IO.IsolatedStorage.IsolatedStorageFile System.IO.IsolatedStorage.IsolatedStorageFile::GetUserStoreForSite()
+SSC-M: System.String System.IO.IsolatedStorage.IsolatedStorageFile::Verify(System.String)
+SSC-M: System.Void System.IO.IsolatedStorage.IsolatedStorageFile::CreateDirectory(System.String)
+SSC-M: System.Void System.IO.IsolatedStorage.IsolatedStorageFile::DeleteDirectory(System.String)
+SSC-M: System.Void System.IO.IsolatedStorage.IsolatedStorageFile::DeleteFile(System.String)
+SSC-M: System.Boolean System.IO.IsolatedStorage.IsolatedStorageFile::DirectoryExists(System.String)
+SSC-M: System.Boolean System.IO.IsolatedStorage.IsolatedStorageFile::FileExists(System.String)
+SSC-M: System.String[] System.IO.IsolatedStorage.IsolatedStorageFile::GetDirectoryNames()
+SSC-M: System.String[] System.IO.IsolatedStorage.IsolatedStorageFile::GetDirectoryNames(System.String)
+SSC-M: System.String[] System.IO.IsolatedStorage.IsolatedStorageFile::GetFileNames()
+SSC-M: System.String[] System.IO.IsolatedStorage.IsolatedStorageFile::GetFileNames(System.String)
+SSC-M: System.Void System.IO.IsolatedStorage.IsolatedStorageFile::Remove()
+SSC-M: System.Void System.IO.IsolatedStorage.IsolatedStorageFile::ReadStoreData()
+SSC-M: System.Void System.IO.IsolatedStorage.IsolatedStorageFile::UpdateStoreData()
+SSC-M: System.String System.IO.Path::WindowsDriveAdjustment(System.String)
+SSC-M: System.String System.IO.Path::InsecureGetFullPath(System.String)
+SSC-M: System.String System.IO.Path::GetPathRoot(System.String)
+SSC-M: System.String System.IO.Path::CanonicalizePath(System.String)
+SSC-M: System.Int32 System.IO.UnmanagedMemoryStream::Read(System.Byte[],System.Int32,System.Int32)
+SSC-M: System.Int32 System.IO.UnmanagedMemoryStream::ReadByte()
+SSC-M: System.Void System.IO.UnmanagedMemoryStream::Write(System.Byte[],System.Int32,System.Int32)
+SSC-M: System.Void System.IO.UnmanagedMemoryStream::WriteByte(System.Byte)
+SSC-M: System.IO.FileStream[] System.Reflection.Assembly::GetFiles()
+SSC-M: System.IO.Stream System.Reflection.Assembly::GetManifestResourceStream(System.String)
+SSC-M: System.Reflection.Assembly System.Reflection.Assembly::GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
+SSC-M: System.Reflection.Assembly System.Reflection.Assembly::GetSatelliteAssemblyNoThrow(System.Globalization.CultureInfo,System.Version)
+SSC-M: System.Void System.Reflection.Assembly::LoadAssemblyPermissions()
+SSC-M: System.Void System.Reflection.Emit.AssemblyBuilder::.ctor(System.Reflection.AssemblyName,System.String,System.Reflection.Emit.AssemblyBuilderAccess,System.Boolean)
+SSC-M: System.Void System.Reflection.Emit.AssemblyBuilder::EmbedResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)
+SSC-M: System.Void System.Reflection.Emit.AssemblyBuilder::DefineUnmanagedResource(System.String)
+SSC-M: System.Void System.Reflection.Emit.AssemblyBuilder::DefineIconResource(System.String)
+SSC-M: System.Void System.Reflection.Emit.AssemblyBuilder::Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)
+SSC-M: System.Void System.Reflection.Emit.AssemblyBuilder::check_name_and_filename(System.String,System.String,System.Boolean)
+SSC-M: System.Void System.Reflection.Emit.ModuleBuilder::Save()
+SSC-M: System.Security.Cryptography.X509Certificates.X509Certificate System.Reflection.Module::GetSignerCertificate()
+SSC-M: System.Resources.ResourceSet System.Resources.ResourceManager::InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)
+SSC-M: System.Resources.MissingManifestResourceException System.Resources.ResourceManager::AssemblyResourceMissing(System.String)
+SSC-M: System.Void System.Resources.ResourceReader::.ctor(System.String)
+SSC-M: System.Void System.Resources.ResourceWriter::.ctor(System.String)
+SSC-M: System.Void System.Resources.RuntimeResourceSet::.ctor(System.IO.Stream)
+SSC-M: System.Void System.Resources.RuntimeResourceSet::.ctor(System.String)
+SSC-M: System.Runtime.Remoting.ObjectHandle System.Runtime.Hosting.ApplicationActivator::CreateInstanceHelper(System.AppDomainSetup)
+SSC-M: System.Runtime.InteropServices.GCHandle System.Runtime.InteropServices.GCHandle::FromIntPtr(System.IntPtr)
+SSC-M: System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Object)
+SSC-M: System.Void System.Runtime.Remoting.Metadata.SoapTypeAttribute::SetReflectionObject(System.Object)
+SSC-M: System.Void System.Runtime.Remoting.RemotingConfiguration::LoadDefaultDelayedChannels()
+SSC-M: System.String System.Runtime.Remoting.SoapServices::GetAssemblyName(System.Reflection.MethodBase)
+SSC-M: System.Void System.Security.Cryptography.CryptoConfig::LoadConfig(System.String,System.Collections.Hashtable,System.Collections.Hashtable)
+SSC-M: System.Void System.Security.Cryptography.X509Certificates.X509Certificate::InitFromHandle(System.IntPtr)
+SSC-M: System.Byte[] System.Security.Cryptography.X509Certificates.X509Certificate::Load(System.String)
+SSC-M: System.Security.Policy.Evidence System.Security.Policy.Evidence::GetDefaultHostEvidence(System.Reflection.Assembly)
+SSC-M: System.Byte[] System.Security.Policy.Hash::GetData()
+SSC-M: System.Void System.Security.Policy.PolicyLevel::LoadFromFile(System.String)
+SSC-M: System.Void System.Security.Policy.PolicyLevel::Save()
+SSC-M: System.Security.Policy.Zone System.Security.Policy.Zone::CreateFromUrl(System.String)
+SSC-M: System.Security.PermissionSet System.Security.SecurityManager::Decode(System.IntPtr,System.Int32)
+SSC-M: System.Int32 System.Text.Encoding::GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
+SSC-M: System.Byte[] System.Text.Encoding::GetBytes(System.String)
+SSC-M: System.Int32 System.Text.UTF32Encoding::GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
+SSC-M: System.Int32 System.Text.UTF7Encoding::GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
+SSC-M: System.Void System.Variant::SetValue(System.Object)
+SSC-M: System.Object System.Variant::GetValue()
+SSC-M: System.Void System.Variant::Clear()
+SSC-M: System.Void System.WeakReference::AllocateHandle(System.Object)
+SSC-M: System.Object System.WeakReference::get_Target()
+SSC-M: System.Void System.WeakReference::set_Target(System.Object)
+SSC-M: System.Void System.WeakReference::Finalize()
